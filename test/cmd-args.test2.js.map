{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "test/cmd-args.test2.coffee"
  ],
  "names": [],
  "mappings": "AAAsB;AAEtB,OAAA;EAAQ,KAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,UAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,OAAR;CAAA,MAAA,gCAJsB;;;AAQtB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,CAAA,GAAI,IAAI,UAAJ,CAAA;EACJ,CAAC,CAAC,cAAF,GAAmB,CAAC,OAAD,CAAA,GAAA;AACpB,QAAA;IAAE,QAAA,GAAW;MACV,OAAA,EAAS,CAAC,GAAD,CADC;MAEV,OAAA,EAAS;QACR,CAAA,EAAG;MADK;IAFC;AAMX,WAAO,OAAA,CAAQ,QAAR,EAAkB,OAAlB;EAPW;EASnB,CAAC,CAAC,KAAF,CAAQ,WAAR,EAAqB;IACpB,CAAA,EAAG,KADiB;IAEpB,CAAA,EAAG,CAAC,WAAD;EAFiB,CAArB;EAIA,CAAC,CAAC,KAAF,CAAQ,cAAR,EAAwB;IACvB,CAAA,EAAG,IADoB;IAEvB,CAAA,EAAG,CAAC,WAAD;EAFoB,CAAxB;SAIA,CAAC,CAAC,KAAF,CAAQ,cAAR,EAAwB;IACvB,CAAA,EAAG,IADoB;IAEvB,CAAA,EAAG,CAAC,WAAD;EAFoB,CAAxB;AAnBA,CAAD,CAAA,CAAA,EARsB;;;AAmCtB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,CAAA,GAAI,IAAI,UAAJ,CAAA;EACJ,CAAC,CAAC,cAAF,GAAmB,CAAC,OAAD,CAAA,GAAA;AACpB,QAAA;IAAE,QAAA,GAAW;MACV,OAAA,EAAS,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CADC;MAEV,MAAA,EAAQ,CAAC,MAAD,CAFE;MAGV,MAAA,EAAQ,CAAC,OAAD,CAHE;MAIV,OAAA,EAAS;QACR,CAAA,EAAG;MADK;IAJC;AAQX,WAAO,OAAA,CAAQ,QAAR,EAAkB,OAAlB;EATW;EAWnB,CAAC,CAAC,KAAF,CAAQ,QAAR,EAAkB;IACjB,CAAA,EAAG,IADc;IAEjB,CAAA,EAAG,IAFc;IAGjB,CAAA,EAAG,CAAC,KAAD,CAHc;EAAA,CAAlB;SAMA,CAAC,CAAC,KAAF,CAAQ,iCAAR,EAA2C;IAC1C,CAAA,EAAG,IADuC;IAE1C,CAAA,EAAG,KAFuC;IAG1C,CAAA,EAAG,IAHuC;IAI1C,CAAA,EAAG,KAJuC;IAK1C,IAAA,EAAM,KALoC;IAM1C,KAAA,EAAO,CANmC;IAO1C,CAAA,EAAG;MAAC,KAAD;MAAO,KAAP;;EAPuC,CAA3C;AAnBA,CAAD,CAAA,CAAA",
  "sourcesContent": [
    "# cmd-args.test.coffee\n\nimport {undef} from '@jdeighan/base-utils'\nimport {UnitTester} from '@jdeighan/base-utils/utest'\nimport {getArgs} from '@jdeighan/base-utils/cmd-args'\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tu = new UnitTester()\n\tu.transformValue = (cmdline) =>\n\t\thOptions = {\n\t\t\tboolean: ['d']\n\t\t\tdefault: {\n\t\t\t\td: false\n\t\t\t\t}\n\t\t\t}\n\t\treturn getArgs(hOptions, cmdline)\n\n\tu.equal 'sveltekit', {\n\t\td: false,\n\t\t_: ['sveltekit']\n\t\t}\n\tu.equal 'sveltekit -d', {\n\t\td: true,\n\t\t_: ['sveltekit']\n\t\t}\n\tu.equal '-d sveltekit', {\n\t\td: true,\n\t\t_: ['sveltekit']\n\t\t}\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tu = new UnitTester()\n\tu.transformValue = (cmdline) =>\n\t\thOptions = {\n\t\t\tboolean: ['a','b','c','h']\n\t\t\tstring: ['name']\n\t\t\tnumber: ['count']\n\t\t\tdefault: {\n\t\t\t\ta: true\n\t\t\t\t}\n\t\t\t}\n\t\treturn getArgs(hOptions, cmdline)\n\n\tu.equal '-c def', {\n\t\ta: true,      # default value\n\t\tc: true,      # explicitly on cmd line\n\t\t_: ['def']    # non-options\n\t\t}\n\n\tu.equal '-c --name=abc --count=5 def ghi', {\n\t\ta: true,          # default value\n\t\tb: false,         # not on cmd line\n\t\tc: true,          # explicitly on cmd line\n\t\th: false,         # not on command line\n\t\tname: 'abc',\n\t\tcount: 5          # returned as a number\n\t\t_: ['def','ghi']  # non-options\n\t\t}\n\t)()"
  ]
}