{
  "version": 3,
  "file": "base-utils.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\base-utils.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# base-utils.test.coffee\n\nimport {u, UnitTester} from '@jdeighan/base-utils/utest'\nimport {\n\tundef, pass, defined, notdefined, alldefined,\n\tll_assert, ll_croak, spaces,\n\tkeys, hasKey, hasAllKeys, hasAnyKey, subkeys,\n\ttabify, untabify, prefixBlock,\n\tescapeStr, OL, OLS,  isHashComment, splitPrefix, hasPrefix,\n\tisString, isNumber, isInteger, isHash, isArray, isBoolean,\n\tisClass, isConstructor, removeKeys, extractMatches,\n\tisFunction, isRegExp, isObject, jsType,\n\tisEmpty, nonEmpty, isNonEmptyString, isIdentifier,\n\tisFunctionName, isIterable, hashFromString,\n\tblockToArray, arrayToBlock, toArray, toBlock,\n\trtrim, words, hasChar, quoted, getOptions, range, rev_range,\n\toneof, uniq, rtrunc, ltrunc, CWS, className,\n\tisArrayOfStrings, isArrayOfHashes, isArrayOfArrays,\n\tforEachLine, mapEachLine, getProxy, sleep, schedule,\n\teachCharInString, runCmd, hit, choose, shuffle,\n\tdeepCopy, timestamp, msSinceEpoch, formatDate, pad,\n\tforEachItem, addToHash, chomp,\n\t} from '@jdeighan/base-utils'\nimport {assert} from '@jdeighan/base-utils/exceptions'\n\nu.equal  undef, undefined\nu.succeeds () -> pass()\nu.truthy pass()\nu.truthy defined(1)\nu.falsy  defined(undefined)\nu.truthy notdefined(undefined)\nu.falsy  notdefined(12)\nu.succeeds () => pass()\nu.succeeds () => assert(12==12, \"BAD\")\n\n# ---------------------------------------------------------------------------\n\nu.truthy isEmpty('')\nu.truthy isEmpty('  \\t\\t')\nu.truthy isEmpty([])\nu.truthy isEmpty({})\n\nu.truthy nonEmpty('a')\nu.truthy nonEmpty('.')\nu.truthy nonEmpty([2])\nu.truthy nonEmpty({width: 2})\n\n# ---------------------------------------------------------------------------\n\na = undef\nb = null\nc = 42\nd = 'dog'\ne = {a: 42}\n\nu.truthy alldefined(c,d,e)\nu.falsy  alldefined(a,b,c,d,e)\nu.falsy  alldefined(a,c,d,e)\nu.falsy  alldefined(b,c,d,e)\nu.equal  deepCopy(e), {a: 42}\n\n# ---------------------------------------------------------------------------\n\nu.equal    {a:1, b:2}, {a:1, b:2}\nu.notequal {a:1, b:2}, {a:1, b:3}\n\n# ---------------------------------------------------------------------------\n\nu.truthy isHashComment('   # something')\nu.truthy isHashComment('   #')\nu.falsy  isHashComment('   abc')\nu.falsy  isHashComment('#abc')\n\nu.truthy isFunction(pass)\n\npassTest = () =>\n\tpass()\nu.succeeds(passTest)\n\nu.truthy defined('')\nu.truthy defined(5)\nu.truthy defined([])\nu.truthy defined({})\nu.falsy  defined(undef)\nu.falsy  defined(null)\n\nu.truthy notdefined(undef)\nu.truthy notdefined(null)\nu.falsy  notdefined('')\nu.falsy  notdefined(5)\nu.falsy  notdefined([])\nu.falsy  notdefined({})\n\n# ---------------------------------------------------------------------------\n\nu.equal splitPrefix(\"abc\"),     [\"\", \"abc\"]\nu.equal splitPrefix(\"\\tabc\"),   [\"\\t\", \"abc\"]\nu.equal splitPrefix(\"\\t\\tabc\"), [\"\\t\\t\", \"abc\"]\nu.equal splitPrefix(\"\"),        [\"\", \"\"]\nu.equal splitPrefix(\"\\t\\t\\t\"),  [\"\", \"\"]\nu.equal splitPrefix(\"\\t \\t\"),   [\"\", \"\"]\nu.equal splitPrefix(\"   \"),     [\"\", \"\"]\n\n# ---------------------------------------------------------------------------\n\nu.falsy  hasPrefix(\"abc\")\nu.truthy hasPrefix(\"   abc\")\n\n# ---------------------------------------------------------------------------\n\nthreeSpaces = spaces(3)\nfourSpaces = spaces(4)\n\nu.equal tabify(\"\"\"\n\tfirst line\n\t#{threeSpaces}second line\n\t#{threeSpaces}#{threeSpaces}third line\n\t\"\"\", 3), \"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n# you don't need to tell it number of spaces\n# it knows from the 1st line that contains spaces\n\nu.equal tabify(\"\"\"\n\tfirst line\n\t#{threeSpaces}second line\n\t#{threeSpaces}#{threeSpaces}third line\n\t\"\"\"), \"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\"\n\nu.equal tabify(\"\"\"\n\tfirst line\n\t#{fourSpaces}second line\n\t#{fourSpaces}#{fourSpaces}third line\n\t\"\"\"), \"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nu.equal untabify(\"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\", 3), \"\"\"\n\tfirst line\n\t#{threeSpaces}second line\n\t#{threeSpaces}#{threeSpaces}third line\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nu.equal untabify(\"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\", 4), \"\"\"\n\tfirst line\n\t#{fourSpaces}second line\n\t#{fourSpaces}#{fourSpaces}third line\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nu.equal prefixBlock(\"\"\"\n\tabc\n\tdef\n\t\"\"\", '--'), \"\"\"\n\t--abc\n\t--def\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nu.equal escapeStr(\"   XXX\\n\"),  \"˳˳˳XXX®\"\nu.equal escapeStr(\"\\t ABC\\n\"),  \"→˳ABC®\"\nu.equal escapeStr(\"X\\nX\\nX\\n\"), \"X®X®X®\"\nu.equal escapeStr(\"XXX\\n\\t\\t\"), \"XXX®→→\"\nu.equal escapeStr(\"XXX\\n  \"),   \"XXX®˳˳\"\n\n(() =>\n\tt = new UnitTester()\n\tt.transformValue = (str) => escapeStr(str)\n\n\tt.equal \"   XXX\\n\",  \"˳˳˳XXX®\"\n\tt.equal \"\\t ABC\\n\",  \"→˳ABC®\"\n\tt.equal \"X\\nX\\nX\\n\", \"X®X®X®\"\n\tt.equal \"XXX\\n\\t\\t\", \"XXX®→→\"\n\tt.equal \"XXX\\n  \",   \"XXX®˳˳\"\n\t)()\n\nhEsc = {\n\t\"\\n\": \"\\\\n\"\n\t\"\\t\": \"\\\\t\"\n\t\"\\\"\": \"\\\\\\\"\"\n\t}\n\nu.equal escapeStr(\"\\thas quote: \\\"\\nnext line\", hEsc),\n\t\"\\\\thas quote: \\\\\\\"\\\\nnext line\"\n\n# ---------------------------------------------------------------------------\n\nu.equal OL(undef), \"undef\"\nu.equal OL(\"\\t\\tabc\\nxyz\"), \"'→→abc®xyz'\"\nu.equal OL({a:1, b:'xyz'}), '{\"a\":1,\"b\":\"xyz\"}'\n\nhProc = {\n\tcode:   (block) -> return \"#{block};\"\n\thtml:   (block) -> return block.replace('<p>', '<p> ').replace('</p>', ' </p>')\n\tScript: (block) -> return elem('script', undef, block, \"\\t\")\n\t}\n\nu.equal OL(hProc), '{\"code\":\"[Function: code]\",\"html\":\"[Function: html]\",\"Script\":\"[Function: Script]\"}'\n\n# ---------------------------------------------------------------------------\n\nu.equal OLS(['abc', 3]), \"'abc',3\"\nu.equal OLS([]), \"\"\nu.equal OLS([undef, {a:1}]), 'undef,{\"a\":1}'\n\n# ---------------------------------------------------------------------------\n\nu.truthy oneof('a', 'b', 'a', 'c')\nu.falsy  oneof('a', 'b', 'c')\n\n# ---------------------------------------------------------------------------\n#        jsTypes:\n\n(() ->\n\tclass NewClass\n\t\tconstructor: (@name = 'bob') ->\n\t\t\t@doIt = pass\n\t\tmeth: (x) ->\n\t\t\treturn 2 * x\n\n\th = {a:1, b:2}\n\tl = [1,2,2]\n\to = new NewClass()\n\tn = 42\n\tn2 = new Number(42)\n\ts = 'simple'\n\ts2 = new String('abc')\n\n\tu.falsy isString(undef)\n\tu.falsy isString(h)\n\tu.falsy isString(l)\n\tu.falsy isString(o)\n\tu.falsy isString(n)\n\tu.falsy isString(n2)\n\n\tu.truthy isString(s)\n\tu.truthy isString(s2)\n\n\tu.truthy isNonEmptyString('abc')\n\tu.truthy isNonEmptyString('abc def')\n\tu.falsy  isNonEmptyString('')\n\tu.falsy  isNonEmptyString('  ')\n\n\tu.truthy isIdentifier('abc')\n\tu.truthy isIdentifier('_Abc')\n\tu.falsy  isIdentifier('abc def')\n\tu.falsy  isIdentifier('abc-def')\n\tu.falsy  isIdentifier('class.method')\n\n\tu.truthy isFunctionName('abc')\n\tu.truthy isFunctionName('_Abc')\n\tu.falsy  isFunctionName('abc def')\n\tu.falsy  isFunctionName('abc-def')\n\tu.falsy  isFunctionName('D()')\n\tu.truthy isFunctionName('class.method')\n\n\tgeneratorFunc = () ->\n\t\tyield 1\n\t\tyield 2\n\t\tyield 3\n\t\treturn\n\n\tu.truthy isIterable(generatorFunc())\n\n\tu.falsy  isNumber(undef)\n\tu.falsy  isNumber(null)\n\tu.truthy isNumber(NaN)\n\tu.falsy  isNumber(h)\n\tu.falsy  isNumber(l)\n\tu.falsy  isNumber(o)\n\tu.truthy isNumber(n)\n\tu.truthy isNumber(n2)\n\tu.falsy  isNumber(s)\n\tu.falsy  isNumber(s2)\n\n\tu.truthy isNumber(42.0, {min: 42.0})\n\tu.falsy  isNumber(42.0, {min: 42.1})\n\tu.truthy isNumber(42.0, {max: 42.0})\n\tu.falsy  isNumber(42.0, {max: 41.9})\n\n\tu.truthy isInteger(42)\n\tu.truthy isInteger(new Number(42))\n\tu.falsy  isInteger('abc')\n\tu.falsy  isInteger({})\n\tu.falsy  isInteger([])\n\tu.truthy isInteger(42, {min:  0})\n\tu.falsy  isInteger(42, {min: 50})\n\tu.truthy isInteger(42, {max: 50})\n\tu.falsy  isInteger(42, {max:  0})\n\n\tu.truthy isHash(h)\n\tu.falsy  isHash(l)\n\tu.falsy  isHash(o)\n\tu.falsy  isHash(n)\n\tu.falsy  isHash(n2)\n\tu.falsy  isHash(s)\n\tu.falsy  isHash(s2)\n\n\tu.falsy  isArray(h)\n\tu.truthy isArray(l)\n\tu.falsy  isArray(o)\n\tu.falsy  isArray(n)\n\tu.falsy  isArray(n2)\n\tu.falsy  isArray(s)\n\tu.falsy  isArray(s2)\n\n\tu.truthy isBoolean(true)\n\tu.truthy isBoolean(false)\n\tu.falsy  isBoolean(42)\n\tu.falsy  isBoolean(\"true\")\n\n\tu.truthy isClass(NewClass)\n\tu.falsy  isClass(o)\n\n\tu.truthy isConstructor(NewClass)\n\tu.falsy  isConstructor(o)\n\n\tu.truthy isFunction(() -> 42)\n\tu.truthy isFunction(() => 42)\n\tu.falsy  isFunction(undef)\n\tu.falsy  isFunction(null)\n\tu.falsy  isFunction(42)\n\tu.falsy  isFunction(n)\n\n\tu.truthy isRegExp(/^abc$/)\n\tu.truthy isRegExp(///^ \\s* where \\s+ areyou $///)\n\tu.falsy  isRegExp(42)\n\tu.falsy  isRegExp('abc')\n\tu.falsy  isRegExp([1,'a'])\n\tu.falsy  isRegExp({a:1, b:'ccc'})\n\tu.falsy  isRegExp(undef)\n\tu.truthy isRegExp(/\\.coffee/)\n\n\tu.falsy  isObject(h)\n\tu.falsy  isObject(l)\n\tu.truthy isObject(o)\n\tu.truthy isObject(o, ['name','doIt'])\n\tu.truthy isObject(o, \"name doIt\")\n\tu.falsy  isObject(o, ['name','doIt','missing'])\n\tu.falsy  isObject(o, \"name doIt missing\")\n\tu.falsy  isObject(n)\n\tu.falsy  isObject(n2)\n\tu.falsy  isObject(s)\n\tu.falsy  isObject(s2)\n\tu.truthy isObject(o, \"name doIt\")\n\tu.truthy isObject(o, \"name doIt meth\")\n\tu.truthy isObject(o, \"name &doIt &meth\")\n\tu.falsy  isObject(o, \"&name\")\n\n\tu.equal jsType(undef), [undef, undef]\n\tu.equal jsType(null),  [undef, 'null']\n\tu.equal jsType(s), ['string', undef]\n\tu.equal jsType(''), ['string', 'empty']\n\tu.equal jsType(\"\\t\\t\"), ['string', 'empty']\n\tu.equal jsType(\"  \"), ['string', 'empty']\n\tu.equal jsType(h), ['hash', undef]\n\tu.equal jsType({}), ['hash', 'empty']\n\tu.equal jsType(3.14159), ['number', undef]\n\tu.equal jsType(42), ['number', 'integer']\n\tu.equal jsType(true), ['boolean', undef]\n\tu.equal jsType(false), ['boolean', undef]\n\tu.equal jsType(h), ['hash', undef]\n\tu.equal jsType({}), ['hash', 'empty']\n\tu.equal jsType(l), ['array', undef]\n\tu.equal jsType([]), ['array', 'empty']\n\tu.equal jsType(/abc/), ['regexp', undef]\n\n\tfunc1 = (x) ->\n\t\treturn\n\n\tfunc2 = (x) =>\n\t\treturn\n\n\t# --- NOTE: regular functions can't be distinguished from constructors\n\tu.equal(jsType(func1), ['class', undef])\n\n\tu.equal jsType(func2), ['function', undef]\n\tu.equal jsType(NewClass), ['class', undef]\n\tu.equal jsType(o), ['object', undef]\n\t)()\n\n# ---------------------------------------------------------------------------\n\nu.equal blockToArray(undef), []\nu.equal blockToArray(''), []\nu.equal blockToArray('a'), ['a']\nu.equal blockToArray(\"a\\nb\"), ['a','b']\nu.equal blockToArray(\"a\\r\\nb\"), ['a','b']\nu.equal blockToArray(\"abc\\nxyz\"), [\n\t'abc'\n\t'xyz'\n\t]\n\nu.equal blockToArray(\"abc\\nxyz\"), [\n\t'abc'\n\t'xyz'\n\t]\n\nu.equal blockToArray(\"abc\\n\\nxyz\"), [\n\t'abc'\n\t''\n\t'xyz'\n\t]\n\n# ---------------------------------------------------------------------------\n\nu.equal toArray(\"abc\\ndef\"), ['abc','def']\nu.equal toArray(['a','b']), ['a','b']\n\nu.equal toArray([\"a\\nb\",\"c\\nd\"]), ['a','b','c','d']\n\n# ---------------------------------------------------------------------------\n\nu.equal arrayToBlock(undef), ''\nu.equal arrayToBlock([]), ''\nu.equal arrayToBlock([undef]), ''\nu.equal arrayToBlock(['a  ','b\\t\\t']), \"a\\nb\"\nu.equal arrayToBlock(['a','b','c']), \"a\\nb\\nc\"\nu.equal arrayToBlock(['a',undef,'b','c']), \"a\\nb\\nc\"\nu.equal arrayToBlock([undef,'a','b','c',undef]), \"a\\nb\\nc\"\n\n# ---------------------------------------------------------------------------\n\nu.equal toBlock(['abc','def']), \"abc\\ndef\"\nu.equal toBlock(\"abc\\ndef\"), \"abc\\ndef\"\n\n# ---------------------------------------------------------------------------\n\nu.equal rtrim(\"abc\"), \"abc\"\nu.equal rtrim(\"  abc\"), \"  abc\"\nu.equal rtrim(\"abc  \"), \"abc\"\nu.equal rtrim(\"  abc  \"), \"  abc\"\n\n# ---------------------------------------------------------------------------\n\nu.equal words(''), []\nu.equal words('  \\t\\t'), []\nu.equal words('a b c'), ['a', 'b', 'c']\nu.equal words('  a   b   c  '), ['a', 'b', 'c']\nu.equal words('a b', 'c d'), ['a', 'b', 'c', 'd']\nu.equal words(' my word ', ' is  word  '), ['my', 'word', 'is', 'word']\n\nu.truthy hasChar('abc', 'b')\nu.falsy  hasChar('abc', 'x')\nu.falsy  hasChar(\"\\t\\t\", ' ')\n\n# ---------------------------------------------------------------------------\n\nu.equal quoted('abc'), \"'abc'\"\nu.equal quoted('\"abc\"'), \"'\\\"abc\\\"'\"\nu.equal quoted(\"'abc'\"), \"\\\"'abc'\\\"\"\nu.equal quoted(\"'\\\"abc\\\"'\"), \"<'\\\"abc\\\"'>\"\nu.equal quoted(\"'\\\"<abc>\\\"'\"), \"<'\\\"<abc>\\\"'>\"\n\n# ---------------------------------------------------------------------------\n\nu.equal getOptions(), {}\nu.equal getOptions(undef, {x:1}), {x:1}\nu.equal getOptions({x:1}, {x:3,y:4}), {x:1,y:4}\nu.equal getOptions('asText'), {asText: true}\nu.equal getOptions('!binary'), {binary: false}\nu.equal getOptions('label=this'), {label: 'this'}\nu.equal getOptions('width=42'), {width: 42}\nu.equal getOptions('asText !binary label=this'), {\n\tasText: true\n\tbinary: false\n\tlabel: 'this'\n\t}\n\n# ---------------------------------------------------------------------------\n\nu.equal range(3), [0,1,2]\nu.equal rev_range(3), [2,1,0]\n\n# ---------------------------------------------------------------------------\n\nu.truthy isHashComment('#')\nu.truthy isHashComment('# a comment')\nu.truthy isHashComment('#\\ta comment')\nu.falsy  isHashComment('#comment')\nu.falsy  isHashComment('')\nu.falsy  isHashComment('a comment')\n\n# ---------------------------------------------------------------------------\n\nu.truthy isEmpty('')\nu.truthy isEmpty('  \\t\\t')\nu.truthy isEmpty([])\nu.truthy isEmpty({})\n\nu.truthy nonEmpty('a')\nu.truthy nonEmpty('.')\nu.truthy nonEmpty([2])\nu.truthy nonEmpty({width: 2})\n\nu.truthy isNonEmptyString('abc')\nu.falsy  isNonEmptyString(undef)\nu.falsy  isNonEmptyString('')\nu.falsy  isNonEmptyString('   ')\nu.falsy  isNonEmptyString(\"\\t\\t\\t\")\nu.falsy  isNonEmptyString(5)\n\n# ---------------------------------------------------------------------------\n\nu.truthy oneof('a', 'a', 'b', 'c')\nu.truthy oneof('b', 'a', 'b', 'c')\nu.truthy oneof('c', 'a', 'b', 'c')\nu.falsy  oneof('d', 'a', 'b', 'c')\nu.falsy  oneof('x')\n\n# ---------------------------------------------------------------------------\n\nu.equal uniq([1,2,2,3,3]), [1,2,3]\nu.equal uniq(['a','b','b','c','c']),['a','b','c']\n\n# ---------------------------------------------------------------------------\n\nu.equal rtrim(\"abc\"), \"abc\"\nu.equal rtrim(\"  abc\"), \"  abc\"\nu.equal rtrim(\"abc  \"), \"abc\"\nu.equal rtrim(\"  abc  \"), \"  abc\"\n\n# ---------------------------------------------------------------------------\n\nu.equal words('a b c'), ['a', 'b', 'c']\nu.equal words('  a   b   c  '), ['a', 'b', 'c']\n\n# ---------------------------------------------------------------------------\n\nu.equal escapeStr(\"\\t\\tXXX\\n\"), \"→→XXX®\"\nhEsc = {\n\t\"\\n\": \"\\\\n\"\n\t\"\\t\": \"\\\\t\"\n\t\"\\\"\": \"\\\\\\\"\"\n\t}\nu.equal escapeStr(\"\\thas quote: \\\"\\nnext line\", hEsc), \\\n\t\"\\\\thas quote: \\\\\\\"\\\\nnext line\"\n\n# ---------------------------------------------------------------------------\n\nu.equal rtrunc('/user/lib/.env', 5), '/user/lib'\nu.equal ltrunc('abcdefg', 3), 'defg'\n\nu.equal CWS(\"\"\"\n\t\tabc\n\t\tdef\n\t\t\t\tghi\n\t\t\"\"\"), \"abc def ghi\"\n\n# ---------------------------------------------------------------------------\n\nu.truthy isArrayOfStrings([])\nu.truthy isArrayOfStrings(['a','b','c'])\nu.truthy isArrayOfStrings(['a',undef, null, 'b'])\n\n# ---------------------------------------------------------------------------\n\nu.truthy isArrayOfArrays([])\nu.truthy isArrayOfArrays([[], []])\nu.truthy isArrayOfArrays([[1,2], []])\nu.truthy isArrayOfArrays([[1,2,[1,2,3]], []])\nu.truthy isArrayOfArrays([[1,2], undef, null, []])\n\nu.falsy isArrayOfArrays({})\nu.falsy isArrayOfArrays([1,2,3])\nu.falsy isArrayOfArrays([[1,2,[3,4]], 4])\nu.falsy isArrayOfArrays([[1,2,[3,4]], [], {a:1,b:2}])\n\nu.truthy isArrayOfArrays([[1,2],[3,4],[4,5]], 2)\nu.falsy  isArrayOfArrays([[1,2],[3],[4,5]], 2)\nu.falsy  isArrayOfArrays([[1,2],[3,4,5],[4,5]], 2)\n\n# ---------------------------------------------------------------------------\n\nu.truthy isArrayOfHashes([])\nu.truthy isArrayOfHashes([{}, {}])\nu.truthy isArrayOfHashes([{a:1, b:2}, {}])\nu.truthy isArrayOfHashes([{a:1, b:2, c: [1,2,3]}, {}])\nu.truthy isArrayOfHashes([{a:1, b:2}, undef, null, {}])\n\nu.falsy isArrayOfHashes({})\nu.falsy isArrayOfHashes([1,2,3])\nu.falsy isArrayOfHashes([{a:1, b:2, c: [1,2,3]}, 4])\nu.falsy isArrayOfHashes([{a:1, b:2, c: [1,2,3]}, {}, [1,2]])\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tclass NewClass\n\t\tconstructor: (@name = 'bob') ->\n\t\t\tpass\n\t\tdoIt: () ->\n\t\t\tpass\n\n\th = {a:1, b:2}\n\tl = [1,2,2]\n\to = new NewClass()\n\tn = 42\n\tn2 = new Number(42)\n\ts = 'u'\n\ts2 = new String('abc')\n\n\tu.truthy isHash(h)\n\tu.falsy isHash(l)\n\tu.falsy isHash(o)\n\tu.falsy isHash(n)\n\tu.falsy isHash(n2)\n\tu.falsy isHash(s)\n\tu.falsy isHash(s2)\n\n\tu.falsy isArray(h)\n\tu.truthy isArray(l)\n\tu.falsy isArray(o)\n\tu.falsy isArray(n)\n\tu.falsy isArray(n2)\n\tu.falsy isArray(s)\n\tu.falsy isArray(s2)\n\n\tu.falsy isString(undef)\n\tu.falsy isString(h)\n\tu.falsy isString(l)\n\tu.falsy isString(o)\n\tu.falsy isString(n)\n\tu.falsy isString(n2)\n\tu.truthy isString(s)\n\tu.truthy isString(s2)\n\n\tu.falsy isObject(h)\n\tu.falsy isObject(l)\n\tu.truthy isObject(o)\n\tu.truthy isObject(o, ['name','doIt'])\n\tu.falsy isObject(o, ['name','doIt','missing'])\n\tu.falsy isObject(n)\n\tu.falsy isObject(n2)\n\tu.falsy isObject(s)\n\tu.falsy isObject(s2)\n\n\tu.falsy isNumber(h)\n\tu.falsy isNumber(l)\n\tu.falsy isNumber(o)\n\tu.truthy isNumber(n)\n\tu.truthy isNumber(n2)\n\tu.falsy isNumber(s)\n\tu.falsy isNumber(s2)\n\n\tu.truthy isNumber(42.0, {min: 42.0})\n\tu.falsy isNumber(42.0, {min: 42.1})\n\tu.truthy isNumber(42.0, {max: 42.0})\n\tu.falsy isNumber(42.0, {max: 41.9})\n\t)()\n\n# ---------------------------------------------------------------------------\n\nu.truthy isFunction(() -> pass)\nu.falsy isFunction(23)\n\nu.truthy isInteger(42)\nu.truthy isInteger(new Number(42))\nu.falsy isInteger('abc')\nu.falsy isInteger({})\nu.falsy isInteger([])\nu.truthy isInteger(42, {min:  0})\nu.falsy isInteger(42, {min: 50})\nu.truthy isInteger(42, {max: 50})\nu.falsy isInteger(42, {max:  0})\n\n# ---------------------------------------------------------------------------\n\nu.equal OL(undef), \"undef\"\nu.equal OL(\"\\t\\tabc\\nxyz\"), \"'→→abc®xyz'\"\nu.equal OL({a:1, b:'xyz'}), '{\"a\":1,\"b\":\"xyz\"}'\n\n# ---------------------------------------------------------------------------\n\nu.equal CWS(\"\"\"\n\t\ta u\n\t\terror message\n\t\t\"\"\"), \"a u error message\"\n\n# ---------------------------------------------------------------------------\n# test isRegExp()\n\nu.truthy isRegExp(/^abc$/)\nu.truthy isRegExp(///^\n\t\t\\s*\n\t\twhere\n\t\t\\s+\n\t\tareyou\n\t\t$///)\nu.falsy isRegExp(42)\nu.falsy isRegExp('abc')\nu.falsy isRegExp([1,'a'])\nu.falsy isRegExp({a:1, b:'ccc'})\nu.falsy isRegExp(undef)\n\nu.truthy isRegExp(/\\.coffee/)\n\n# ---------------------------------------------------------------------------\n\nu.equal extractMatches(\"..3 and 4 plus 5\", /\\d+/g, parseInt),\n\t[3, 4, 5]\nu.equal extractMatches(\"And This Is A String\", /A/g), ['A','A']\n\n# ---------------------------------------------------------------------------\n\nu.truthy notdefined(undef)\nu.truthy notdefined(null)\nu.truthy defined('')\nu.truthy defined(5)\nu.truthy defined([])\nu.truthy defined({})\n\nu.falsy defined(undef)\nu.falsy defined(null)\nu.falsy notdefined('')\nu.falsy notdefined(5)\nu.falsy notdefined([])\nu.falsy notdefined({})\n\n# ---------------------------------------------------------------------------\n\nu.truthy isIterable([])\nu.truthy isIterable(['a','b'])\n\ngen = () ->\n\tyield 1\n\tyield 2\n\tyield 3\n\treturn\n\nu.truthy isIterable(gen())\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tclass MyClass\n\t\tconstructor: (str) ->\n\t\t\t@mystr = str\n\n\tu.equal className(MyClass), 'MyClass'\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\nu.equal getOptions('a b c'), {'a':true, 'b':true, 'c':true}\nu.equal getOptions('abc'), {'abc':true}\nu.equal getOptions({'a':true, 'b':false, 'c':42}), {'a':true, 'b':false, 'c':42}\nu.equal getOptions(), {}\n\n# ---------------------------------------------------------------------------\n# --- test forEachLine\n\n(() =>\n\tlResult = []\n\tblock = \"\"\"\n\t\tabc\n\t\tdef\n\t\tghi\n\t\t\"\"\"\n\tforEachLine block, (line) =>\n\t\tlResult.push line.toUpperCase()\n\t\treturn false\n\tu.equal lResult, ['ABC','DEF', 'GHI']\n\t)()\n\n(() =>\n\tlResult = []\n\tblock = \"\"\"\n\t\tabc\n\t\tdef\n\t\tghi\n\t\t\"\"\"\n\tforEachLine block, (line) =>\n\t\tif (line == 'ghi')\n\t\t\treturn true\n\t\tlResult.push line.toUpperCase()\n\t\treturn false\n\n\tu.equal lResult, ['ABC','DEF']\n\t)()\n\n(() =>\n\tlResult = []\n\titem = ['abc','def','ghi']\n\tforEachLine item, (line) =>\n\t\tlResult.push line.toUpperCase()\n\t\treturn false\n\tu.equal lResult, ['ABC','DEF', 'GHI']\n\t)()\n\n(() =>\n\tlResult = []\n\titem = ['abc','def','ghi']\n\tforEachLine item, (line) =>\n\t\tif (line == 'ghi')\n\t\t\treturn true\n\t\tlResult.push line.toUpperCase()\n\t\treturn false\n\n\tu.equal lResult, ['ABC','DEF']\n\t)()\n\n(() =>\n\tlResult = []\n\titem = ['abc','def','ghi']\n\tforEachLine item, (line, hInfo) =>\n\t\tif (line == 'ghi')\n\t\t\treturn true\n\t\tlResult.push \"#{hInfo.lineNum} #{line.toUpperCase()} #{hInfo.nextLine}\"\n\t\treturn false\n\n\tu.equal lResult, ['1 ABC def','2 DEF ghi']\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test mapEachLine\n\n(() =>\n\tblock = \"\"\"\n\t\tabc\n\t\tdef\n\t\tghi\n\t\t\"\"\"\n\tnewblock = mapEachLine block, (line) =>\n\t\treturn line.toUpperCase()\n\tu.equal newblock, \"\"\"\n\t\tABC\n\t\tDEF\n\t\tGHI\n\t\t\"\"\"\n\t)()\n\n(() =>\n\tblock = \"\"\"\n\t\tabc\n\t\tdef\n\t\tghi\n\t\t\"\"\"\n\tnewblock = mapEachLine block, (line) =>\n\t\tif (line == 'def')\n\t\t\treturn undef\n\t\telse\n\t\t\treturn line.toUpperCase()\n\tu.equal newblock, \"\"\"\n\t\tABC\n\t\tGHI\n\t\t\"\"\"\n\t)()\n\n(() =>\n\titem = ['abc','def','ghi']\n\tnewblock = mapEachLine item, (line) =>\n\t\treturn line.toUpperCase()\n\tu.equal newblock, [\n\t\t'ABC'\n\t\t'DEF'\n\t\t'GHI'\n\t\t]\n\t)()\n\n(() =>\n\titem = ['abc','def','ghi']\n\tnewblock = mapEachLine item, (line) =>\n\t\tif (line == 'def')\n\t\t\treturn undef\n\t\telse\n\t\t\treturn line.toUpperCase()\n\tu.equal newblock, [\n\t\t'ABC'\n\t\t'GHI'\n\t\t]\n\t)()\n\n(() =>\n\titem = ['abc','def','ghi']\n\tnewblock = mapEachLine item, (line, hInfo) =>\n\t\tif (line == 'def')\n\t\t\treturn undef\n\t\telse if defined(hInfo.nextLine)\n\t\t\treturn \"#{hInfo.lineNum} #{line.toUpperCase()} #{hInfo.nextLine}\"\n\t\telse\n\t\t\treturn \"#{hInfo.lineNum} #{line.toUpperCase()}\"\n\tu.equal newblock, [\n\t\t'1 ABC def'\n\t\t'3 GHI'\n\t\t]\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test removeKeys\n\n(() =>\n\thAST = {\n\t\tbody: [\n\t\t\t{\n\t\t\t\tdeclarations: Array [{start:0}],\n\t\t\t\tend: 11,\n\t\t\t\tkind: 'let',\n\t\t\t\tstart: 0,\n\t\t\t\ttype: 'VariableDeclaration',\n\t\t\t\t},\n\t\t\t],\n\t\tend: 11,\n\t\tsourceType: 'script',\n\t\tstart: 0,\n\t\ttype: 'Program',\n\t\t}\n\n\tu.equal removeKeys(hAST, ['start','end']), {\n\t\tbody: [\n\t\t\t{\n\t\t\t\tdeclarations: Array [{}],\n\t\t\t\tkind: 'let',\n\t\t\t\ttype: 'VariableDeclaration',\n\t\t\t\t},\n\t\t\t],\n\t\tsourceType: 'script',\n\t\ttype: 'Program',\n\t\t}\n\n\t)()\n\n(() =>\n\thAST = {\n\t\tbody: [\n\t\t\t{\n\t\t\t\tdeclarations: Array [{start:0}],\n\t\t\t\tend: 12,\n\t\t\t\tkind: 'let',\n\t\t\t\tstart: 0,\n\t\t\t\ttype: 'VariableDeclaration',\n\t\t\t\t},\n\t\t\t],\n\t\tend: 12,\n\t\tsourceType: 'script',\n\t\tstart: 0,\n\t\ttype: 'Program',\n\t\t}\n\n\tu.equal removeKeys(hAST, ['start','end']), {\n\t\tbody: [\n\t\t\t{\n\t\t\t\tdeclarations: Array [{}],\n\t\t\t\tkind: 'let',\n\t\t\t\ttype: 'VariableDeclaration',\n\t\t\t\t},\n\t\t\t],\n\t\tsourceType: 'script',\n\t\ttype: 'Program',\n\t\t}\n\n\t)()\n\n# ---------------------------------------------------------------------------\n# test getProxy()\n\n(() =>\n\thToDo = {\n\t\ttask: 'go shopping'\n\t\tnotes: 'broccoli, milk'\n\t\t}\n\n\t# ..........................................................\n\n\th = getProxy hToDo, {\n\n\t\tget: (obj, prop, value) ->\n\n\t\t\treturn value.toUpperCase() # return in upper case\n\n\t\tset: (obj, prop, value) ->\n\t\t\t# --- only allow setting tasks to 'do <something>'\n\n\t\t\tif (prop == 'task') && (value.indexOf('do ') != 0)\n\t\t\t\treturn undef\n\t\t\telse\n\t\t\t\treturn value\n\t\t}\n\n\tu.equal hToDo.task, 'go shopping'\n\tu.equal h.task, 'GO SHOPPING'\n\n\th.task = 'do something'\n\tu.equal hToDo.task, 'do something'\n\tu.equal h.task, 'DO SOMETHING'\n\n\th.task = 'nothing'\n\tu.equal hToDo.task, 'do something'\n\tu.equal h.task, 'DO SOMETHING'\n\n\t)()\n\n# ---------------------------------------------------------------------------\n# test doDelayed()\n\n(() =>\n\tlLines = undef\n\tLOG = (str) =>\n\t\tlLines.push str\n\n\trun1 = () =>\n\t\tlLines = []\n\t\tschedule 1, 1, LOG, 'abc'\n\t\tschedule 2, 2, LOG, 'def'\n\t\tawait sleep 5\n\t\tschedule 3, 1, LOG, 'ghi'\n\t\tawait sleep 5\n\t\treturn lLines.join(',')\n\n\tu.equal await run1(), 'abc,def,ghi'\n\t)()\n\n(() =>\n\tlLines = undef\n\tLOG = (str) =>\n\t\tlLines.push str\n\n\trun2 = () =>\n\n\t\tlLines = []\n\t\tschedule 1, 1, LOG, 'abc'\n\t\tschedule 2, 2, LOG, 'def'\n\t\tschedule 3, 1, LOG, 'ghi'\n\t\tawait sleep 5\n\t\treturn lLines.join(',')\n\n\tu.equal await run2(), 'def,ghi'\n\t)()\n\n# ---------------------------------------------------------------------------\n# test eachCharInString()\n\nu.truthy eachCharInString 'ABC', (ch) => ch == ch.toUpperCase()\nu.falsy  eachCharInString 'abc', (ch) => ch == ch.toUpperCase()\nu.falsy  eachCharInString 'AbC', (ch) => ch == ch.toUpperCase()\n\n# ---------------------------------------------------------------------------\n# test runCmd()\n\nu.equal runCmd(\"echo abc\"), \"abc\\r\\n\"\n\n# ---------------------------------------------------------------------------\n# test choose()\n\nlItems = ['apple','orange','pear']\nu.truthy lItems.includes(choose(lItems))\nu.truthy lItems.includes(choose(lItems))\nu.truthy lItems.includes(choose(lItems))\n\n# ---------------------------------------------------------------------------\n# test shuffle()\n\nlShuffled = deepCopy(lItems)\nshuffle(lShuffled)\nu.truthy lShuffled.includes('apple')\nu.truthy lShuffled.includes('orange')\nu.truthy lShuffled.includes('pear')\nu.truthy lShuffled.length == lItems.length\n\n# ---------------------------------------------------------------------------\n# test some date functions\n\ndateStr = '2023-01-01 05:00:00'\nu.equal timestamp(dateStr), \"1/1/2023 5:00:00 AM\"\nu.equal msSinceEpoch(dateStr), 1672567200000\nu.equal formatDate(dateStr), \"Jan 1, 2023\"\n\n\n# ---------------------------------------------------------------------------\n# test pad()\n\nu.equal pad(23, 5), \"   23\"\nu.equal pad(23, 5, 'justify=left'), '23   '\nu.equal pad('abc', 6), 'abc   '\nu.equal pad('abc', 6, 'justify=center'), ' abc  '\nu.equal pad(true, 3), 'true'\nu.equal pad(false, 3, 'truncate'), 'fal'\n\n# ---------------------------------------------------------------------------\n# test keys(), hasKey(), hasAllKeys(), hasAnyKey(), subkeys()\n\nh = {\n\t'2023-Nov': {\n\t\tDining: {\n\t\t\tamt: 200\n\t\t\t}\n\t\tHardware: {\n\t\t\tamt: 50\n\t\t\t}\n\t\t}\n\t'2023-Dec': {\n\t\tDining: {\n\t\t\tamt: 300\n\t\t\t}\n\t\tInsurance: {\n\t\t\tamt: 150\n\t\t\t}\n\t\t}\n\t}\n\nu.equal keys(h), ['2023-Nov','2023-Dec']\nu.truthy hasKey(h, '2023-Nov')\nu.falsy hasKey(h, '2023-Oct')\nu.equal subkeys(h), ['Dining','Hardware','Insurance']\n\nu.truthy hasAllKeys(h, '2023-Nov', '2023-Dec')\nu.truthy hasAllKeys(h, '2023-Nov')\nu.falsy hasAllKeys(h, '2023-Oct', '2023-Nov', '2023-Dec')\n\nu.truthy hasAnyKey(h, '2023-Oct', '2023-Nov', '2023-Dec')\nu.truthy hasAnyKey(h, '2023-Oct', '2023-Nov')\nu.falsy hasAnyKey(h, '2023-Jan', '2023-Feb', '2023-Mar')\n\n# ---------------------------------------------------------------------------\n\nu.equal keys({a:1, b:2},{c:3, b:5}), ['a','b','c']\n\n(() =>\n\thJan = {\n\t\tGas: 210\n\t\tDining: 345\n\t\tInsurance: 910\n\t\t}\n\thFeb = {\n\t\tInsurance: 450\n\t\tDining: 440\n\t\t}\n\thMar = {\n\t\tDining: 550\n\t\tGas: 200\n\t\tStarbucks: 125\n\t\t}\n\tu.equal keys(hJan, hFeb, hMar), [\n\t\t'Gas'\n\t\t'Dining'\n\t\t'Insurance'\n\t\t'Starbucks'\n\t\t]\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test forEachItem()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tresult = forEachItem lWords, (item, h) =>\n\t\treturn item\n\tu.equal result, lWords\n\t)()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tresult = forEachItem lWords, (item, h) =>\n\t\tif (item == 'highway')\n\t\t\treturn undef\n\t\telse\n\t\t\treturn item\n\tu.equal result, ['bridge', 'garbage']\n\t)()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tresult = forEachItem lWords, (item, h) =>\n\t\treturn item.toUpperCase()\n\tu.equal result, ['BRIDGE', 'HIGHWAY', 'GARBAGE']\n\t)()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tresult = forEachItem lWords, (item, h) =>\n\t\tif (item == 'garbage')\n\t\t\tthrow 'stop'\n\t\treturn item\n\tu.equal result, ['bridge', 'highway']\n\t)()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tresult = forEachItem lWords, (item, h) =>\n\t\tif (h._index == 2)\n\t\t\tthrow 'stop'\n\t\treturn item\n\tu.equal result, ['bridge', 'highway']\n\t)()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tu.throws () =>\n\t\tresult = forEachItem lWords, (item, h) =>\n\t\t\tthrow new Error(\"unknown error\")\n\t)()\n\n(() =>\n\tcountGenerator = () ->\n\t\tyield 1\n\t\tyield 2\n\t\tyield 3\n\t\tyield 4\n\t\treturn\n\n\tcallback = (item, hContext) =>\n\t\tif (item > 2)\n\t\t\treturn \"#{hContext.label} #{item}\"\n\t\telse\n\t\t\treturn undef\n\n\tresult = forEachItem countGenerator(), callback, {label: 'X'}\n\tu.equal result, ['X 3', 'X 4']\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\th = {}\n\taddToHash h, [2024, 'Mar', 'Eat Out', 'Starbucks'], 23\n\tu.equal h[2024]['Mar']['Eat Out']['Starbucks'], 23.00\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test chomp()\n\nu.equal chomp('abc'), 'abc'\nu.equal chomp('abc\\n'), 'abc'\nu.equal chomp('abc\\r\\n'), 'abc'\n\n"
  ]
}