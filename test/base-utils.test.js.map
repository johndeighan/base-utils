{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "test/base-utils.test.coffee"
  ],
  "names": [],
  "mappings": "AAAwB;AAAA,IAAA,QAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,UAAA,EAAA,GAAA,EAAA,aAAA,EAAA,IAAA,EAAA,MAAA,EAAA,SAAA,EAAA,CAAA,EAAA,QAAA,EAAA;;AAExB,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB;;AACA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB,EALwB;;;;AAUxB,KAAA,CAAO,KAAP,EAAc,MAAd,EAVwB;;;;;;AAiBxB,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,MAAA,CAAO,CAAA,GAAE,CAAF,KAAK,CAAZ,EAAe,KAAf;AAAN,CAAT;;AACA,KAAA,CAAS,CAAA,CAAA,GAAA;SAAM,MAAA,CAAO,CAAA,GAAE,CAAF,KAAK,CAAZ,EAAe,KAAf;AAAN,CAAT,EAlBwB;;;;;;AAyBxB,KAAA,CAAM,CAAA,CAAA,GAAA;SAAM,KAAA,CAAM,KAAN;AAAN,CAAN,EAzBwB;;;;AA8BxB,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,IAAA,CAAA;AAAN,CAAT;;AACA,QAAA,CAAS,QAAA,CAAA,CAAA;SAAM,IAAA,CAAA;AAAN,CAAT;;AACA,MAAA,CAAO,IAAA,CAAA,CAAP,EAhCwB;;;;AAqCxB,MAAA,CAAO,OAAA,CAAQ,CAAR,CAAP;;AACA,KAAA,CAAO,OAAA,CAAQ,MAAR,CAAP;;AACA,KAAA,CAAO,OAAA,CAAQ,IAAR,CAAP,EAvCwB;;;;AA4CxB,MAAA,CAAO,UAAA,CAAW,MAAX,CAAP;;AACA,KAAA,CAAO,UAAA,CAAW,EAAX,CAAP,EA7CwB;;;;AAkDxB,MAAA,CAAO,UAAA,CAAW,EAAX,EAAe,KAAf,EAAsB,EAAtB,EAA0B,CAAA,CAA1B,CAAP;;AACA,KAAA,CAAO,UAAA,CAAW,EAAX,EAAe,KAAf,EAAsB,EAAtB,EAA0B,CAAA,CAA1B,EAA8B,KAA9B,CAAP,EAnDwB;;;;AAwDxB,KAAA,CAAM,WAAA,CAAY,KAAZ,EAAmB,EAAnB,CAAN,EAA8B,KAA9B;;AACA,KAAA,CAAM,WAAA,CAAY,SAAZ,EAAuB,CAAvB,CAAN,EAAiC,OAAjC,EAzDwB;;;;;;AAgExB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,KAAA,EAAA;EAAC,KAAA,CAAM,SAAA,CAAU,UAAV,CAAN,EAA8B,SAA9B;EACA,KAAA,CAAM,SAAA,CAAU,UAAV,CAAN,EAA8B,QAA9B;EACA,KAAA,CAAM,SAAA,CAAU,WAAV,CAAN,EAA8B,QAA9B;EACA,KAAA,CAAM,SAAA,CAAU,WAAV,CAAN,EAA8B,QAA9B;EACA,KAAA,CAAM,SAAA,CAAU,SAAV,CAAN,EAA8B,QAA9B;EAEA,KAAA,GAAQ;IACP,IAAA,EAAM,KADC;IAEP,IAAA,EAAM,KAFC;IAGP,IAAA,EAAM;EAHC;EAMR,KAAA,CAAM,SAAA,CAAU,4BAAV,EAAwC,KAAxC,CAAN,EACC,gCADD;EAGA,KAAA,GAAQ;IACP,GAAA,EAAK,KADE;IAEP,GAAA,EAAK;EAFE;SAIR,KAAA,CAAM,SAAA,CAAU,OAAV,EAAmB,KAAnB,CAAN,EAAiC,WAAjC;AApBA,CAAD,CAAA,CAAA,EAhEwB;;;;AA0FxB,KAAA,CAAM,MAAA,CAAO,KAAP,CAAN,EAAqB,OAArB;;AACA,KAAA,CAAM,MAAA,CAAO,QAAP,CAAN,EAAwB,WAAxB;;AACA,KAAA,CAAM,MAAA,CAAO,2BAAP,CAAN,EACE,4BADF;;AAEA,KAAA,CAAM,MAAA,CAAO,6BAAP,CAAN,EACE,kCADF,EA9FwB;;;;;AAqGxB,CAAC,CAAA,CAAA,GAAA;SACA,QAAA,CAAS,CAAA,CAAA,GAAA;AACV,QAAA;IAAE,aAAA,CAAc,GAAd,EAAmB,GAAnB;IACA,MAAA,GAAS,MAAA,CAAO,KAAP;IACT,MAAA,CAAO,MAAA,KAAU,OAAjB,EAA0B,CAAA,IAAA,CAAA,CAAO,MAAP,CAAA,CAA1B;WACA,eAAA,CAAA;EAJQ,CAAT;AADA,CAAD,CAAA,CAAA,EArGwB;;;;;;;;AAoHxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,QAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA;EAAC,KAAA,GAAQ,QAAA,CAAC,KAAD,CAAA;AAAW,WAAO;EAAlB;EACR,KAAA,GAAQ,CAAC,KAAD,CAAA,GAAA;AAAW,WAAO;EAAlB;EACR,KAAA,GAAQ;IACP,IAAA,EAAQ,KADD;IAEP,IAAA,EAAQ,KAFD;IAGP,MAAA,EAAQ,QAAA,CAAC,KAAD,CAAA;AAAW,aAAO;IAAlB;EAHD;EAMF,WAAN,MAAA,SAAA;IACC,WAAa,CAAA,CAAA;MACZ,IAAC,CAAA,EAAD,GAAM;IADM;;EADd;EAIA,GAAA,GAAM,IAAI,QAAJ,CAAA;EAEN,OAAA,GAAU,IAAI,OAAJ,CAAY,CAAC,OAAD,CAAA,GAAA;WAAa,OAAA,CAAQ,KAAR;EAAb,CAAZ;EAEV,KAAA,CAAM,EAAA,CAAG,KAAH,CAAN,EAAiB,OAAjB;EACA,KAAA,CAAM,EAAA,CAAG,IAAH,CAAN,EAAgB,MAAhB;EACA,KAAA,CAAM,EAAA,CAAG,IAAH,CAAN,EAAgB,MAAhB;EACA,KAAA,CAAM,EAAA,CAAG,KAAH,CAAN,EAAiB,OAAjB;EACA,KAAA,CAAM,EAAA,CAAG,EAAH,CAAN,EAAc,IAAd;EACA,KAAA,CAAM,EAAA,CAAG,IAAH,CAAN,EAAgB,MAAhB;EACA,KAAA,CAAM,EAAA,CAAG,MAAA,CAAO,EAAP,CAAH,CAAN,EAAsB,aAAtB;EACA,KAAA,CAAM,EAAA,CAAG,MAAA,CAAO,uBAAP,CAAH,CAAN,EAA2C,gCAA3C;EACA,KAAA,CAAM,EAAA,CAAG,KAAH,CAAN,EAAiB,OAAjB;EACA,KAAA,CAAM,EAAA,CAAG,CAAA,CAAH,CAAN,EAAc,IAAd;EACA,KAAA,CAAM,EAAA,CAAG,EAAH,CAAN,EAAc,IAAd;EACA,KAAA,CAAM,EAAA,CAAG;IAAC,CAAA,EAAE,CAAH;IAAK,CAAA,EAAE;EAAP,CAAH,CAAN,EAAuB,iBAAvB;EACA,KAAA,CAAM,EAAA,CAAG,CAAC,CAAD,EAAG,GAAH,CAAH,CAAN,EAAmB,SAAnB;EACA,KAAA,CAAM,EAAA,CAAG,cAAH,CAAN,EAA0B,aAA1B;EACA,KAAA,CAAM,EAAA,CAAG,YAAH,CAAN,EAAwB,aAAxB;EACA,KAAA,CAAM,EAAA,CAAG;IAAC,CAAA,EAAE,CAAH;IAAM,CAAA,EAAE;EAAR,CAAH,CAAN,EAA0B,mBAA1B;EACA,KAAA,CAAM,EAAA,CAAG,KAAH,CAAN,EAAiB,kBAAjB;EACA,KAAA,CAAM,EAAA,CAAG,KAAH,CAAN,EAAiB,kBAAjB;EACA,KAAA,CAAM,EAAA,CAAG,QAAH,CAAN,EAAoB,kBAApB;EACA,KAAA,CAAM,EAAA,CAAG,OAAH,CAAN,EAAmB,WAAnB;EACA,KAAA,CAAM,EAAA,CAAG,GAAH,CAAN,EAAe,eAAf;EACA,KAAA,CAAM,EAAA,CAAG,KAAH,CAAN,EAAiB,8EAAjB;EACA,KAAA,CAAM,EAAA,CAAG;IAAC,CAAA,EAAE,KAAH;IAAU,CAAA,EAAE;EAAZ,CAAH,CAAN,EAA+B,uBAA/B;EACA,KAAA,CAAM,EAAA,CAAG,MAAH,CAAN,EAAkB,iBAAlB;EACA,KAAA,CAAM,MAAA,CAAO,QAAP,CAAN,EAAwB,CAAC,OAAD,EAAU,UAAV,CAAxB;SACA,KAAA,CAAM,MAAA,CAAO,GAAP,CAAN,EAAmB,CAAC,QAAD,EAAW,KAAX,CAAnB;AA1CA,CAAD,CAAA,CAAA,EApHwB;;;;AAoKxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,KAAA,EAAA;EAAC,KAAA,CAAM,MAAA,CAAO,KAAP,CAAN,EAAqB,CAAC,KAAD,EAAQ,KAAR,CAArB;EACA,KAAA,CAAM,MAAA,CAAO,IAAP,CAAN,EAAqB,CAAC,KAAD,EAAQ,MAAR,CAArB;EACA,KAAA,CAAM,MAAA,CAAO,KAAP,CAAN,EAAqB,CAAC,QAAD,EAAW,KAAX,CAArB;EACA,KAAA,CAAM,MAAA,CAAO,EAAP,CAAN,EAAkB,CAAC,QAAD,EAAW,OAAX,CAAlB;EACA,KAAA,CAAM,MAAA,CAAO,MAAP,CAAN,EAAsB,CAAC,QAAD,EAAW,OAAX,CAAtB;EACA,KAAA,CAAM,MAAA,CAAO,IAAP,CAAN,EAAoB,CAAC,QAAD,EAAW,OAAX,CAApB;EACA,KAAA,CAAM,MAAA,CAAO;IAAC,CAAA,EAAE;EAAH,CAAP,CAAN,EAAqB,CAAC,MAAD,EAAS,KAAT,CAArB;EACA,KAAA,CAAM,MAAA,CAAO,CAAA,CAAP,CAAN,EAAkB,CAAC,MAAD,EAAS,OAAT,CAAlB;EACA,KAAA,CAAM,MAAA,CAAO,OAAP,CAAN,EAAuB,CAAC,QAAD,EAAW,KAAX,CAAvB;EACA,KAAA,CAAM,MAAA,CAAO,EAAP,CAAN,EAAkB,CAAC,QAAD,EAAW,SAAX,CAAlB;EACA,KAAA,CAAM,MAAA,CAAO,IAAP,CAAN,EAAoB,CAAC,SAAD,EAAY,KAAZ,CAApB;EACA,KAAA,CAAM,MAAA,CAAO,KAAP,CAAN,EAAqB,CAAC,SAAD,EAAY,KAAZ,CAArB;EACA,KAAA,CAAM,MAAA,CAAO,CAAA,CAAP,CAAN,EAAkB,CAAC,MAAD,EAAS,OAAT,CAAlB;EACA,KAAA,CAAM,MAAA,CAAO,CAAC,CAAD,EAAG,CAAH,CAAP,CAAN,EAAqB,CAAC,OAAD,EAAU,KAAV,CAArB;EACA,KAAA,CAAM,MAAA,CAAO,EAAP,CAAN,EAAkB,CAAC,OAAD,EAAU,OAAV,CAAlB;EACA,KAAA,CAAM,MAAA,CAAO,KAAP,CAAN,EAAqB,CAAC,QAAD,EAAW,KAAX,CAArB;EAEA,KAAA,GAAQ,QAAA,CAAC,CAAD,CAAA,EAAA;EAGR,KAAA,GAAQ,CAAC,CAAD,CAAA,GAAA,EAAA;EAGR,KAAA,CAAM,MAAA,CAAO,KAAP,CAAN,EAAqB,CAAC,UAAD,EAAa,OAAb,CAArB;EACA,KAAA,CAAM,MAAA,CAAO,QAAA,CAAA,CAAA;WAAM;EAAN,CAAP,CAAN,EAAwB,CAAC,UAAD,EAAa,KAAb,CAAxB;EAEA,KAAA,CAAM,MAAA,CAAO,KAAP,CAAN,EAAqB,CAAC,UAAD,EAAa,OAAb,CAArB;SACA,KAAA,CAAM,MAAA,CAAO,CAAA,CAAA,GAAA;WAAM;EAAN,CAAP,CAAN,EAAwB,CAAC,UAAD,EAAa,KAAb,CAAxB;AA5BA,CAAD,CAAA,CAAA,EApKwB;;;AAqMxB,MAAA,CAAO,SAAA,CAAU;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAAV,EAAsB;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAAtB,CAAP;;AACA,KAAA,CAAO,SAAA,CAAU;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAAV,EAAsB;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAAtB,CAAP,EAtMwB;;;AA0MxB,MAAA,CAAO,OAAA,CAAQ,EAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,QAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,EAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,CAAA,CAAR,CAAP;;AAEA,MAAA,CAAO,QAAA,CAAS,GAAT,CAAP;;AACA,MAAA,CAAO,QAAA,CAAS,GAAT,CAAP;;AACA,MAAA,CAAO,QAAA,CAAS,CAAC,CAAD,CAAT,CAAP;;AACA,MAAA,CAAO,QAAA,CAAS;EAAC,KAAA,EAAO;AAAR,CAAT,CAAP,EAlNwB;;;AAsNxB,CAAA,GAAI;;AACJ,CAAA,GAAI;;AACJ,CAAA,GAAI;;AACJ,CAAA,GAAI;;AACJ,CAAA,GAAI;EAAC,CAAA,EAAG;AAAJ;;AAEJ,MAAA,CAAO,UAAA,CAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAAP;;AACA,KAAA,CAAO,UAAA,CAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAP;;AACA,KAAA,CAAO,UAAA,CAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAP;;AACA,KAAA,CAAO,UAAA,CAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAP;;AACA,KAAA,CAAO,QAAA,CAAS,CAAT,CAAP,EAAoB;EAAC,CAAA,EAAG;AAAJ,CAApB,EAhOwB;;;AAoOxB,KAAA,CAAS;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAAT,EAAqB;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAArB;;AACA,QAAA,CAAS;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAAT,EAAqB;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAArB,EArOwB;;;AAyOxB,MAAA,CAAO,aAAA,CAAc,gBAAd,CAAP;;AACA,MAAA,CAAO,aAAA,CAAc,MAAd,CAAP;;AACA,KAAA,CAAO,aAAA,CAAc,QAAd,CAAP;;AACA,KAAA,CAAO,aAAA,CAAc,MAAd,CAAP;;AAEA,MAAA,CAAO,UAAA,CAAW,IAAX,CAAP;;AAEA,QAAA,GAAW,CAAA,CAAA,GAAA;SACV,IAAA,CAAA;AADU;;AAEX,QAAA,CAAS,QAAT;;AAEA,MAAA,CAAO,OAAA,CAAQ,EAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,CAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,EAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,CAAA,CAAR,CAAP;;AACA,KAAA,CAAO,OAAA,CAAQ,KAAR,CAAP;;AACA,KAAA,CAAO,OAAA,CAAQ,IAAR,CAAP;;AAEA,MAAA,CAAO,UAAA,CAAW,KAAX,CAAP;;AACA,MAAA,CAAO,UAAA,CAAW,IAAX,CAAP;;AACA,KAAA,CAAO,UAAA,CAAW,EAAX,CAAP;;AACA,KAAA,CAAO,UAAA,CAAW,CAAX,CAAP;;AACA,KAAA,CAAO,UAAA,CAAW,EAAX,CAAP;;AACA,KAAA,CAAO,UAAA,CAAW,CAAA,CAAX,CAAP,EAhQwB;;;AAoQxB,KAAA,CAAM,WAAA,CAAY,KAAZ,CAAN,EAA8B,CAAC,EAAD,EAAK,KAAL,CAA9B;;AACA,KAAA,CAAM,WAAA,CAAY,OAAZ,CAAN,EAA8B,CAAC,IAAD,EAAO,KAAP,CAA9B;;AACA,KAAA,CAAM,WAAA,CAAY,SAAZ,CAAN,EAA8B,CAAC,MAAD,EAAS,KAAT,CAA9B;;AACA,KAAA,CAAM,WAAA,CAAY,EAAZ,CAAN,EAA8B,CAAC,EAAD,EAAK,EAAL,CAA9B;;AACA,KAAA,CAAM,WAAA,CAAY,QAAZ,CAAN,EAA8B,CAAC,EAAD,EAAK,EAAL,CAA9B;;AACA,KAAA,CAAM,WAAA,CAAY,OAAZ,CAAN,EAA8B,CAAC,EAAD,EAAK,EAAL,CAA9B;;AACA,KAAA,CAAM,WAAA,CAAY,KAAZ,CAAN,EAA8B,CAAC,EAAD,EAAK,EAAL,CAA9B,EA1QwB;;;;AA+QxB,KAAA,CAAO,SAAA,CAAU,KAAV,CAAP;;AACA,MAAA,CAAO,SAAA,CAAU,QAAV,CAAP,EAhRwB;;;;AAqRxB,KAAA,CAAM,MAAA,CAAO,CAAP,CAAN,EAAiB,KAAjB,EArRwB;;;;AA0RxB,KAAA,CAAM,IAAA,CAAK,CAAL,CAAN,EAAe,QAAf,EA1RwB;;;;AA+RxB,KAAA,CAAM,YAAA,CAAa,KAAb,EAAoB,CAApB,CAAN,EAA8B,SAA9B;;AACA,KAAA,CAAM,YAAA,CAAa,KAAb,EAAoB,EAApB,EAAwB,QAAxB,CAAN,EAAyC,aAAzC,EAhSwB;;;;AAqSxB,KAAA,CAAM,YAAA,CAAa,CAAA;eAAA,CAAb,EAGA,sBAHA,CAAN,EAG+B,CAAA;;;oBAAA,CAH/B,EArSwB;;;AAiTxB,WAAA,GAAc,MAAA,CAAO,CAAP;;AACd,UAAA,GAAa,MAAA,CAAO,CAAP;;AAEb,KAAA,CAAM,MAAA,CAAO,CAAA;AAAA,CAAA,CAEV,WAFU,CAAA;AAAA,CAAA,CAGV,WAHU,CAAA,CAAA,CAGI,WAHJ,CAAA,UAAA,CAAP,EAIA,CAJA,CAAN,EAIU,CAAA;;cAAA,CAJV,EApTwB;;;;;AAkUxB,KAAA,CAAM,MAAA,CAAO,CAAA;AAAA,CAAA,CAEV,WAFU,CAAA;AAAA,CAAA,CAGV,WAHU,CAAA,CAAA,CAGI,WAHJ,CAAA,UAAA,CAAP,CAAN,EAIO,CAAA;;cAAA,CAJP;;AAUA,KAAA,CAAM,MAAA,CAAO,CAAA;AAAA,CAAA,CAEV,UAFU,CAAA;AAAA,CAAA,CAGV,UAHU,CAAA,CAAA,CAGG,UAHH,CAAA,UAAA,CAAP,CAAN,EAIO,CAAA;;cAAA,CAJP,EA5UwB;;;AAwVxB,KAAA,CAAM,QAAA,CAAS,CAAA;;cAAA,CAAT,EAIA,CAJA,CAAN,EAIU,CAAA;AAAA,CAAA,CAEP,WAFO,CAAA;AAAA,CAAA,CAGP,WAHO,CAAA,CAAA,CAGO,WAHP,CAAA,UAAA,CAJV,EAxVwB;;;AAoWxB,KAAA,CAAM,QAAA,CAAS,CAAA;;cAAA,CAAT,EAIA,CAJA,CAAN,EAIU,CAAA;AAAA,CAAA,CAEP,UAFO,CAAA;AAAA,CAAA,CAGP,UAHO,CAAA,CAAA,CAGM,UAHN,CAAA,UAAA,CAJV,EApWwB;;;AAgXxB,KAAA,CAAM,WAAA,CAAY,CAAA;GAAA,CAAZ,EAGA,IAHA,CAAN,EAGa,CAAA;KAAA,CAHb,EAhXwB;;;AA0XxB,KAAA,CAAM,SAAA,CAAU,UAAV,CAAN,EAA8B,SAA9B;;AACA,KAAA,CAAM,SAAA,CAAU,UAAV,CAAN,EAA8B,QAA9B;;AACA,KAAA,CAAM,SAAA,CAAU,WAAV,CAAN,EAA8B,QAA9B;;AACA,KAAA,CAAM,SAAA,CAAU,WAAV,CAAN,EAA8B,QAA9B;;AACA,KAAA,CAAM,SAAA,CAAU,SAAV,CAAN,EAA8B,QAA9B;;AAEA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,CAAA,GAAI,IAAI,UAAJ,CAAA;EACJ,CAAC,CAAC,cAAF,GAAmB,CAAC,GAAD,CAAA,GAAA;WAAS,SAAA,CAAU,GAAV;EAAT;EAEnB,CAAC,CAAC,KAAF,CAAQ,UAAR,EAAqB,SAArB;EACA,CAAC,CAAC,KAAF,CAAQ,UAAR,EAAqB,QAArB;EACA,CAAC,CAAC,KAAF,CAAQ,WAAR,EAAqB,QAArB;EACA,CAAC,CAAC,KAAF,CAAQ,WAAR,EAAqB,QAArB;SACA,CAAC,CAAC,KAAF,CAAQ,SAAR,EAAqB,QAArB;AARA,CAAD,CAAA,CAAA;;AAWA,IAAA,GAAO;EACN,IAAA,EAAM,KADA;EAEN,IAAA,EAAM,KAFA;EAGN,IAAA,EAAM;AAHA;;AAMP,KAAA,CAAM,SAAA,CAAU,4BAAV,EAAwC,IAAxC,CAAN,EACC,gCADD,EAjZwB;;;AAsZxB,KAAA,CAAM,GAAA,CAAI,CAAC,KAAD,EAAQ,CAAR,CAAJ,CAAN,EAAuB,SAAvB;;AACA,KAAA,CAAM,GAAA,CAAI,EAAJ,CAAN,EAAe,EAAf;;AACA,KAAA,CAAM,GAAA,CAAI;EAAC,KAAD;EAAQ;IAAC,CAAA,EAAE;EAAH,CAAR;CAAJ,CAAN,EAA2B,eAA3B,EAxZwB;;;AA4ZxB,MAAA,CAAO,KAAA,CAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAP;;AACA,KAAA,CAAO,KAAA,CAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAP,EA7ZwB;;;;AAkalB,WAAN,MAAA,SAAA;EACC,WAAa,QAAS,KAAT,CAAA;IAAC,IAAC,CAAA;IACd,IAAC,CAAA,IAAD,GAAQ;EADI;;EAEb,IAAM,CAAC,CAAD,CAAA;AACL,WAAO,CAAA,GAAI;EADN;;AAHP;;AAMA,CAAA,GAAI,IAAI,QAAJ,CAAA;;AAEJ,aAAA,GAAgB,SAAA,CAAA,CAAA;EACf,MAAM;EACN,MAAM;EACN,MAAM;AAHS,EA1aQ;;;;AAmbxB,CAAC,CAAA,CAAA,GAAA;EACA,MAAA,CAAO,SAAA,CAAU,IAAV,CAAP;EACA,MAAA,CAAO,SAAA,CAAU,KAAV,CAAP;EAEA,KAAA,CAAO,SAAA,CAAU,EAAV,CAAP;SACA,KAAA,CAAO,SAAA,CAAU,MAAV,CAAP;AALA,CAAD,CAAA,CAAA,EAnbwB;;;;AA8bxB,CAAC,CAAA,CAAA,GAAA;EACA,MAAA,CAAO,QAAA,CAAS,EAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,QAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,IAAI,MAAJ,CAAW,KAAX,CAAT,CAAP;EAEA,KAAA,CAAM,QAAA,CAAS,KAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS;IAAC,CAAA,EAAE;EAAH,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,CAAC,CAAD,EAAG,CAAH,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,IAAI,QAAJ,CAAA,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,EAAT,CAAN;SACA,KAAA,CAAM,QAAA,CAAS,IAAT,CAAN;AAVA,CAAD,CAAA,CAAA,EA9bwB;;;;AA6cxB,CAAC,CAAA,CAAA,GAAA;EACA,MAAA,CAAO,gBAAA,CAAiB,KAAjB,CAAP;EACA,MAAA,CAAO,gBAAA,CAAiB,SAAjB,CAAP;EACA,MAAA,CAAO,gBAAA,CAAiB,WAAjB,CAAP;EAEA,KAAA,CAAO,gBAAA,CAAiB,EAAjB,CAAP;EACA,KAAA,CAAO,gBAAA,CAAiB,IAAjB,CAAP;EACA,KAAA,CAAO,gBAAA,CAAiB,QAAjB,CAAP;EACA,KAAA,CAAO,gBAAA,CAAiB,KAAjB,CAAP;EACA,KAAA,CAAO,gBAAA,CAAiB,CAAjB,CAAP;EACA,KAAA,CAAO,gBAAA,CAAiB;IAAC,CAAA,EAAE;EAAH,CAAjB,CAAP;SACA,KAAA,CAAO,gBAAA,CAAiB,CAAC,CAAD,EAAG,CAAH,CAAjB,CAAP;AAXA,CAAD,CAAA,CAAA,EA7cwB;;;;AA8dxB,CAAC,CAAA,CAAA,GAAA;EACA,MAAA,CAAO,QAAA,CAAS,EAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,IAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,IAAI,MAAJ,CAAW,EAAX,CAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,GAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,IAAT,EAAe;IAAC,GAAA,EAAK;EAAN,CAAf,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,IAAT,EAAe;IAAC,GAAA,EAAK;EAAN,CAAf,CAAP;EAEA,KAAA,CAAO,QAAA,CAAS,KAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,IAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS;IAAC,CAAA,EAAE;EAAH,CAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,CAAC,CAAD,EAAG,CAAH,CAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,IAAI,QAAJ,CAAA,CAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,KAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,IAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,IAAT,EAAe;IAAC,GAAA,EAAK;EAAN,CAAf,CAAP;SACA,KAAA,CAAO,QAAA,CAAS,IAAT,EAAe;IAAC,GAAA,EAAK;EAAN,CAAf,CAAP;AAhBA,CAAD,CAAA,CAAA,EA9dwB;;;;AAofxB,CAAC,CAAA,CAAA,GAAA;EACA,MAAA,CAAO,SAAA,CAAU,EAAV,CAAP;EACA,MAAA,CAAO,SAAA,CAAU,IAAI,MAAJ,CAAW,EAAX,CAAV,CAAP;EACA,MAAA,CAAO,SAAA,CAAU,EAAV,EAAc;IAAC,GAAA,EAAM;EAAP,CAAd,CAAP;EACA,MAAA,CAAO,SAAA,CAAU,EAAV,EAAc;IAAC,GAAA,EAAK;EAAN,CAAd,CAAP;EAEA,KAAA,CAAO,SAAA,CAAU,KAAV,CAAP;EACA,KAAA,CAAO,SAAA,CAAU,CAAA,CAAV,CAAP;EACA,KAAA,CAAO,SAAA,CAAU,EAAV,CAAP;EACA,KAAA,CAAO,SAAA,CAAU,EAAV,EAAc;IAAC,GAAA,EAAK;EAAN,CAAd,CAAP;SACA,KAAA,CAAO,SAAA,CAAU,EAAV,EAAc;IAAC,GAAA,EAAM;EAAP,CAAd,CAAP;AAVA,CAAD,CAAA,CAAA,EApfwB;;;;AAogBxB,CAAC,CAAA,CAAA,GAAA;EACA,MAAA,CAAO,MAAA,CAAO,CAAA,CAAP,CAAP;EACA,MAAA,CAAO,MAAA,CAAO;IAAC,CAAA,EAAE;EAAH,CAAP,CAAP;EAEA,KAAA,CAAO,MAAA,CAAO,CAAC,CAAD,EAAG,CAAH,CAAP,CAAP;EACA,KAAA,CAAO,MAAA,CAAO,IAAI,QAAJ,CAAA,CAAP,CAAP;EACA,KAAA,CAAO,MAAA,CAAO,EAAP,CAAP;EACA,KAAA,CAAO,MAAA,CAAO,IAAP,CAAP;EACA,KAAA,CAAO,MAAA,CAAO,KAAP,CAAP;SACA,KAAA,CAAO,MAAA,CAAO,IAAI,MAAJ,CAAW,KAAX,CAAP,CAAP;AATA,CAAD,CAAA,CAAA,EApgBwB;;;;AAmhBxB,CAAC,CAAA,CAAA,GAAA;EACA,MAAA,CAAO,OAAA,CAAQ,EAAR,CAAP;EACA,MAAA,CAAO,OAAA,CAAQ,CAAC,CAAD,EAAG,CAAH,CAAR,CAAP;EAEA,KAAA,CAAO,OAAA,CAAQ;IAAC,CAAA,EAAE;EAAH,CAAR,CAAP;EACA,KAAA,CAAO,OAAA,CAAQ,IAAI,QAAJ,CAAA,CAAR,CAAP;EACA,KAAA,CAAO,OAAA,CAAQ,EAAR,CAAP;EACA,KAAA,CAAO,OAAA,CAAQ,IAAR,CAAP;EACA,KAAA,CAAO,OAAA,CAAQ,KAAR,CAAP;SACA,KAAA,CAAO,OAAA,CAAQ,IAAI,MAAJ,CAAW,KAAX,CAAR,CAAP;AATA,CAAD,CAAA,CAAA,EAnhBwB;;;AAiiBxB,CAAC,CAAA,CAAA,GAAA;EACA,MAAA,CAAO,YAAA,CAAa,KAAb,CAAP;EACA,MAAA,CAAO,YAAA,CAAa,MAAb,CAAP;EACA,KAAA,CAAO,YAAA,CAAa,SAAb,CAAP;EACA,KAAA,CAAO,YAAA,CAAa,SAAb,CAAP;EACA,KAAA,CAAO,YAAA,CAAa,cAAb,CAAP;EAEA,MAAA,CAAO,cAAA,CAAe,KAAf,CAAP;EACA,MAAA,CAAO,cAAA,CAAe,MAAf,CAAP;EACA,KAAA,CAAO,cAAA,CAAe,SAAf,CAAP;EACA,KAAA,CAAO,cAAA,CAAe,SAAf,CAAP;EACA,KAAA,CAAO,cAAA,CAAe,KAAf,CAAP;EACA,MAAA,CAAO,cAAA,CAAe,cAAf,CAAP;EAEA,MAAA,CAAO,UAAA,CAAW,aAAA,CAAA,CAAX,CAAP;EAEA,MAAA,CAAO,OAAA,CAAQ,QAAR,CAAP;EACA,KAAA,CAAO,OAAA,CAAQ,CAAR,CAAP;EAEA,MAAA,CAAO,aAAA,CAAc,QAAd,CAAP;EACA,KAAA,CAAO,aAAA,CAAc,CAAd,CAAP;EAEA,MAAA,CAAO,UAAA,CAAW,QAAA,CAAA,CAAA;WAAM;EAAN,CAAX,CAAP;EACA,MAAA,CAAO,UAAA,CAAW,CAAA,CAAA,GAAA;WAAM;EAAN,CAAX,CAAP;EACA,KAAA,CAAO,UAAA,CAAW,KAAX,CAAP;EACA,KAAA,CAAO,UAAA,CAAW,IAAX,CAAP;EACA,KAAA,CAAO,UAAA,CAAW,EAAX,CAAP;EACA,KAAA,CAAO,UAAA,CAAW,IAAX,CAAP;EAEA,MAAA,CAAO,QAAA,CAAS,OAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,qBAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,EAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,KAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,CAAC,CAAD,EAAG,GAAH,CAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS;IAAC,CAAA,EAAE,CAAH;IAAM,CAAA,EAAE;EAAR,CAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,KAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,UAAT,CAAP;EAEA,KAAA,CAAO,QAAA,CAAS;IAAC,CAAA,EAAE;EAAH,CAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,CAAC,CAAD,EAAG,CAAH,CAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,CAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,CAAT,EAAY,CAAC,MAAD,EAAQ,MAAR,CAAZ,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,CAAT,EAAY,WAAZ,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,CAAT,EAAY,CAAC,MAAD,EAAQ,MAAR,EAAe,SAAf,CAAZ,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,CAAT,EAAY,mBAAZ,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,EAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,IAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,KAAT,CAAP;EACA,KAAA,CAAO,QAAA,CAAS,IAAI,MAAJ,CAAW,KAAX,CAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,CAAT,EAAY,WAAZ,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,CAAT,EAAY,gBAAZ,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,CAAT,EAAY,kBAAZ,CAAP;SACA,KAAA,CAAO,QAAA,CAAS,CAAT,EAAY,OAAZ,CAAP;AApDA,CAAD,CAAA,CAAA,EAjiBwB;;;AA0lBxB,KAAA,CAAM,YAAA,CAAa,KAAb,CAAN,EAA2B,EAA3B;;AACA,KAAA,CAAM,YAAA,CAAa,EAAb,CAAN,EAAwB,EAAxB;;AACA,KAAA,CAAM,YAAA,CAAa,GAAb,CAAN,EAAyB,CAAC,GAAD,CAAzB;;AACA,KAAA,CAAM,YAAA,CAAa,MAAb,CAAN,EAA4B,CAAC,GAAD,EAAK,GAAL,CAA5B;;AACA,KAAA,CAAM,YAAA,CAAa,QAAb,CAAN,EAA8B,CAAC,GAAD,EAAK,GAAL,CAA9B;;AACA,KAAA,CAAM,YAAA,CAAa,UAAb,CAAN,EAAgC,CAC/B,KAD+B,EAE/B,KAF+B,CAAhC;;AAKA,KAAA,CAAM,YAAA,CAAa,UAAb,CAAN,EAAgC,CAC/B,KAD+B,EAE/B,KAF+B,CAAhC;;AAKA,KAAA,CAAM,YAAA,CAAa,YAAb,CAAN,EAAkC,CACjC,KADiC,EAEjC,EAFiC,EAGjC,KAHiC,CAAlC,EAzmBwB;;;AAinBxB,KAAA,CAAM,OAAA,CAAQ,UAAR,CAAN,EAA2B,CAAC,KAAD,EAAO,KAAP,CAA3B;;AACA,KAAA,CAAM,OAAA,CAAQ,CAAC,GAAD,EAAK,GAAL,CAAR,CAAN,EAA0B,CAAC,GAAD,EAAK,GAAL,CAA1B;;AAEA,KAAA,CAAM,OAAA,CAAQ,CAAC,MAAD,EAAQ,MAAR,CAAR,CAAN,EAAgC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAAhC,EApnBwB;;;AAwnBxB,KAAA,CAAM,YAAA,CAAa,KAAb,CAAN,EAA2B,EAA3B;;AACA,KAAA,CAAM,YAAA,CAAa,EAAb,CAAN,EAAwB,EAAxB;;AACA,KAAA,CAAM,YAAA,CAAa,CAAC,KAAD,CAAb,CAAN,EAA6B,EAA7B;;AACA,KAAA,CAAM,YAAA,CAAa,CAAC,KAAD,EAAO,OAAP,CAAb,CAAN,EAAqC,MAArC;;AACA,KAAA,CAAM,YAAA,CAAa,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAb,CAAN,EAAmC,SAAnC;;AACA,KAAA,CAAM,YAAA,CAAa,CAAC,GAAD,EAAK,KAAL,EAAW,GAAX,EAAe,GAAf,CAAb,CAAN,EAAyC,SAAzC;;AACA,KAAA,CAAM,YAAA,CAAa,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf,EAAmB,KAAnB,CAAb,CAAN,EAA+C,SAA/C,EA9nBwB;;;AAkoBxB,KAAA,CAAM,OAAA,CAAQ,CAAC,KAAD,EAAO,KAAP,CAAR,CAAN,EAA8B,UAA9B;;AACA,KAAA,CAAM,OAAA,CAAQ,UAAR,CAAN,EAA2B,UAA3B,EAnoBwB;;;AAuoBxB,KAAA,CAAM,KAAA,CAAM,KAAN,CAAN,EAAoB,KAApB;;AACA,KAAA,CAAM,KAAA,CAAM,OAAN,CAAN,EAAsB,OAAtB;;AACA,KAAA,CAAM,KAAA,CAAM,OAAN,CAAN,EAAsB,KAAtB;;AACA,KAAA,CAAM,KAAA,CAAM,SAAN,CAAN,EAAwB,OAAxB,EA1oBwB;;;AA8oBxB,KAAA,CAAM,KAAA,CAAM,EAAN,CAAN,EAAiB,EAAjB;;AACA,KAAA,CAAM,KAAA,CAAM,QAAN,CAAN,EAAuB,EAAvB;;AACA,KAAA,CAAM,KAAA,CAAM,OAAN,CAAN,EAAsB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAtB;;AACA,KAAA,CAAM,KAAA,CAAM,eAAN,CAAN,EAA8B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA9B;;AACA,KAAA,CAAM,KAAA,CAAM,KAAN,EAAa,KAAb,CAAN,EAA2B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAA3B;;AACA,KAAA,CAAM,KAAA,CAAM,WAAN,EAAmB,aAAnB,CAAN,EAAyC,CAAC,IAAD,EAAO,MAAP,EAAe,IAAf,EAAqB,MAArB,CAAzC,EAnpBwB;;;AAupBxB,KAAA,CAAM,MAAA,CAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,CAAN,EAA6B,KAA7B;;AACA,KAAA,CAAM,MAAA,CAAO,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAP,CAAN,EAA6B,KAA7B;;AACA,KAAA,CAAM,MAAA,CAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,CAAN,EAA6B,KAA7B;;AACA,KAAA,CAAM,MAAA,CAAO,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAP,CAAN,EAA6B,KAA7B;;AACA,KAAA,CAAM,MAAA,CAAO,CAAC,IAAD,EAAO,CAAC,GAAD,EAAK,GAAL,CAAP,EAAkB,IAAlB,CAAP,CAAN,EAAuC,IAAvC,EA3pBwB;;;AA+pBxB,MAAA,CAAO,OAAA,CAAQ,KAAR,EAAe,GAAf,CAAP;;AACA,KAAA,CAAO,OAAA,CAAQ,KAAR,EAAe,GAAf,CAAP;;AACA,KAAA,CAAO,OAAA,CAAQ,MAAR,EAAgB,GAAhB,CAAP,EAjqBwB;;;AAqqBxB,KAAA,CAAM,MAAA,CAAO,KAAP,CAAN,EAAqB,OAArB;;AACA,KAAA,CAAM,MAAA,CAAO,OAAP,CAAN,EAAuB,WAAvB;;AACA,KAAA,CAAM,MAAA,CAAO,OAAP,CAAN,EAAuB,WAAvB;;AACA,KAAA,CAAM,MAAA,CAAO,WAAP,CAAN,EAA2B,aAA3B;;AACA,KAAA,CAAM,MAAA,CAAO,aAAP,CAAN,EAA6B,eAA7B,EAzqBwB;;;AA6qBxB,KAAA,CAAM,UAAA,CAAA,CAAN,EAAoB,CAAA,CAApB;;AACA,KAAA,CAAM,UAAA,CAAW,KAAX,EAAkB;EAAC,CAAA,EAAE;AAAH,CAAlB,CAAN,EAAgC;EAAC,CAAA,EAAE;AAAH,CAAhC;;AACA,KAAA,CAAM,UAAA,CAAW;EAAC,CAAA,EAAE;AAAH,CAAX,EAAkB;EAAC,CAAA,EAAE,CAAH;EAAK,CAAA,EAAE;AAAP,CAAlB,CAAN,EAAoC;EAAC,CAAA,EAAE,CAAH;EAAK,CAAA,EAAE;AAAP,CAApC;;AACA,KAAA,CAAM,UAAA,CAAW,QAAX,CAAN,EAA4B;EAAC,MAAA,EAAQ;AAAT,CAA5B;;AACA,KAAA,CAAM,UAAA,CAAW,SAAX,CAAN,EAA6B;EAAC,MAAA,EAAQ;AAAT,CAA7B;;AACA,KAAA,CAAM,UAAA,CAAW,YAAX,CAAN,EAAgC;EAAC,KAAA,EAAO;AAAR,CAAhC;;AACA,KAAA,CAAM,UAAA,CAAW,UAAX,CAAN,EAA8B;EAAC,KAAA,EAAO;AAAR,CAA9B;;AACA,KAAA,CAAM,UAAA,CAAW,2BAAX,CAAN,EAA+C;EAC9C,MAAA,EAAQ,IADsC;EAE9C,MAAA,EAAQ,KAFsC;EAG9C,KAAA,EAAO;AAHuC,CAA/C,EAprBwB;;;AA4rBxB,KAAA,CAAM,KAAA,CAAM,CAAN,CAAN,EAAgB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAhB;;AACA,KAAA,CAAM,SAAA,CAAU,CAAV,CAAN,EAAoB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAApB,EA7rBwB;;;AAisBxB,MAAA,CAAO,aAAA,CAAc,GAAd,CAAP;;AACA,MAAA,CAAO,aAAA,CAAc,aAAd,CAAP;;AACA,MAAA,CAAO,aAAA,CAAc,cAAd,CAAP;;AACA,KAAA,CAAO,aAAA,CAAc,UAAd,CAAP;;AACA,KAAA,CAAO,aAAA,CAAc,EAAd,CAAP;;AACA,KAAA,CAAO,aAAA,CAAc,WAAd,CAAP,EAtsBwB;;;AA0sBxB,MAAA,CAAO,OAAA,CAAQ,EAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,QAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,EAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,CAAA,CAAR,CAAP;;AAEA,MAAA,CAAO,QAAA,CAAS,GAAT,CAAP;;AACA,MAAA,CAAO,QAAA,CAAS,GAAT,CAAP;;AACA,MAAA,CAAO,QAAA,CAAS,CAAC,CAAD,CAAT,CAAP;;AACA,MAAA,CAAO,QAAA,CAAS;EAAC,KAAA,EAAO;AAAR,CAAT,CAAP,EAltBwB;;;AAutBxB,MAAA,CAAO,KAAA,CAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAP;;AACA,MAAA,CAAO,KAAA,CAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAP;;AACA,MAAA,CAAO,KAAA,CAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAP;;AACA,KAAA,CAAO,KAAA,CAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAP;;AACA,KAAA,CAAO,KAAA,CAAM,GAAN,CAAP,EA3tBwB;;;AA+tBxB,KAAA,CAAM,IAAA,CAAK,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAL,CAAN,EAAyB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAzB;;AACA,KAAA,CAAM,IAAA,CAAK,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,CAAL,CAAN,EAAkC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAlC,EAhuBwB;;;AAouBxB,KAAA,CAAM,KAAA,CAAM,KAAN,CAAN,EAAoB,KAApB;;AACA,KAAA,CAAM,KAAA,CAAM,OAAN,CAAN,EAAsB,OAAtB;;AACA,KAAA,CAAM,KAAA,CAAM,OAAN,CAAN,EAAsB,KAAtB;;AACA,KAAA,CAAM,KAAA,CAAM,SAAN,CAAN,EAAwB,OAAxB,EAvuBwB;;;AA2uBxB,KAAA,CAAM,KAAA,CAAM,OAAN,CAAN,EAAsB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAtB;;AACA,KAAA,CAAM,KAAA,CAAM,eAAN,CAAN,EAA8B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA9B,EA5uBwB;;;AAgvBxB,KAAA,CAAM,SAAA,CAAU,WAAV,CAAN,EAA8B,QAA9B;;AACA,IAAA,GAAO;EACN,IAAA,EAAM,KADA;EAEN,IAAA,EAAM,KAFA;EAGN,IAAA,EAAM;AAHA;;AAKP,KAAA,CAAM,SAAA,CAAU,4BAAV,EAAwC,IAAxC,CAAN,EACC,gCADD,EAtvBwB;;;AA2vBxB,KAAA,CAAM,MAAA,CAAO,gBAAP,EAAyB,CAAzB,CAAN,EAAmC,WAAnC;;AACA,KAAA,CAAM,MAAA,CAAO,SAAP,EAAkB,CAAlB,CAAN,EAA4B,MAA5B,EA5vBwB;;;AAgwBxB,KAAA,CAAM,GAAA,CAAI,CAAA;;KAAA,CAAJ,CAAN,EAIQ,aAJR,EAhwBwB;;;AAwwBxB,KAAA,CAAM,SAAA,CAAU,CAAC,EAAD,EAAK,KAAL,CAAV,CAAN,EAA8B,CAAC,KAAD,CAA9B;;AACA,KAAA,CAAM,SAAA,CAAU,CAAC,KAAD,EAAQ,EAAR,CAAV,CAAN,EAA8B,CAAC,KAAD,CAA9B;;AACA,KAAA,CAAM,SAAA,CAAU,CAAC,EAAD,EAAK,KAAL,EAAY,KAAZ,EAAmB,EAAnB,EAAuB,IAAvB,CAAV,CAAN,EAA+C,CAAC,KAAD,CAA/C,EA1wBwB;;;AA8wBxB,KAAA,CAAM,gBAAA,CAAiB,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAAjB,CAAN,EAAyC,CAAC,KAAD,CAAzC;;AACA,KAAA,CAAM,gBAAA,CAAiB,CAAC,GAAD,EAAM,KAAN,EAAa,GAAb,CAAjB,CAAN,EAA2C,CAAC,KAAD,CAA3C;;AACA,KAAA,CAAM,gBAAA,CAAiB,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,CAAjB,CAAN,EAA6C,CAAC,KAAD,CAA7C,EAhxBwB;;;AAoxBxB,KAAA,CAAM,MAAA,CAAO,CAAA;oBAAA,CAAP,CAAN,EAGO,CAAA;WAAA,CAHP;;AAQA,KAAA,CAAM,MAAA,CAAO,CACZ,aADY,EAEZ,sBAFY,CAAP,CAAN,EAGK,CACJ,UADI,EAEJ,aAFI,CAHL;;AAQA,KAAA,CAAM,MAAA,CAAO,CAAA;;;AAAA,CAAP,CAAN,EAKO,CAAA;WAAA,CALP;;AAUA,KAAA,CAAM,MAAA,CAAO,CACZ,EADY,EAEZ,aAFY,EAGZ,sBAHY,EAIZ,EAJY,CAAP,CAAN,EAKK,CACJ,UADI,EAEJ,aAFI,CALL,EA9yBwB;;;AA0zBxB,MAAA,CAAO,gBAAA,CAAiB,EAAjB,CAAP;;AACA,MAAA,CAAO,gBAAA,CAAiB,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAjB,CAAP;;AACA,MAAA,CAAO,gBAAA,CAAiB,CAAC,GAAD,EAAK,KAAL,EAAY,IAAZ,EAAkB,GAAlB,CAAjB,CAAP,EA5zBwB;;;AAg0BxB,MAAA,CAAO,eAAA,CAAgB,EAAhB,CAAP;;AACA,MAAA,CAAO,eAAA,CAAgB,CAAC,EAAD,EAAK,EAAL,CAAhB,CAAP;;AACA,MAAA,CAAO,eAAA,CAAgB,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAQ,EAAR,CAAhB,CAAP;;AACA,MAAA,CAAO,eAAA,CAAgB,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAL,CAAD,EAAgB,EAAhB,CAAhB,CAAP;;AACA,MAAA,CAAO,eAAA,CAAgB,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,EAArB,CAAhB,CAAP;;AAEA,KAAA,CAAM,eAAA,CAAgB,CAAA,CAAhB,CAAN;;AACA,KAAA,CAAM,eAAA,CAAgB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAhB,CAAN;;AACA,KAAA,CAAM,eAAA,CAAgB,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAC,CAAD,EAAG,CAAH,CAAL,CAAD,EAAc,CAAd,CAAhB,CAAN;;AACA,KAAA,CAAM,eAAA,CAAgB;EAAC,CAAC,CAAD;EAAG,CAAH;EAAK,CAAC,CAAD;EAAG,CAAH,CAAL,CAAD;EAAc,EAAd;EAAkB;IAAC,CAAA,EAAE,CAAH;IAAK,CAAA,EAAE;EAAP,CAAlB;CAAhB,CAAN;;AAEA,MAAA,CAAO,eAAA,CAAgB,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAO,CAAC,CAAD,EAAG,CAAH,CAAP,EAAa,CAAC,CAAD,EAAG,CAAH,CAAb,CAAhB,EAAqC,CAArC,CAAP;;AACA,KAAA,CAAO,eAAA,CAAgB,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAO,CAAC,CAAD,CAAP,EAAW,CAAC,CAAD,EAAG,CAAH,CAAX,CAAhB,EAAmC,CAAnC,CAAP;;AACA,KAAA,CAAO,eAAA,CAAgB,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAP,EAAe,CAAC,CAAD,EAAG,CAAH,CAAf,CAAhB,EAAuC,CAAvC,CAAP,EA70BwB;;;AAi1BxB,MAAA,CAAO,eAAA,CAAgB,EAAhB,CAAP;;AACA,MAAA,CAAO,eAAA,CAAgB,CAAC,CAAA,CAAD,EAAK,CAAA,CAAL,CAAhB,CAAP;;AACA,MAAA,CAAO,eAAA,CAAgB;EAAC;IAAC,CAAA,EAAE,CAAH;IAAM,CAAA,EAAE;EAAR,CAAD;EAAa,CAAA,CAAb;CAAhB,CAAP;;AACA,MAAA,CAAO,eAAA,CAAgB;EAAC;IAAC,CAAA,EAAE,CAAH;IAAM,CAAA,EAAE,CAAR;IAAW,CAAA,EAAG,CAAC,CAAD;EAAG,CAAH;EAAK,CAAL;EAAd,CAAD;EAAyB,CAAA,CAAzB;CAAhB,CAAP;;AACA,MAAA,CAAO,eAAA,CAAgB;EAAC;IAAC,CAAA,EAAE,CAAH;IAAM,CAAA,EAAE;EAAR,CAAD;EAAa,KAAb;EAAoB,IAApB;EAA0B,CAAA,CAA1B;CAAhB,CAAP;;AAEA,KAAA,CAAM,eAAA,CAAgB,CAAA,CAAhB,CAAN;;AACA,KAAA,CAAM,eAAA,CAAgB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAhB,CAAN;;AACA,KAAA,CAAM,eAAA,CAAgB;EAAC;IAAC,CAAA,EAAE,CAAH;IAAM,CAAA,EAAE,CAAR;IAAW,CAAA,EAAG,CAAC,CAAD;EAAG,CAAH;EAAK,CAAL;EAAd,CAAD;EAAyB,CAAzB;CAAhB,CAAN;;AACA,KAAA,CAAM,eAAA,CAAgB;EAAC;IAAC,CAAA,EAAE,CAAH;IAAM,CAAA,EAAE,CAAR;IAAW,CAAA,EAAG,CAAC,CAAD;EAAG,CAAH;EAAK,CAAL;EAAd,CAAD;EAAyB,CAAA,CAAzB;EAA6B,CAAC,CAAD;EAAG,CAAH,CAA7B;CAAhB,CAAN,EA11BwB;;;AA81BxB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA;EAAO,WAAN,MAAA,SAAA;IACC,WAAa,QAAS,KAAT,CAAA;MAAC,IAAC,CAAA;MACd;IADY;;IAEb,IAAM,CAAA,CAAA;aACL;IADK;;EAHP;EAMA,CAAA,GAAI;IAAC,CAAA,EAAE,CAAH;IAAM,CAAA,EAAE;EAAR;EACJ,CAAA,GAAI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;EACJ,CAAA,GAAI,IAAI,QAAJ,CAAA;EACJ,CAAA,GAAI;EACJ,EAAA,GAAK,IAAI,MAAJ,CAAW,EAAX;EACL,CAAA,GAAI;EACJ,EAAA,GAAK,IAAI,MAAJ,CAAW,KAAX;EAEL,MAAA,CAAO,MAAA,CAAO,CAAP,CAAP;EACA,KAAA,CAAM,MAAA,CAAO,CAAP,CAAN;EACA,KAAA,CAAM,MAAA,CAAO,CAAP,CAAN;EACA,KAAA,CAAM,MAAA,CAAO,CAAP,CAAN;EACA,KAAA,CAAM,MAAA,CAAO,EAAP,CAAN;EACA,KAAA,CAAM,MAAA,CAAO,CAAP,CAAN;EACA,KAAA,CAAM,MAAA,CAAO,EAAP,CAAN;EAEA,KAAA,CAAM,OAAA,CAAQ,CAAR,CAAN;EACA,MAAA,CAAO,OAAA,CAAQ,CAAR,CAAP;EACA,KAAA,CAAM,OAAA,CAAQ,CAAR,CAAN;EACA,KAAA,CAAM,OAAA,CAAQ,CAAR,CAAN;EACA,KAAA,CAAM,OAAA,CAAQ,EAAR,CAAN;EACA,KAAA,CAAM,OAAA,CAAQ,CAAR,CAAN;EACA,KAAA,CAAM,OAAA,CAAQ,EAAR,CAAN;EAEA,KAAA,CAAM,QAAA,CAAS,KAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,EAAT,CAAN;EACA,MAAA,CAAO,QAAA,CAAS,CAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,EAAT,CAAP;EAEA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,MAAA,CAAO,QAAA,CAAS,CAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,CAAT,EAAY,CAAC,MAAD,EAAQ,MAAR,CAAZ,CAAP;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,EAAY,CAAC,MAAD,EAAQ,MAAR,EAAe,SAAf,CAAZ,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,EAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,EAAT,CAAN;EAEA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,MAAA,CAAO,QAAA,CAAS,CAAT,CAAP;EACA,MAAA,CAAO,QAAA,CAAS,EAAT,CAAP;EACA,KAAA,CAAM,QAAA,CAAS,CAAT,CAAN;EACA,KAAA,CAAM,QAAA,CAAS,EAAT,CAAN;EAEA,MAAA,CAAO,QAAA,CAAS,IAAT,EAAe;IAAC,GAAA,EAAK;EAAN,CAAf,CAAP;EACA,KAAA,CAAM,QAAA,CAAS,IAAT,EAAe;IAAC,GAAA,EAAK;EAAN,CAAf,CAAN;EACA,MAAA,CAAO,QAAA,CAAS,IAAT,EAAe;IAAC,GAAA,EAAK;EAAN,CAAf,CAAP;SACA,KAAA,CAAM,QAAA,CAAS,IAAT,EAAe;IAAC,GAAA,EAAK;EAAN,CAAf,CAAN;AA7DA,CAAD,CAAA,CAAA,EA91BwB;;;AAg6BxB,MAAA,CAAO,UAAA,CAAW,QAAA,CAAA,CAAA;SAAM;AAAN,CAAX,CAAP;;AACA,KAAA,CAAM,UAAA,CAAW,EAAX,CAAN;;AAEA,MAAA,CAAO,SAAA,CAAU,EAAV,CAAP;;AACA,MAAA,CAAO,SAAA,CAAU,IAAI,MAAJ,CAAW,EAAX,CAAV,CAAP;;AACA,KAAA,CAAM,SAAA,CAAU,KAAV,CAAN;;AACA,KAAA,CAAM,SAAA,CAAU,CAAA,CAAV,CAAN;;AACA,KAAA,CAAM,SAAA,CAAU,EAAV,CAAN;;AACA,MAAA,CAAO,SAAA,CAAU,EAAV,EAAc;EAAC,GAAA,EAAM;AAAP,CAAd,CAAP;;AACA,KAAA,CAAM,SAAA,CAAU,EAAV,EAAc;EAAC,GAAA,EAAK;AAAN,CAAd,CAAN;;AACA,MAAA,CAAO,SAAA,CAAU,EAAV,EAAc;EAAC,GAAA,EAAK;AAAN,CAAd,CAAP;;AACA,KAAA,CAAM,SAAA,CAAU,EAAV,EAAc;EAAC,GAAA,EAAM;AAAP,CAAd,CAAN,EA36BwB;;;AA+6BxB,KAAA,CAAM,EAAA,CAAG,KAAH,CAAN,EAAiB,OAAjB;;AACA,KAAA,CAAM,EAAA,CAAG,cAAH,CAAN,EAA0B,aAA1B;;AACA,KAAA,CAAM,EAAA,CAAG;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAAH,CAAN,EAA0B,mBAA1B,EAj7BwB;;;AAq7BxB,KAAA,CAAM,GAAA,CAAI,CAAA;aAAA,CAAJ,CAAN,EAGQ,mBAHR,EAr7BwB;;;;AA67BxB,MAAA,CAAO,QAAA,CAAS,OAAT,CAAP;;AACA,MAAA,CAAO,QAAA,CAAS,qBAAT,CAAP;;AAMA,KAAA,CAAM,QAAA,CAAS,EAAT,CAAN;;AACA,KAAA,CAAM,QAAA,CAAS,KAAT,CAAN;;AACA,KAAA,CAAM,QAAA,CAAS,CAAC,CAAD,EAAG,GAAH,CAAT,CAAN;;AACA,KAAA,CAAM,QAAA,CAAS;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAAT,CAAN;;AACA,KAAA,CAAM,QAAA,CAAS,KAAT,CAAN;;AAEA,MAAA,CAAO,QAAA,CAAS,UAAT,CAAP,EA18BwB;;;AA88BxB,KAAA,CAAM,cAAA,CAAe,kBAAf,EAAmC,MAAnC,EAA2C,QAA3C,CAAN,EACC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADD;;AAEA,KAAA,CAAM,cAAA,CAAe,sBAAf,EAAuC,IAAvC,CAAN,EAAoD,CAAC,GAAD,EAAK,GAAL,CAApD,EAh9BwB;;;AAo9BxB,MAAA,CAAO,UAAA,CAAW,KAAX,CAAP;;AACA,MAAA,CAAO,UAAA,CAAW,IAAX,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,EAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,CAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,EAAR,CAAP;;AACA,MAAA,CAAO,OAAA,CAAQ,CAAA,CAAR,CAAP;;AAEA,KAAA,CAAM,OAAA,CAAQ,KAAR,CAAN;;AACA,KAAA,CAAM,OAAA,CAAQ,IAAR,CAAN;;AACA,KAAA,CAAM,UAAA,CAAW,EAAX,CAAN;;AACA,KAAA,CAAM,UAAA,CAAW,CAAX,CAAN;;AACA,KAAA,CAAM,UAAA,CAAW,EAAX,CAAN;;AACA,KAAA,CAAM,UAAA,CAAW,CAAA,CAAX,CAAN,EAh+BwB;;;AAo+BxB,MAAA,CAAO,UAAA,CAAW,EAAX,CAAP;;AACA,MAAA,CAAO,UAAA,CAAW,CAAC,GAAD,EAAK,GAAL,CAAX,CAAP;;AAEA,GAAA,GAAM,SAAA,CAAA,CAAA;EACL,MAAM;EACN,MAAM;EACN,MAAM;AAHD;;AAMN,MAAA,CAAO,UAAA,CAAW,GAAA,CAAA,CAAX,CAAP,EA7+BwB;;;AAi/BxB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA;EAAO,UAAN,MAAA,QAAA;IACC,WAAa,CAAC,GAAD,CAAA;MACZ,IAAC,CAAA,KAAD,GAAS;IADG;;EADd;SAIA,KAAA,CAAM,SAAA,CAAU,OAAV,CAAN,EAA0B,SAA1B;AALA,CAAD,CAAA,CAAA,EAj/BwB;;;AA4/BxB,KAAA,CAAM,UAAA,CAAW,OAAX,CAAN,EAA2B;EAAC,GAAA,EAAI,IAAL;EAAW,GAAA,EAAI,IAAf;EAAqB,GAAA,EAAI;AAAzB,CAA3B;;AACA,KAAA,CAAM,UAAA,CAAW,KAAX,CAAN,EAAyB;EAAC,KAAA,EAAM;AAAP,CAAzB;;AACA,KAAA,CAAM,UAAA,CAAW;EAAC,GAAA,EAAI,IAAL;EAAW,GAAA,EAAI,KAAf;EAAsB,GAAA,EAAI;AAA1B,CAAX,CAAN,EAAiD;EAAC,GAAA,EAAI,IAAL;EAAW,GAAA,EAAI,KAAf;EAAsB,GAAA,EAAI;AAA1B,CAAjD;;AACA,KAAA,CAAM,UAAA,CAAA,CAAN,EAAoB,CAAA,CAApB,EA//BwB;;;;AAogCxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,KAAA,EAAA;EAAC,OAAA,GAAU;EACV,KAAA,GAAQ,CAAA;;GAAA;EAKR,WAAA,CAAY,KAAZ,EAAmB,CAAC,IAAD,CAAA,GAAA;IAClB,OAAO,CAAC,IAAR,CAAa,IAAI,CAAC,WAAL,CAAA,CAAb;AACA,WAAO;EAFW,CAAnB;SAGA,KAAA,CAAM,OAAN,EAAe,CAAC,KAAD,EAAO,KAAP,EAAc,KAAd,CAAf;AAVA,CAAD,CAAA,CAAA;;AAaA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,KAAA,EAAA;EAAC,OAAA,GAAU;EACV,KAAA,GAAQ,CAAA;;GAAA;EAKR,WAAA,CAAY,KAAZ,EAAmB,CAAC,IAAD,CAAA,GAAA;IAClB,IAAI,IAAA,KAAQ,KAAZ;AACC,aAAO,KADR;;IAEA,OAAO,CAAC,IAAR,CAAa,IAAI,CAAC,WAAL,CAAA,CAAb;AACA,WAAO;EAJW,CAAnB;SAMA,KAAA,CAAM,OAAN,EAAe,CAAC,KAAD,EAAO,KAAP,CAAf;AAbA,CAAD,CAAA,CAAA;;AAgBA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,IAAA,EAAA;EAAC,OAAA,GAAU;EACV,IAAA,GAAO,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb;EACP,WAAA,CAAY,IAAZ,EAAkB,CAAC,IAAD,CAAA,GAAA;IACjB,OAAO,CAAC,IAAR,CAAa,IAAI,CAAC,WAAL,CAAA,CAAb;AACA,WAAO;EAFU,CAAlB;SAGA,KAAA,CAAM,OAAN,EAAe,CAAC,KAAD,EAAO,KAAP,EAAc,KAAd,CAAf;AANA,CAAD,CAAA,CAAA;;AASA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,IAAA,EAAA;EAAC,OAAA,GAAU;EACV,IAAA,GAAO,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb;EACP,WAAA,CAAY,IAAZ,EAAkB,CAAC,IAAD,CAAA,GAAA;IACjB,IAAI,IAAA,KAAQ,KAAZ;AACC,aAAO,KADR;;IAEA,OAAO,CAAC,IAAR,CAAa,IAAI,CAAC,WAAL,CAAA,CAAb;AACA,WAAO;EAJU,CAAlB;SAMA,KAAA,CAAM,OAAN,EAAe,CAAC,KAAD,EAAO,KAAP,CAAf;AATA,CAAD,CAAA,CAAA;;AAYA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,IAAA,EAAA;EAAC,OAAA,GAAU;EACV,IAAA,GAAO,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb;EACP,WAAA,CAAY,IAAZ,EAAkB,CAAC,IAAD,EAAO,KAAP,CAAA,GAAA;IACjB,IAAI,IAAA,KAAQ,KAAZ;AACC,aAAO,KADR;;IAEA,OAAO,CAAC,IAAR,CAAa,CAAA,CAAA,CAAG,KAAK,CAAC,OAAT,EAAA,CAAA,CAAoB,IAAI,CAAC,WAAL,CAAA,CAApB,EAAA,CAAA,CAA0C,KAAK,CAAC,QAAhD,CAAA,CAAb;AACA,WAAO;EAJU,CAAlB;SAMA,KAAA,CAAM,OAAN,EAAe,CAAC,WAAD,EAAa,WAAb,CAAf;AATA,CAAD,CAAA,CAAA,EAtjCwB;;;;AAqkCxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,KAAA,EAAA;EAAC,KAAA,GAAQ,CAAA;;GAAA;EAKR,QAAA,GAAW,WAAA,CAAY,KAAZ,EAAmB,CAAC,IAAD,CAAA,GAAA;AAC7B,WAAO,IAAI,CAAC,WAAL,CAAA;EADsB,CAAnB;SAEX,KAAA,CAAM,QAAN,EAAgB,CAAA;;GAAA,CAAhB;AARA,CAAD,CAAA,CAAA;;AAeA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,KAAA,EAAA;EAAC,KAAA,GAAQ,CAAA;;GAAA;EAKR,QAAA,GAAW,WAAA,CAAY,KAAZ,EAAmB,CAAC,IAAD,CAAA,GAAA;IAC7B,IAAI,IAAA,KAAQ,KAAZ;AACC,aAAO,MADR;KAAA,MAAA;AAGC,aAAO,IAAI,CAAC,WAAL,CAAA,EAHR;;EAD6B,CAAnB;SAKX,KAAA,CAAM,QAAN,EAAgB,CAAA;GAAA,CAAhB;AAXA,CAAD,CAAA,CAAA;;AAiBA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,IAAA,EAAA;EAAC,IAAA,GAAO,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb;EACP,QAAA,GAAW,WAAA,CAAY,IAAZ,EAAkB,CAAC,IAAD,CAAA,GAAA;AAC5B,WAAO,IAAI,CAAC,WAAL,CAAA;EADqB,CAAlB;SAEX,KAAA,CAAM,QAAN,EAAgB,CACf,KADe,EAEf,KAFe,EAGf,KAHe,CAAhB;AAJA,CAAD,CAAA,CAAA;;AAWA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,IAAA,EAAA;EAAC,IAAA,GAAO,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb;EACP,QAAA,GAAW,WAAA,CAAY,IAAZ,EAAkB,CAAC,IAAD,CAAA,GAAA;IAC5B,IAAI,IAAA,KAAQ,KAAZ;AACC,aAAO,MADR;KAAA,MAAA;AAGC,aAAO,IAAI,CAAC,WAAL,CAAA,EAHR;;EAD4B,CAAlB;SAKX,KAAA,CAAM,QAAN,EAAgB,CACf,KADe,EAEf,KAFe,CAAhB;AAPA,CAAD,CAAA,CAAA;;AAaA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,IAAA,EAAA;EAAC,IAAA,GAAO,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb;EACP,QAAA,GAAW,WAAA,CAAY,IAAZ,EAAkB,CAAC,IAAD,EAAO,KAAP,CAAA,GAAA;IAC5B,IAAI,IAAA,KAAQ,KAAZ;AACC,aAAO,MADR;KAAA,MAEK,IAAG,OAAA,CAAQ,KAAK,CAAC,QAAd,CAAH;AACJ,aAAO,CAAA,CAAA,CAAG,KAAK,CAAC,OAAT,EAAA,CAAA,CAAoB,IAAI,CAAC,WAAL,CAAA,CAApB,EAAA,CAAA,CAA0C,KAAK,CAAC,QAAhD,CAAA,EADH;KAAA,MAAA;AAGJ,aAAO,CAAA,CAAA,CAAG,KAAK,CAAC,OAAT,EAAA,CAAA,CAAoB,IAAI,CAAC,WAAL,CAAA,CAApB,CAAA,EAHH;;EAHuB,CAAlB;SAOX,KAAA,CAAM,QAAN,EAAgB,CACf,WADe,EAEf,OAFe,CAAhB;AATA,CAAD,CAAA,CAAA,EA7nCwB;;;;AA+oCxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,IAAA,GAAO;IACN,IAAA,EAAM;MACL;QACC,YAAA,EAAc,KAAA,CAAM;UAAC;YAAC,KAAA,EAAM;UAAP,CAAD;SAAN;MACd;UAAA,GAAA,EAAK,EAAL;UACA,IAAA,EAAM,KADN;UAEA,KAAA,EAAO,CAFP;UAGA,IAAA,EAAM;QAHN,CADc;MADf,CADK;KADA;IAUN,GAAA,EAAK,EAVC;IAWN,UAAA,EAAY,QAXN;IAYN,KAAA,EAAO,CAZD;IAaN,IAAA,EAAM;EAbA;SAgBP,KAAA,CAAM,UAAA,CAAW,IAAX,EAAiB,CAAC,OAAD,EAAS,KAAT,CAAjB,CAAN,EAAyC;IACxC,IAAA,EAAM;MACL;QACC,YAAA,EAAc,KAAA,CAAM,CAAC,CAAA,CAAD,CAAN;MACd;UAAA,IAAA,EAAM,KAAN;UACA,IAAA,EAAM;QADN,CADc;MADf,CADK;KADkC;IAQxC,UAAA,EAAY,QAR4B;IASxC,IAAA,EAAM;EATkC,CAAzC;AAjBA,CAAD,CAAA,CAAA;;AA+BA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,IAAA,GAAO;IACN,IAAA,EAAM;MACL;QACC,YAAA,EAAc,KAAA,CAAM;UAAC;YAAC,KAAA,EAAM;UAAP,CAAD;SAAN;MACd;UAAA,GAAA,EAAK,EAAL;UACA,IAAA,EAAM,KADN;UAEA,KAAA,EAAO,CAFP;UAGA,IAAA,EAAM;QAHN,CADc;MADf,CADK;KADA;IAUN,GAAA,EAAK,EAVC;IAWN,UAAA,EAAY,QAXN;IAYN,KAAA,EAAO,CAZD;IAaN,IAAA,EAAM;EAbA;SAgBP,KAAA,CAAM,UAAA,CAAW,IAAX,EAAiB,CAAC,OAAD,EAAS,KAAT,CAAjB,CAAN,EAAyC;IACxC,IAAA,EAAM;MACL;QACC,YAAA,EAAc,KAAA,CAAM,CAAC,CAAA,CAAD,CAAN;MACd;UAAA,IAAA,EAAM,KAAN;UACA,IAAA,EAAM;QADN,CADc;MADf,CADK;KADkC;IAQxC,UAAA,EAAY,QAR4B;IASxC,IAAA,EAAM;EATkC,CAAzC;AAjBA,CAAD,CAAA,CAAA,EA9qCwB;;;;AAgtCxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,CAAA,EAAA;EAAC,KAAA,GAAQ;IACP,IAAA,EAAM,aADC;IAEP,KAAA,EAAO;EAFA,EAAT;;EAOC,CAAA,GAAI,QAAA,CAAS,KAAT,EAAgB;IAEnB,GAAA,EAAK,QAAA,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,CAAA;AAEJ,aAAO,KAAK,CAAC,WAAN,CAAA,EAFH;IAAA,CAFc;IAMnB,GAAA,EAAK,QAAA,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,CAAA,EAAA;;MAGJ,IAAG,CAAC,IAAA,KAAQ,MAAT,CAAA,IAAoB,CAAC,KAAK,CAAC,OAAN,CAAc,KAAd,CAAA,KAAwB,CAAzB,CAAvB;AACC,eAAO,MADR;OAAA,MAAA;AAGC,eAAO,MAHR;;IAHI;EANc,CAAhB;EAeJ,KAAA,CAAM,KAAK,CAAC,IAAZ,EAAkB,aAAlB;EACA,KAAA,CAAM,CAAC,CAAC,IAAR,EAAc,aAAd;EAEA,CAAC,CAAC,IAAF,GAAS;EACT,KAAA,CAAM,KAAK,CAAC,IAAZ,EAAkB,cAAlB;EACA,KAAA,CAAM,CAAC,CAAC,IAAR,EAAc,cAAd;EAEA,CAAC,CAAC,IAAF,GAAS;EACT,KAAA,CAAM,KAAK,CAAC,IAAZ,EAAkB,cAAlB;SACA,KAAA,CAAM,CAAC,CAAC,IAAR,EAAc,cAAd;AAhCA,CAAD,CAAA,CAAA,EAhtCwB;;;;AAuvCxB,CAAC,KAAA,CAAA,CAAA,GAAA;AACD,MAAA,GAAA,EAAA,MAAA,EAAA;EAAC,MAAA,GAAS;EACT,GAAA,GAAM,CAAC,GAAD,CAAA,GAAA;WACL,MAAM,CAAC,IAAP,CAAY,GAAZ;EADK;EAGN,IAAA,GAAO,KAAA,CAAA,CAAA,GAAA;IACN,MAAA,GAAS;IACT,QAAA,CAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,KAApB;IACA,QAAA,CAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,KAApB;IACA,MAAM,KAAA,CAAM,CAAN;IACN,QAAA,CAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,KAApB;IACA,MAAM,KAAA,CAAM,CAAN;AACN,WAAO,MAAM,CAAC,IAAP,CAAY,GAAZ;EAPD;SASP,KAAA,CAAM,CAAA,MAAM,IAAA,CAAA,CAAN,CAAN,EAAoB,aAApB;AAdA,CAAD,CAAA,CAAA;;AAiBA,CAAC,KAAA,CAAA,CAAA,GAAA;AACD,MAAA,GAAA,EAAA,MAAA,EAAA;EAAC,MAAA,GAAS;EACT,GAAA,GAAM,CAAC,GAAD,CAAA,GAAA;WACL,MAAM,CAAC,IAAP,CAAY,GAAZ;EADK;EAGN,IAAA,GAAO,KAAA,CAAA,CAAA,GAAA;IAEN,MAAA,GAAS;IACT,QAAA,CAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,KAApB;IACA,QAAA,CAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,KAApB;IACA,QAAA,CAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,KAApB;IACA,MAAM,KAAA,CAAM,CAAN;AACN,WAAO,MAAM,CAAC,IAAP,CAAY,GAAZ;EAPD;SASP,KAAA,CAAM,CAAA,MAAM,IAAA,CAAA,CAAN,CAAN,EAAoB,SAApB;AAdA,CAAD,CAAA,CAAA,EAxwCwB;;;;AA4xCxB,MAAA,CAAO,gBAAA,CAAiB,KAAjB,EAAwB,CAAC,EAAD,CAAA,GAAA;SAAQ,EAAA,KAAM,EAAE,CAAC,WAAH,CAAA;AAAd,CAAxB,CAAP;;AACA,KAAA,CAAO,gBAAA,CAAiB,KAAjB,EAAwB,CAAC,EAAD,CAAA,GAAA;SAAQ,EAAA,KAAM,EAAE,CAAC,WAAH,CAAA;AAAd,CAAxB,CAAP;;AACA,KAAA,CAAO,gBAAA,CAAiB,KAAjB,EAAwB,CAAC,EAAD,CAAA,GAAA;SAAQ,EAAA,KAAM,EAAE,CAAC,WAAH,CAAA;AAAd,CAAxB,CAAP,EA9xCwB;;;;AAmyCxB,MAAA,GAAS,CAAC,OAAD,EAAS,QAAT,EAAkB,MAAlB;;AACT,MAAA,CAAO,MAAM,CAAC,QAAP,CAAgB,MAAA,CAAO,MAAP,CAAhB,CAAP;;AACA,MAAA,CAAO,MAAM,CAAC,QAAP,CAAgB,MAAA,CAAO,MAAP,CAAhB,CAAP;;AACA,MAAA,CAAO,MAAM,CAAC,QAAP,CAAgB,MAAA,CAAO,MAAP,CAAhB,CAAP,EAtyCwB;;;;AA2yCxB,SAAA,GAAY,QAAA,CAAS,MAAT;;AACZ,OAAA,CAAQ,SAAR;;AACA,MAAA,CAAO,SAAS,CAAC,QAAV,CAAmB,OAAnB,CAAP;;AACA,MAAA,CAAO,SAAS,CAAC,QAAV,CAAmB,QAAnB,CAAP;;AACA,MAAA,CAAO,SAAS,CAAC,QAAV,CAAmB,MAAnB,CAAP;;AACA,MAAA,CAAO,SAAS,CAAC,MAAV,KAAoB,MAAM,CAAC,MAAlC,EAhzCwB;;;;AAqzCxB,OAAA,GAAU;;AACV,KAAA,CAAM,SAAA,CAAU,OAAV,CAAN,EAA0B,qBAA1B;;AACA,KAAA,CAAM,YAAA,CAAa,OAAb,CAAN,EAA6B,aAA7B;;AACA,KAAA,CAAM,UAAA,CAAW,OAAX,CAAN,EAA2B,aAA3B,EAxzCwB;;;;AA8zCxB,KAAA,CAAM,GAAA,CAAI,EAAJ,EAAQ,CAAR,CAAN,EAAkB,OAAlB;;AACA,KAAA,CAAM,GAAA,CAAI,EAAJ,EAAQ,CAAR,EAAW,cAAX,CAAN,EAAkC,OAAlC;;AACA,KAAA,CAAM,GAAA,CAAI,KAAJ,EAAW,CAAX,CAAN,EAAqB,QAArB;;AACA,KAAA,CAAM,GAAA,CAAI,KAAJ,EAAW,CAAX,EAAc,gBAAd,CAAN,EAAuC,QAAvC;;AACA,KAAA,CAAM,GAAA,CAAI,IAAJ,EAAU,CAAV,CAAN,EAAoB,MAApB;;AACA,KAAA,CAAM,GAAA,CAAI,KAAJ,EAAW,CAAX,EAAc,UAAd,CAAN,EAAiC,KAAjC,EAn0CwB;;;;AAw0CxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,CAAA,GAAI;IACH,UAAA,EAAY;MACX,MAAA,EAAQ;QACP,GAAA,EAAK;MADE,CADG;MAIX,QAAA,EAAU;QACT,GAAA,EAAK;MADI;IAJC,CADT;IASH,UAAA,EAAY;MACX,MAAA,EAAQ;QACP,GAAA,EAAK;MADE,CADG;MAIX,SAAA,EAAW;QACV,GAAA,EAAK;MADK;IAJA;EATT;EAmBJ,KAAA,CAAM,IAAA,CAAK,CAAL,CAAN,EAAe,CAAC,UAAD,EAAY,UAAZ,CAAf;EACA,MAAA,CAAO,MAAA,CAAO,CAAP,EAAU,UAAV,CAAP;EACA,KAAA,CAAM,MAAA,CAAO,CAAP,EAAU,UAAV,CAAN;EACA,KAAA,CAAM,OAAA,CAAQ,CAAR,CAAN,EAAkB,CAAC,QAAD,EAAU,UAAV,EAAqB,WAArB,CAAlB;EAEA,MAAA,CAAO,UAAA,CAAW,CAAX,EAAc,UAAd,EAA0B,UAA1B,CAAP;EACA,MAAA,CAAO,UAAA,CAAW,CAAX,EAAc,UAAd,CAAP;EACA,KAAA,CAAM,UAAA,CAAW,CAAX,EAAc,UAAd,EAA0B,UAA1B,EAAsC,UAAtC,CAAN;EAEA,MAAA,CAAO,SAAA,CAAU,CAAV,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC,CAAP;EACA,MAAA,CAAO,SAAA,CAAU,CAAV,EAAa,UAAb,EAAyB,UAAzB,CAAP;SACA,KAAA,CAAM,SAAA,CAAU,CAAV,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC,CAAN;AA/BA,CAAD,CAAA,CAAA,EAx0CwB;;;;AA62CxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA;EAAC,CAAA,GAAI;IACH,GAAA,EAAK;MACJ,MAAA,EAAQ;QACP,GAAA,EAAK;MADE,CADJ;MAIJ,QAAA,EAAU;QACT,GAAA,EAAK;MADI;IAJN,CADF;IASH,GAAA,EAAK;MACJ,MAAA,EAAQ;QACP,GAAA,EAAK;MADE,CADJ;MAIJ,SAAA,EAAW;QACV,GAAA,EAAK;MADK;IAJP;EATF;EAmBJ,IAAA,GAAO,UAAA,CAAW,CAAX,EAAc,KAAd;EACP,KAAA,CAAM,IAAN,EAAY;IACX,MAAA,EAAQ;MACP,GAAA,EAAK;IADE,CADG;IAIX,QAAA,EAAU;MACT,GAAA,EAAK;IADI;EAJC,CAAZ;EASA,KAAA,CAAM,CAAN,EAAS;IACR,GAAA,EAAK;MACJ,MAAA,EAAQ;QACP,GAAA,EAAK;MADE,CADJ;MAIJ,SAAA,EAAW;QACV,GAAA,EAAK;MADK;IAJP;EADG,CAAT;EAWA,EAAA,GAAK;IACJ,KAAA,EAAO,MADH;IAEJ,KAAA,EAAO;EAFH;EAKL,IAAA,GAAO,UAAA,CAAW,EAAX,EAAe,OAAf;EACP,KAAA,CAAM,IAAN,EAAY,MAAZ;SACA,KAAA,CAAM,EAAN,EAAU;IAAC,KAAA,EAAO;EAAR,CAAV;AAhDA,CAAD,CAAA,CAAA,EA72CwB;;;AAm6CxB,KAAA,CAAM,IAAA,CAAK;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAAL,EAAgB;EAAC,CAAA,EAAE,CAAH;EAAM,CAAA,EAAE;AAAR,CAAhB,CAAN,EAAmC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAnC;;AAEA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,IAAA,EAAA,IAAA,EAAA;EAAC,IAAA,GAAO;IACN,GAAA,EAAK,GADC;IAEN,MAAA,EAAQ,GAFF;IAGN,SAAA,EAAW;EAHL;EAKP,IAAA,GAAO;IACN,SAAA,EAAW,GADL;IAEN,MAAA,EAAQ;EAFF;EAIP,IAAA,GAAO;IACN,MAAA,EAAQ,GADF;IAEN,GAAA,EAAK,GAFC;IAGN,SAAA,EAAW;EAHL;SAKP,KAAA,CAAM,IAAA,CAAK,IAAL,EAAW,IAAX,EAAiB,IAAjB,CAAN,EAA8B,CAC7B,KAD6B,EAE7B,QAF6B,EAG7B,WAH6B,EAI7B,WAJ6B,CAA9B;AAfA,CAAD,CAAA,CAAA,EAr6CwB;;;;AA+7CxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,MAAA,EAAA;EAAC,MAAA,GAAS,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB;EACT,MAAA,GAAS,WAAA,CAAY,MAAZ,EAAoB,CAAC,IAAD,EAAO,CAAP,CAAA,GAAA;AAC5B,WAAO;EADqB,CAApB;SAET,KAAA,CAAM,MAAN,EAAc,MAAd;AAJA,CAAD,CAAA,CAAA;;AAOA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,MAAA,EAAA;EAAC,MAAA,GAAS,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB;EACT,MAAA,GAAS,WAAA,CAAY,MAAZ,EAAoB,CAAC,IAAD,EAAO,CAAP,CAAA,GAAA;IAC5B,IAAI,IAAA,KAAQ,SAAZ;AACC,aAAO,MADR;KAAA,MAAA;AAGC,aAAO,KAHR;;EAD4B,CAApB;SAKT,KAAA,CAAM,MAAN,EAAc,CAAC,QAAD,EAAW,SAAX,CAAd;AAPA,CAAD,CAAA,CAAA;;AAUA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,MAAA,EAAA;EAAC,MAAA,GAAS,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB;EACT,MAAA,GAAS,WAAA,CAAY,MAAZ,EAAoB,CAAC,IAAD,EAAO,CAAP,CAAA,GAAA;AAC5B,WAAO,IAAI,CAAC,WAAL,CAAA;EADqB,CAApB;SAET,KAAA,CAAM,MAAN,EAAc,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,CAAd;AAJA,CAAD,CAAA,CAAA;;AAOA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,MAAA,EAAA;EAAC,MAAA,GAAS,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB;EACT,MAAA,GAAS,WAAA,CAAY,MAAZ,EAAoB,CAAC,IAAD,EAAO,CAAP,CAAA,GAAA;IAC5B,IAAI,IAAA,KAAQ,SAAZ;MACC,MAAM,OADP;;AAEA,WAAO;EAHqB,CAApB;SAIT,KAAA,CAAM,MAAN,EAAc,CAAC,QAAD,EAAW,SAAX,CAAd;AANA,CAAD,CAAA,CAAA;;AASA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,MAAA,EAAA;EAAC,MAAA,GAAS,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB;EACT,MAAA,GAAS,WAAA,CAAY,MAAZ,EAAoB,CAAC,IAAD,EAAO,CAAP,CAAA,GAAA;IAC5B,IAAI,CAAC,CAAC,MAAF,KAAY,CAAhB;MACC,MAAM,OADP;;AAEA,WAAO;EAHqB,CAApB;SAIT,KAAA,CAAM,MAAN,EAAc,CAAC,QAAD,EAAW,SAAX,CAAd;AANA,CAAD,CAAA,CAAA;;AASA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,MAAA,GAAS,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB;SACT,KAAA,CAAM,CAAA,CAAA,GAAA;AACP,QAAA;WAAE,MAAA,GAAS,WAAA,CAAY,MAAZ,EAAoB,CAAC,IAAD,EAAO,CAAP,CAAA,GAAA;MAC5B,MAAM,IAAI,KAAJ,CAAU,eAAV;IADsB,CAApB;EADJ,CAAN;AAFA,CAAD,CAAA,CAAA;;AAOA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,QAAA,EAAA,cAAA,EAAA;EAAC,cAAA,GAAiB,SAAA,CAAA,CAAA;IAChB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;EAJU;EAOjB,QAAA,GAAW,CAAC,IAAD,EAAO,QAAP,CAAA,GAAA;IACV,IAAI,IAAA,GAAO,CAAX;AACC,aAAO,CAAA,CAAA,CAAG,QAAQ,CAAC,KAAZ,EAAA,CAAA,CAAqB,IAArB,CAAA,EADR;KAAA,MAAA;AAGC,aAAO,MAHR;;EADU;EAMX,MAAA,GAAS,WAAA,CAAY,cAAA,CAAA,CAAZ,EAA8B,QAA9B,EAAwC;IAAC,KAAA,EAAO;EAAR,CAAxC;SACT,KAAA,CAAM,MAAN,EAAc,CAAC,KAAD,EAAQ,KAAR,CAAd;AAfA,CAAD,CAAA,CAAA,EAh/CwB;;;AAogDxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,GAAA,GAAM,SAAA,CAAU,CAAA,CAAV,EAAc,CAAC,IAAD,EAAO,KAAP,EAAc,SAAd,EAAyB,WAAzB,CAAd,EAAqD,EAArD;EACN,KAAA,CAAM,GAAN,EAAW;IACV,MAAA,EAAQ;MAAE,GAAA,EAAK;QAAE,SAAA,EAAW;UAAE,SAAA,EAAW;QAAb;MAAb;IAAP;EADE,CAAX;SAGA,KAAA,CAAM,GAAG,CAAC,IAAD,CAAM,CAAC,KAAD,CAAO,CAAC,SAAD,CAAW,CAAC,WAAD,CAAjC,EAAgD,EAAhD;AALA,CAAD,CAAA,CAAA;;AAQA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,GAAA,GAAM,CAAA;EACN,SAAA,CAAU,GAAV,EAAe,KAAf,EAAsB,EAAtB;SACA,KAAA,CAAM,GAAN,EAAW;IAAC,GAAA,EAAK;EAAN,CAAX;AAHA,CAAD,CAAA,CAAA;;AAMA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,GAAA,GAAM,CAAA;EACN,SAAA,CAAU,GAAV,EAAe,CAAf,EAAkB,EAAlB;SACA,KAAA,CAAM,GAAN,EAAW;IAAC,GAAA,EAAK;EAAN,CAAX;AAHA,CAAD,CAAA,CAAA,EAlhDwB;;;;AA2hDxB,KAAA,CAAM,KAAA,CAAM,KAAN,CAAN,EAAoB,KAApB;;AACA,KAAA,CAAM,KAAA,CAAM,OAAN,CAAN,EAAsB,KAAtB;;AACA,KAAA,CAAM,KAAA,CAAM,SAAN,CAAN,EAAwB,KAAxB,EA7hDwB;;;;AAkiDxB,CAAC,CAAA,CAAA,GAAA;EACA,KAAA,CAAM,aAAA,CAAc;IAAC,CAAA,EAAE,CAAH;IAAM,CAAA,EAAE;EAAR,CAAd,CAAN,EAAiC;IAAC,CAAA,EAAE,CAAH;IAAM,CAAA,EAAE;EAAR,CAAjC;EACA,KAAA,CAAM,aAAA,CAAc;IAAC;MAAC,CAAA,EAAE;IAAH,CAAD;IAAQ;MAAC,CAAA,EAAE;IAAH,CAAR;GAAd,CAAN,EAAqC;IAAC,CAAA,EAAE,CAAH;IAAK,CAAA,EAAE;EAAP,CAArC;EACA,KAAA,CAAM,aAAA,CAAc;IAAC;MAAC,CAAA,EAAE;IAAH,CAAD;IAAQ;MAAC;QAAC,CAAA,EAAE;MAAH,CAAD;KAAR;GAAd,CAAN,EAAuC;IAAC,CAAA,EAAE,CAAH;IAAK,CAAA,EAAE;EAAP,CAAvC;EACA,KAAA,CAAM,aAAA,CAAc;IAAC;MAAC;QAAC,CAAA,EAAE;MAAH,CAAD;KAAD;IAAU;MAAC,CAAA,EAAE;IAAH,CAAV;GAAd,CAAN,EAAuC;IAAC,CAAA,EAAE,CAAH;IAAK,CAAA,EAAE;EAAP,CAAvC;EACA,KAAA,CAAM,aAAA,CAAc;IAAC;MAAC;QAAC,CAAA,EAAE,CAAH;QAAK,CAAA,EAAE;MAAP,CAAD;KAAD;IAAc;MAAC,CAAA,EAAE,CAAH;MAAK,CAAA,EAAE;IAAP,CAAd;GAAd,CAAN,EAA+C;IAAC,CAAA,EAAE,CAAH;IAAK,CAAA,EAAE,CAAP;IAAS,CAAA,EAAE,CAAX;IAAa,CAAA,EAAE;EAAf,CAA/C;EACA,MAAA,GAAS;IACR;MAAC,CAAA,EAAE,CAAH;MAAM,CAAA,EAAE;IAAR,CADQ;IAER;MAAC;QAAC,CAAA,EAAE;MAAH,CAAD;MAAQ;QAAC,CAAA,EAAE;MAAH,CAAR;MAAe;QAAC;UAAC,CAAA,EAAE;QAAH,CAAD;OAAf;KAFQ;;SAIT,KAAA,CAAM,aAAA,CAAc,MAAd,CAAN,EAA6B;IAC5B,CAAA,EAAE,CAD0B;IAE5B,CAAA,EAAE,CAF0B;IAG5B,CAAA,EAAE,CAH0B;IAI5B,CAAA,EAAE,CAJ0B;IAK5B,CAAA,EAAE;EAL0B,CAA7B;AAVA,CAAD,CAAA,CAAA,EAliDwB;;;;AAwjDxB,CAAC,CAAA,CAAA,GAAA;EACA,KAAA,CAAM,iBAAA,CAAkB;IACvB;MAAC,CAAA,EAAE;IAAH,CADuB;IAEvB;MAAC,CAAA,EAAE;IAAH,CAFuB;IAGvB;MAAC,CAAA,EAAE;IAAH,CAHuB;GAAlB,EAIF,GAJE,CAAN,EAIU;IACT;MAAC,CAAA,EAAE;IAAH,CADS;IAET;MAAC,CAAA,EAAE;IAAH,CAFS;IAGT;MAAC,CAAA,EAAE;IAAH,CAHS;GAJV;EAUA,KAAA,CAAM,iBAAA,CAAkB;IACvB;MAAC,IAAA,EAAM,MAAP;MAAe,GAAA,EAAK;IAApB,CADuB;IAEvB;MAAC,IAAA,EAAM,QAAP;MAAiB,GAAA,EAAK;IAAtB,CAFuB;IAGvB;MAAC,IAAA,EAAM,OAAP;MAAgB,GAAA,EAAK;IAArB,CAHuB;IAIvB;MAAC,IAAA,EAAM,KAAP;MAAc,GAAA,EAAK;IAAnB,CAJuB;GAAlB,EAKF,MALE,CAAN,EAKa;IACZ;MAAC,IAAA,EAAM,QAAP;MAAiB,GAAA,EAAK;IAAtB,CADY;IAEZ;MAAC,IAAA,EAAM,KAAP;MAAc,GAAA,EAAK;IAAnB,CAFY;IAGZ;MAAC,IAAA,EAAM,MAAP;MAAe,GAAA,EAAK;IAApB,CAHY;IAIZ;MAAC,IAAA,EAAM,OAAP;MAAgB,GAAA,EAAK;IAArB,CAJY;GALb;SAYA,KAAA,CAAM,iBAAA,CAAkB;IACvB;MAAC,IAAA,EAAM,MAAP;MAAe,GAAA,EAAK;IAApB,CADuB;IAEvB;MAAC,IAAA,EAAM,QAAP;MAAiB,GAAA,EAAK;IAAtB,CAFuB;IAGvB;MAAC,IAAA,EAAM,OAAP;MAAgB,GAAA,EAAK;IAArB,CAHuB;IAIvB;MAAC,IAAA,EAAM,KAAP;MAAc,GAAA,EAAK;IAAnB,CAJuB;GAAlB,EAKF,KALE,CAAN,EAKY;IACX;MAAC,IAAA,EAAM,OAAP;MAAgB,GAAA,EAAK;IAArB,CADW;IAEX;MAAC,IAAA,EAAM,QAAP;MAAiB,GAAA,EAAK;IAAtB,CAFW;IAGX;MAAC,IAAA,EAAM,KAAP;MAAc,GAAA,EAAK;IAAnB,CAHW;IAIX;MAAC,IAAA,EAAM,MAAP;MAAe,GAAA,EAAK;IAApB,CAJW;GALZ;AAvBA,CAAD,CAAA,CAAA,EAxjDwB;;;;AAgmDxB,CAAC,CAAA,CAAA,GAAA;EACA,KAAA,CAAM,YAAA,CAAa,MAAb,CAAN,EAA4B,MAA5B;EACA,KAAA,CAAM,YAAA,CAAa,MAAb,EAAqB;IAAC,KAAA,EAAM;EAAP,CAArB,CAAN,EACC,kBADD;EAEA,KAAA,CAAM,YAAA,CAAa,MAAb,EAAqB;IAAC,IAAA,EAAK;EAAN,CAArB,CAAN,EACC,cADD;EAEA,KAAA,CAAM,YAAA,CAAa,UAAb,EAAyB;IAC9B,IAAA,EAAM,UADwB;IAE9B,CAAA,EAAG,IAF2B;IAG9B,CAAA,EAAG,IAH2B;IAI9B,CAAA,EAAG;EAJ2B,CAAzB,CAAN,EAMC,sCAND;SAOA,KAAA,CAAM,YAAA,CAAa,UAAb,EAAyB;IAC9B,IAAA,EAAM,UADwB;IAE9B,CAAA,EAAG,IAF2B;IAG9B,CAAA,EAAG,IAH2B;IAI9B,CAAA,EAAG;EAJ2B,CAAzB,EAKF,CAAC,OAAD,EAAU,OAAV,EAAmB,YAAnB,CALE,CAAN,EAMC,+DAND;AAbA,CAAD,CAAA,CAAA,EAhmDwB;;;;AAynDxB,CAAC,CAAA,CAAA,GAAA;EACA,IAAA,CAAK,OAAA,CAAQ,UAAR,CAAL,EAA0B,KAA1B;SACA,IAAA,CAAK,OAAA,CAAQ,cAAR,CAAL,EAA8B,SAA9B;AAFA,CAAD,CAAA,CAAA,EAznDwB;;;;AAioDxB,CAAC,CAAA,CAAA,GAAA;SACA,KAAA,CAAM,WAAA,CAAA,CAAN,EAAqB,QAArB;AADA,CAAD,CAAA,CAAA",
  "sourcesContent": [
    "# base-utils.test.coffee\n\nimport * as ulib from '@jdeighan/base-utils/utest'\nObject.assign(global, ulib)\nimport * as lib from '@jdeighan/base-utils'\nObject.assign(global, lib)\n\n# ---------------------------------------------------------------------------\n#symbol undef - a synonym for JavaScript's undefined\n\nequal  undef, undefined\n\n# ---------------------------------------------------------------------------\n#symbol assert(cond, msg)\n#\n#   NOTE: There's a better assert in @jdeighan/base-utils/exceptions\n\nsucceeds () => assert(2+2==4, \"BAD\")\nfails    () => assert(2+3==4, \"BAD\")\n\n# ---------------------------------------------------------------------------\n#symbol croak(msg:string)\n#\n#   NOTE: There's a better croak in @jdeighan/base-utils/exceptions\n\nfails () => croak(\"BAD\")\n\n# ---------------------------------------------------------------------------\n#symbol pass    - a function that does nothing\n\nsucceeds () => pass()\nsucceeds () -> pass()\ntruthy pass()\n\n# ---------------------------------------------------------------------------\n#symbol defined(obj: Any): boolean\n\ntruthy defined(1)\nfalsy  defined(undefined)\nfalsy  defined(null)\n\n# ---------------------------------------------------------------------------\n#symbol notdefined(obj: Any): boolean\n\ntruthy notdefined(undefined)\nfalsy  notdefined(12)\n\n# ---------------------------------------------------------------------------\n#symbol alldefined(lObj...): boolean\n\ntruthy alldefined(13, 'abc', [], {})\nfalsy  alldefined(13, 'abc', [], {}, undef)\n\n# ---------------------------------------------------------------------------\n#symbol truncateStr(str: string, maxLen: integer): string\n\nequal truncateStr('abc', 20), 'abc'\nequal truncateStr('abcdefg', 5), 'abcd…'\n\n# ---------------------------------------------------------------------------\n#symbol hEsc = {\" \": '˳', \"\\t\": '→', \"\\r\": '◄', \"\\n\": '▼'}\n#symbol hEscNoNL{\" \": '˳', \"\\t\": '→'}\n#symbol escapeStr(str: string, {<char>: string, ...): string\n\n(() =>\n\tequal escapeStr(\"   XXX\\n\"),  \"˳˳˳XXX▼\"\n\tequal escapeStr(\"\\t ABC\\n\"),  \"→˳ABC▼\"\n\tequal escapeStr(\"X\\nX\\nX\\n\"), \"X▼X▼X▼\"\n\tequal escapeStr(\"XXX\\n\\t\\t\"), \"XXX▼→→\"\n\tequal escapeStr(\"XXX\\n  \"),   \"XXX▼˳˳\"\n\n\thEsc1 = {\n\t\t\"\\n\": \"\\\\n\"\n\t\t\"\\t\": \"\\\\t\"\n\t\t\"\\\"\": \"\\\\\\\"\"\n\t\t}\n\n\tequal escapeStr(\"\\thas quote: \\\"\\nnext line\", hEsc1),\n\t\t\"\\\\thas quote: \\\\\\\"\\\\nnext line\"\n\n\thEsc2 = {\n\t\t\"«\": \"\\\\«\"\n\t\t\"»\": \"\\\\»\"\n\t\t}\n\tequal escapeStr(\"«abc»\", hEsc2), \"\\\\«abc\\\\»\"\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol quoted(str: string, {<sub>: <rep>, ...): string\n\nequal quoted('abc'), '\"abc\"'\nequal quoted(\"mary's\"), '\"mary\\'s\"'\nequal quoted(\"\\\"mary's lamb\\\", she said\"),\n\t\t'«\"mary\\'s lamb\", she said»'\nequal quoted(\"\\\"mary's «lamb»\\\", she said\"),\n\t\t'«\"mary\\'s \\\\«lamb\\\\»\", she said»'\n\n# ---------------------------------------------------------------------------\n#symbol userSetQuoteChars: boolean\n#symbol lQuoteChars: array\n\n(() =>\n\tsucceeds () =>\n\t\tsetQuoteChars('<', '>')\n\t\tresult = quoted('abc')\n\t\tassert result == '<abc>', \"was #{result}\"\n\t\tresetQuoteChars()\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol setQuoteChars(start: char, end: char)\n#symbol resetQuoteChars()\n\n# ---------------------------------------------------------------------------\n#symbol OL(obj: Any): string\n\n(() =>\n\tfunc1 = (block) -> return \"why?\"\n\tfunc2 = (block) => return \"why?\"\n\thProc = {\n\t\tcode:   func1\n\t\thtml:   func2\n\t\tScript: (block) -> return 'x'\n\t\t}\n\n\tclass NewClass\n\t\tconstructor: () ->\n\t\t\t@me = 'John'\n\n\tobj = new NewClass()\n\n\tpromise = new Promise((resolve) => resolve('foo'))\n\n\tequal OL(undef), \"undef\"\n\tequal OL(null), \"null\"\n\tequal OL(true), 'true'\n\tequal OL(false), 'false'\n\tequal OL(42), \"42\"\n\tequal OL(3.14), \"3.14\"\n\tequal OL(BigInt(42)), \"«BigInt 42»\"\n\tequal OL(BigInt('100000000000000000000')), \"«BigInt 100000000000000000000»\"\n\tequal OL('abc'), '\"abc\"'\n\tequal OL({}), \"{}\"\n\tequal OL([]), \"[]\"\n\tequal OL({a:1,b:\"c\"}), '{\"a\":1,\"b\":\"c\"}'\n\tequal OL([1,\"a\"]), '[1,\"a\"]'\n\tequal OL(\"\\t\\tabc\\nxyz\"), '\"→→abc▼xyz\"'\n\tequal OL(\"  abc\\nxyz\"), '\"˳˳abc▼xyz\"'\n\tequal OL({a:1, b:'xyz'}), '{\"a\":1,\"b\":\"xyz\"}'\n\tequal OL(func1), '«Function func1»'\n\tequal OL(func2), '«Function func2»'\n\tequal OL(NewClass), '«Class NewClass»'\n\tequal OL(promise), '«Promise»'\n\tequal OL(obj), '{\"me\":\"John\"}'\n\tequal OL(hProc), '{\"code\":«Function func1»,\"html\":«Function func2»,\"Script\":«Function Script»}'\n\tequal OL({a:'a b', b:'a\\tb'}), '{\"a\":\"a˳b\",\"b\":\"a→b\"}'\n\tequal OL(/^ab$/), '«RegExp /^ab$/»'\n\tequal jsType(NewClass), ['class', 'NewClass']\n\tequal jsType(obj), ['object', undef]\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol jsType - get type of a JavaScript value\n\n(() =>\n\tequal jsType(undef), [undef, undef]\n\tequal jsType(null),  [undef, 'null']\n\tequal jsType('abc'), ['string', undef]\n\tequal jsType(''), ['string', 'empty']\n\tequal jsType(\"\\t\\t\"), ['string', 'empty']\n\tequal jsType(\"  \"), ['string', 'empty']\n\tequal jsType({a:1}), ['hash', undef]\n\tequal jsType({}), ['hash', 'empty']\n\tequal jsType(3.14159), ['number', undef]\n\tequal jsType(42), ['number', 'integer']\n\tequal jsType(true), ['boolean', undef]\n\tequal jsType(false), ['boolean', undef]\n\tequal jsType({}), ['hash', 'empty']\n\tequal jsType([1,2]), ['array', undef]\n\tequal jsType([]), ['array', 'empty']\n\tequal jsType(/abc/), ['regexp', undef]\n\n\tfunc1 = (x) ->\n\t\treturn\n\n\tfunc2 = (x) =>\n\t\treturn\n\n\tequal(jsType(func1), ['function', 'func1'])\n\tequal jsType(() -> 42), ['function', undef]\n\n\tequal jsType(func2), ['function', 'func2']\n\tequal jsType(() => 42), ['function', undef]\n\t)()\n\n# ---------------------------------------------------------------------------\n\ntruthy deepEqual({a:1, b:2}, {a:1, b:2})\nfalsy  deepEqual({a:1, b:2}, {a:1, b:3})\n\n# ---------------------------------------------------------------------------\n\ntruthy isEmpty('')\ntruthy isEmpty('  \\t\\t')\ntruthy isEmpty([])\ntruthy isEmpty({})\n\ntruthy nonEmpty('a')\ntruthy nonEmpty('.')\ntruthy nonEmpty([2])\ntruthy nonEmpty({width: 2})\n\n# ---------------------------------------------------------------------------\n\na = undef\nb = null\nc = 42\nd = 'dog'\ne = {a: 42}\n\ntruthy alldefined(c,d,e)\nfalsy  alldefined(a,b,c,d,e)\nfalsy  alldefined(a,c,d,e)\nfalsy  alldefined(b,c,d,e)\nequal  deepCopy(e), {a: 42}\n\n# ---------------------------------------------------------------------------\n\nequal    {a:1, b:2}, {a:1, b:2}\nnotequal {a:1, b:2}, {a:1, b:3}\n\n# ---------------------------------------------------------------------------\n\ntruthy isHashComment('   # something')\ntruthy isHashComment('   #')\nfalsy  isHashComment('   abc')\nfalsy  isHashComment('#abc')\n\ntruthy isFunction(pass)\n\npassTest = () =>\n\tpass()\nsucceeds(passTest)\n\ntruthy defined('')\ntruthy defined(5)\ntruthy defined([])\ntruthy defined({})\nfalsy  defined(undef)\nfalsy  defined(null)\n\ntruthy notdefined(undef)\ntruthy notdefined(null)\nfalsy  notdefined('')\nfalsy  notdefined(5)\nfalsy  notdefined([])\nfalsy  notdefined({})\n\n# ---------------------------------------------------------------------------\n\nequal splitPrefix(\"abc\"),     [\"\", \"abc\"]\nequal splitPrefix(\"\\tabc\"),   [\"\\t\", \"abc\"]\nequal splitPrefix(\"\\t\\tabc\"), [\"\\t\\t\", \"abc\"]\nequal splitPrefix(\"\"),        [\"\", \"\"]\nequal splitPrefix(\"\\t\\t\\t\"),  [\"\", \"\"]\nequal splitPrefix(\"\\t \\t\"),   [\"\", \"\"]\nequal splitPrefix(\"   \"),     [\"\", \"\"]\n\n# ---------------------------------------------------------------------------\n#symbol hasPrefix\n\nfalsy  hasPrefix(\"abc\")\ntruthy hasPrefix(\"   abc\")\n\n# ---------------------------------------------------------------------------\n#symbol spaces\n\nequal spaces(3), '   '\n\n# ---------------------------------------------------------------------------\n#symbol tabs\n\nequal tabs(3), \"\\t\\t\\t\"\n\n# ---------------------------------------------------------------------------\n#symbol centeredText\n\nequal centeredText('abc', 7), '  abc  '\nequal centeredText('xyz', 11, 'char=-'), '--  xyz  --'\n\n# ---------------------------------------------------------------------------\n#symbol delimitBlock\n\nequal delimitBlock(\"\"\"\n\tsome text\n\twithout context\n\t\"\"\", 'label=BLOCK width=20'), \"\"\"\n\t-----  BLOCK  ------\n\tsome text\n\twithout context\n\t--------------------\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nthreeSpaces = spaces(3)\nfourSpaces = spaces(4)\n\nequal tabify(\"\"\"\n\tfirst line\n\t#{threeSpaces}second line\n\t#{threeSpaces}#{threeSpaces}third line\n\t\"\"\", 3), \"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n# you don't need to tell it number of spaces\n# it knows from the 1st line that contains spaces\n\nequal tabify(\"\"\"\n\tfirst line\n\t#{threeSpaces}second line\n\t#{threeSpaces}#{threeSpaces}third line\n\t\"\"\"), \"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\"\n\nequal tabify(\"\"\"\n\tfirst line\n\t#{fourSpaces}second line\n\t#{fourSpaces}#{fourSpaces}third line\n\t\"\"\"), \"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nequal untabify(\"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\", 3), \"\"\"\n\tfirst line\n\t#{threeSpaces}second line\n\t#{threeSpaces}#{threeSpaces}third line\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nequal untabify(\"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\", 4), \"\"\"\n\tfirst line\n\t#{fourSpaces}second line\n\t#{fourSpaces}#{fourSpaces}third line\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nequal prefixBlock(\"\"\"\n\tabc\n\tdef\n\t\"\"\", '--'), \"\"\"\n\t--abc\n\t--def\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nequal escapeStr(\"   XXX\\n\"),  \"˳˳˳XXX▼\"\nequal escapeStr(\"\\t ABC\\n\"),  \"→˳ABC▼\"\nequal escapeStr(\"X\\nX\\nX\\n\"), \"X▼X▼X▼\"\nequal escapeStr(\"XXX\\n\\t\\t\"), \"XXX▼→→\"\nequal escapeStr(\"XXX\\n  \"),   \"XXX▼˳˳\"\n\n(() =>\n\tt = new UnitTester()\n\tt.transformValue = (str) => escapeStr(str)\n\n\tt.equal \"   XXX\\n\",  \"˳˳˳XXX▼\"\n\tt.equal \"\\t ABC\\n\",  \"→˳ABC▼\"\n\tt.equal \"X\\nX\\nX\\n\", \"X▼X▼X▼\"\n\tt.equal \"XXX\\n\\t\\t\", \"XXX▼→→\"\n\tt.equal \"XXX\\n  \",   \"XXX▼˳˳\"\n\t)()\n\nhEsc = {\n\t\"\\n\": \"\\\\n\"\n\t\"\\t\": \"\\\\t\"\n\t\"\\\"\": \"\\\\\\\"\"\n\t}\n\nequal escapeStr(\"\\thas quote: \\\"\\nnext line\", hEsc),\n\t\"\\\\thas quote: \\\\\\\"\\\\nnext line\"\n\n# ---------------------------------------------------------------------------\n\nequal OLS(['abc', 3]), '\"abc\",3'\nequal OLS([]), \"\"\nequal OLS([undef, {a:1}]), 'undef,{\"a\":1}'\n\n# ---------------------------------------------------------------------------\n\ntruthy oneof('a', 'b', 'a', 'c')\nfalsy  oneof('a', 'b', 'c')\n\n# ---------------------------------------------------------------------------\n# define some things for later tests\n\nclass NewClass\n\tconstructor: (@name = 'bob') ->\n\t\t@doIt = pass\n\tmeth: (x) ->\n\t\treturn 2 * x\n\no = new NewClass()\n\ngeneratorFunc = () ->\n\tyield 1\n\tyield 2\n\tyield 3\n\treturn\n\n# ---------------------------------------------------------------------------\n#symbol isBoolean(x:Any): boolean\n\n(() =>\n\ttruthy isBoolean(true)\n\ttruthy isBoolean(false)\n\n\tfalsy  isBoolean(42)\n\tfalsy  isBoolean(\"true\")\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol isString(x:Any): boolean\n\n(() =>\n\ttruthy isString('')\n\ttruthy isString('simple')\n\ttruthy isString(new String('abc'))\n\n\tfalsy isString(undef)\n\tfalsy isString({a:1})\n\tfalsy isString([1,2])\n\tfalsy isString(new NewClass())\n\tfalsy isString(42)\n\tfalsy isString(3.14)\n\t)()\n# ---------------------------------------------------------------------------\n#symbol isNonEmptyString(x:Any): boolean\n\n(() =>\n\ttruthy isNonEmptyString('abc')\n\ttruthy isNonEmptyString('abc def')\n\ttruthy isNonEmptyString('  abc def')\n\n\tfalsy  isNonEmptyString('')\n\tfalsy  isNonEmptyString('  ')\n\tfalsy  isNonEmptyString(\"\\t\\t\\t\")\n\tfalsy  isNonEmptyString(undef)\n\tfalsy  isNonEmptyString(5)\n\tfalsy  isNonEmptyString({a:1})\n\tfalsy  isNonEmptyString([1,2])\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol isNumber(x:Any): boolean\n\n(() =>\n\ttruthy isNumber(42)\n\ttruthy isNumber(3.14)\n\ttruthy isNumber(new Number(42))\n\ttruthy isNumber(NaN)\n\ttruthy isNumber(42.0, {min: 42.0})\n\ttruthy isNumber(42.0, {max: 42.0})\n\n\tfalsy  isNumber(undef)\n\tfalsy  isNumber(null)\n\tfalsy  isNumber({a:1})\n\tfalsy  isNumber([1,2])\n\tfalsy  isNumber(new NewClass())\n\tfalsy  isNumber('abc')\n\tfalsy  isNumber('13')\n\tfalsy  isNumber(42.0, {min: 42.1})\n\tfalsy  isNumber(42.0, {max: 41.9})\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol isNumber(x:Any): boolean\n\n(() =>\n\ttruthy isInteger(42)\n\ttruthy isInteger(new Number(42))\n\ttruthy isInteger(42, {min:  0})\n\ttruthy isInteger(42, {max: 50})\n\n\tfalsy  isInteger('abc')\n\tfalsy  isInteger({})\n\tfalsy  isInteger([])\n\tfalsy  isInteger(42, {min: 50})\n\tfalsy  isInteger(42, {max:  0})\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol isHash(x:Any): boolean\n\n(() =>\n\ttruthy isHash({})\n\ttruthy isHash({a:1})\n\n\tfalsy  isHash([1,2])\n\tfalsy  isHash(new NewClass())\n\tfalsy  isHash(42)\n\tfalsy  isHash(3.14)\n\tfalsy  isHash('abc')\n\tfalsy  isHash(new String('abc'))\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol isArray(x:Any): boolean\n\n(() =>\n\ttruthy isArray([])\n\ttruthy isArray([1,2])\n\n\tfalsy  isArray({a:1})\n\tfalsy  isArray(new NewClass())\n\tfalsy  isArray(42)\n\tfalsy  isArray(3.14)\n\tfalsy  isArray('abc')\n\tfalsy  isArray(new String('abc'))\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\ttruthy isIdentifier('abc')\n\ttruthy isIdentifier('_Abc')\n\tfalsy  isIdentifier('abc def')\n\tfalsy  isIdentifier('abc-def')\n\tfalsy  isIdentifier('class.method')\n\n\ttruthy isFunctionName('abc')\n\ttruthy isFunctionName('_Abc')\n\tfalsy  isFunctionName('abc def')\n\tfalsy  isFunctionName('abc-def')\n\tfalsy  isFunctionName('D()')\n\ttruthy isFunctionName('class.method')\n\n\ttruthy isIterable(generatorFunc())\n\n\ttruthy isClass(NewClass)\n\tfalsy  isClass(o)\n\n\ttruthy isConstructor(NewClass)\n\tfalsy  isConstructor(o)\n\n\ttruthy isFunction(() -> 42)\n\ttruthy isFunction(() => 42)\n\tfalsy  isFunction(undef)\n\tfalsy  isFunction(null)\n\tfalsy  isFunction(42)\n\tfalsy  isFunction(3.14)\n\n\ttruthy isRegExp(/^abc$/)\n\ttruthy isRegExp(///^ \\s* where \\s+ areyou $///)\n\tfalsy  isRegExp(42)\n\tfalsy  isRegExp('abc')\n\tfalsy  isRegExp([1,'a'])\n\tfalsy  isRegExp({a:1, b:'ccc'})\n\tfalsy  isRegExp(undef)\n\ttruthy isRegExp(/\\.coffee/)\n\n\tfalsy  isObject({a:1})\n\tfalsy  isObject([1,2])\n\ttruthy isObject(o)\n\ttruthy isObject(o, ['name','doIt'])\n\ttruthy isObject(o, \"name doIt\")\n\tfalsy  isObject(o, ['name','doIt','missing'])\n\tfalsy  isObject(o, \"name doIt missing\")\n\tfalsy  isObject(42)\n\tfalsy  isObject(3.14)\n\tfalsy  isObject('abc')\n\tfalsy  isObject(new String('abc'))\n\ttruthy isObject(o, \"name doIt\")\n\ttruthy isObject(o, \"name doIt meth\")\n\ttruthy isObject(o, \"name &doIt &meth\")\n\tfalsy  isObject(o, \"&name\")\n\t)()\n\n# ---------------------------------------------------------------------------\n\nequal blockToArray(undef), []\nequal blockToArray(''), []\nequal blockToArray('a'), ['a']\nequal blockToArray(\"a\\nb\"), ['a','b']\nequal blockToArray(\"a\\r\\nb\"), ['a','b']\nequal blockToArray(\"abc\\nxyz\"), [\n\t'abc'\n\t'xyz'\n\t]\n\nequal blockToArray(\"abc\\nxyz\"), [\n\t'abc'\n\t'xyz'\n\t]\n\nequal blockToArray(\"abc\\n\\nxyz\"), [\n\t'abc'\n\t''\n\t'xyz'\n\t]\n\n# ---------------------------------------------------------------------------\n\nequal toArray(\"abc\\ndef\"), ['abc','def']\nequal toArray(['a','b']), ['a','b']\n\nequal toArray([\"a\\nb\",\"c\\nd\"]), ['a','b','c','d']\n\n# ---------------------------------------------------------------------------\n\nequal arrayToBlock(undef), ''\nequal arrayToBlock([]), ''\nequal arrayToBlock([undef]), ''\nequal arrayToBlock(['a  ','b\\t\\t']), \"a\\nb\"\nequal arrayToBlock(['a','b','c']), \"a\\nb\\nc\"\nequal arrayToBlock(['a',undef,'b','c']), \"a\\nb\\nc\"\nequal arrayToBlock([undef,'a','b','c',undef]), \"a\\nb\\nc\"\n\n# ---------------------------------------------------------------------------\n\nequal toBlock(['abc','def']), \"abc\\ndef\"\nequal toBlock(\"abc\\ndef\"), \"abc\\ndef\"\n\n# ---------------------------------------------------------------------------\n\nequal rtrim(\"abc\"), \"abc\"\nequal rtrim(\"  abc\"), \"  abc\"\nequal rtrim(\"abc  \"), \"abc\"\nequal rtrim(\"  abc  \"), \"  abc\"\n\n# ---------------------------------------------------------------------------\n\nequal words(''), []\nequal words('  \\t\\t'), []\nequal words('a b c'), ['a', 'b', 'c']\nequal words('  a   b   c  '), ['a', 'b', 'c']\nequal words('a b', 'c d'), ['a', 'b', 'c', 'd']\nequal words(' my word ', ' is  word  '), ['my', 'word', 'is', 'word']\n\n# ---------------------------------------------------------------------------\n\nequal mkword('a', 'b', 'c'), 'abc'\nequal mkword(['a','b','c']), 'abc'\nequal mkword('a', ' ', 'c'), 'a c'\nequal mkword(['a',' ','c']), 'a c'\nequal mkword([null, ['4','2'], null]), '42'\n\n# ---------------------------------------------------------------------------\n\ntruthy hasChar('abc', 'b')\nfalsy  hasChar('abc', 'x')\nfalsy  hasChar(\"\\t\\t\", ' ')\n\n# ---------------------------------------------------------------------------\n\nequal quoted('abc'), '\"abc\"'\nequal quoted('\"abc\"'), \"'\\\"abc\\\"'\"\nequal quoted(\"'abc'\"), \"\\\"'abc'\\\"\"\nequal quoted(\"'\\\"abc\\\"'\"), \"«'\\\"abc\\\"'»\"\nequal quoted(\"'\\\"<abc>\\\"'\"), \"«'\\\"<abc>\\\"'»\"\n\n# ---------------------------------------------------------------------------\n\nequal getOptions(), {}\nequal getOptions(undef, {x:1}), {x:1}\nequal getOptions({x:1}, {x:3,y:4}), {x:1,y:4}\nequal getOptions('asText'), {asText: true}\nequal getOptions('!binary'), {binary: false}\nequal getOptions('label=this'), {label: 'this'}\nequal getOptions('width=42'), {width: 42}\nequal getOptions('asText !binary label=this'), {\n\tasText: true\n\tbinary: false\n\tlabel: 'this'\n\t}\n\n# ---------------------------------------------------------------------------\n\nequal range(3), [0,1,2]\nequal rev_range(3), [2,1,0]\n\n# ---------------------------------------------------------------------------\n\ntruthy isHashComment('#')\ntruthy isHashComment('# a comment')\ntruthy isHashComment('#\\ta comment')\nfalsy  isHashComment('#comment')\nfalsy  isHashComment('')\nfalsy  isHashComment('a comment')\n\n# ---------------------------------------------------------------------------\n\ntruthy isEmpty('')\ntruthy isEmpty('  \\t\\t')\ntruthy isEmpty([])\ntruthy isEmpty({})\n\ntruthy nonEmpty('a')\ntruthy nonEmpty('.')\ntruthy nonEmpty([2])\ntruthy nonEmpty({width: 2})\n\n\n# ---------------------------------------------------------------------------\n\ntruthy oneof('a', 'a', 'b', 'c')\ntruthy oneof('b', 'a', 'b', 'c')\ntruthy oneof('c', 'a', 'b', 'c')\nfalsy  oneof('d', 'a', 'b', 'c')\nfalsy  oneof('x')\n\n# ---------------------------------------------------------------------------\n\nequal uniq([1,2,2,3,3]), [1,2,3]\nequal uniq(['a','b','b','c','c']),['a','b','c']\n\n# ---------------------------------------------------------------------------\n\nequal rtrim(\"abc\"), \"abc\"\nequal rtrim(\"  abc\"), \"  abc\"\nequal rtrim(\"abc  \"), \"abc\"\nequal rtrim(\"  abc  \"), \"  abc\"\n\n# ---------------------------------------------------------------------------\n\nequal words('a b c'), ['a', 'b', 'c']\nequal words('  a   b   c  '), ['a', 'b', 'c']\n\n# ---------------------------------------------------------------------------\n\nequal escapeStr(\"\\t\\tXXX\\n\"), \"→→XXX▼\"\nhEsc = {\n\t\"\\n\": \"\\\\n\"\n\t\"\\t\": \"\\\\t\"\n\t\"\\\"\": \"\\\\\\\"\"\n\t}\nequal escapeStr(\"\\thas quote: \\\"\\nnext line\", hEsc), \\\n\t\"\\\\thas quote: \\\\\\\"\\\\nnext line\"\n\n# ---------------------------------------------------------------------------\n\nequal rtrunc('/user/lib/.env', 5), '/user/lib'\nequal ltrunc('abcdefg', 3), 'defg'\n\n# ---------------------------------------------------------------------------\n\nequal CWS(\"\"\"\n\t\tabc\n\t\tdef\n\t\t\t\tghi\n\t\t\"\"\"), \"abc def ghi\"\n\n# ---------------------------------------------------------------------------\n\nequal trimArray(['', 'abc']), ['abc']\nequal trimArray(['abc', '']), ['abc']\nequal trimArray(['', '   ', 'abc', '', \"\\t\"]), ['abc']\n\n# ---------------------------------------------------------------------------\n\nequal removeEmptyLines(['', 'abc', '']), ['abc']\nequal removeEmptyLines([' ', 'abc', ' ']), ['abc']\nequal removeEmptyLines(['\\t', 'abc', '\\n']), ['abc']\n\n# ---------------------------------------------------------------------------\n\nequal CWSALL(\"\"\"\n\tone    line\n\t    second      line\n\t\"\"\"), \"\"\"\n\tone line\n\tsecond line\n\t\"\"\"\n\nequal CWSALL([\n\t'one    line'\n\t'    second      line'\n\t]), [\n\t'one line'\n\t'second line'\n\t]\n\nequal CWSALL(\"\"\"\n\n\tone    line\n\t    second      line\n\n\t\"\"\"), \"\"\"\n\tone line\n\tsecond line\n\t\"\"\"\n\nequal CWSALL([\n\t''\n\t'one    line'\n\t'    second      line'\n\t''\n\t]), [\n\t'one line'\n\t'second line'\n\t]\n\n# ---------------------------------------------------------------------------\n\ntruthy isArrayOfStrings([])\ntruthy isArrayOfStrings(['a','b','c'])\ntruthy isArrayOfStrings(['a',undef, null, 'b'])\n\n# ---------------------------------------------------------------------------\n\ntruthy isArrayOfArrays([])\ntruthy isArrayOfArrays([[], []])\ntruthy isArrayOfArrays([[1,2], []])\ntruthy isArrayOfArrays([[1,2,[1,2,3]], []])\ntruthy isArrayOfArrays([[1,2], undef, null, []])\n\nfalsy isArrayOfArrays({})\nfalsy isArrayOfArrays([1,2,3])\nfalsy isArrayOfArrays([[1,2,[3,4]], 4])\nfalsy isArrayOfArrays([[1,2,[3,4]], [], {a:1,b:2}])\n\ntruthy isArrayOfArrays([[1,2],[3,4],[4,5]], 2)\nfalsy  isArrayOfArrays([[1,2],[3],[4,5]], 2)\nfalsy  isArrayOfArrays([[1,2],[3,4,5],[4,5]], 2)\n\n# ---------------------------------------------------------------------------\n\ntruthy isArrayOfHashes([])\ntruthy isArrayOfHashes([{}, {}])\ntruthy isArrayOfHashes([{a:1, b:2}, {}])\ntruthy isArrayOfHashes([{a:1, b:2, c: [1,2,3]}, {}])\ntruthy isArrayOfHashes([{a:1, b:2}, undef, null, {}])\n\nfalsy isArrayOfHashes({})\nfalsy isArrayOfHashes([1,2,3])\nfalsy isArrayOfHashes([{a:1, b:2, c: [1,2,3]}, 4])\nfalsy isArrayOfHashes([{a:1, b:2, c: [1,2,3]}, {}, [1,2]])\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tclass NewClass\n\t\tconstructor: (@name = 'bob') ->\n\t\t\tpass\n\t\tdoIt: () ->\n\t\t\tpass\n\n\th = {a:1, b:2}\n\tl = [1,2,2]\n\to = new NewClass()\n\tn = 42\n\tn2 = new Number(42)\n\ts = 'u'\n\ts2 = new String('abc')\n\n\ttruthy isHash(h)\n\tfalsy isHash(l)\n\tfalsy isHash(o)\n\tfalsy isHash(n)\n\tfalsy isHash(n2)\n\tfalsy isHash(s)\n\tfalsy isHash(s2)\n\n\tfalsy isArray(h)\n\ttruthy isArray(l)\n\tfalsy isArray(o)\n\tfalsy isArray(n)\n\tfalsy isArray(n2)\n\tfalsy isArray(s)\n\tfalsy isArray(s2)\n\n\tfalsy isString(undef)\n\tfalsy isString(h)\n\tfalsy isString(l)\n\tfalsy isString(o)\n\tfalsy isString(n)\n\tfalsy isString(n2)\n\ttruthy isString(s)\n\ttruthy isString(s2)\n\n\tfalsy isObject(h)\n\tfalsy isObject(l)\n\ttruthy isObject(o)\n\ttruthy isObject(o, ['name','doIt'])\n\tfalsy isObject(o, ['name','doIt','missing'])\n\tfalsy isObject(n)\n\tfalsy isObject(n2)\n\tfalsy isObject(s)\n\tfalsy isObject(s2)\n\n\tfalsy isNumber(h)\n\tfalsy isNumber(l)\n\tfalsy isNumber(o)\n\ttruthy isNumber(n)\n\ttruthy isNumber(n2)\n\tfalsy isNumber(s)\n\tfalsy isNumber(s2)\n\n\ttruthy isNumber(42.0, {min: 42.0})\n\tfalsy isNumber(42.0, {min: 42.1})\n\ttruthy isNumber(42.0, {max: 42.0})\n\tfalsy isNumber(42.0, {max: 41.9})\n\t)()\n\n# ---------------------------------------------------------------------------\n\ntruthy isFunction(() -> pass)\nfalsy isFunction(23)\n\ntruthy isInteger(42)\ntruthy isInteger(new Number(42))\nfalsy isInteger('abc')\nfalsy isInteger({})\nfalsy isInteger([])\ntruthy isInteger(42, {min:  0})\nfalsy isInteger(42, {min: 50})\ntruthy isInteger(42, {max: 50})\nfalsy isInteger(42, {max:  0})\n\n# ---------------------------------------------------------------------------\n\nequal OL(undef), \"undef\"\nequal OL(\"\\t\\tabc\\nxyz\"), '\"→→abc▼xyz\"'\nequal OL({a:1, b:'xyz'}), '{\"a\":1,\"b\":\"xyz\"}'\n\n# ---------------------------------------------------------------------------\n\nequal CWS(\"\"\"\n\t\ta u\n\t\terror message\n\t\t\"\"\"), \"a u error message\"\n\n# ---------------------------------------------------------------------------\n# test isRegExp()\n\ntruthy isRegExp(/^abc$/)\ntruthy isRegExp(///^\n\t\t\\s*\n\t\twhere\n\t\t\\s+\n\t\tareyou\n\t\t$///)\nfalsy isRegExp(42)\nfalsy isRegExp('abc')\nfalsy isRegExp([1,'a'])\nfalsy isRegExp({a:1, b:'ccc'})\nfalsy isRegExp(undef)\n\ntruthy isRegExp(/\\.coffee/)\n\n# ---------------------------------------------------------------------------\n\nequal extractMatches(\"..3 and 4 plus 5\", /\\d+/g, parseInt),\n\t[3, 4, 5]\nequal extractMatches(\"And This Is A String\", /A/g), ['A','A']\n\n# ---------------------------------------------------------------------------\n\ntruthy notdefined(undef)\ntruthy notdefined(null)\ntruthy defined('')\ntruthy defined(5)\ntruthy defined([])\ntruthy defined({})\n\nfalsy defined(undef)\nfalsy defined(null)\nfalsy notdefined('')\nfalsy notdefined(5)\nfalsy notdefined([])\nfalsy notdefined({})\n\n# ---------------------------------------------------------------------------\n\ntruthy isIterable([])\ntruthy isIterable(['a','b'])\n\ngen = () ->\n\tyield 1\n\tyield 2\n\tyield 3\n\treturn\n\ntruthy isIterable(gen())\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tclass MyClass\n\t\tconstructor: (str) ->\n\t\t\t@mystr = str\n\n\tequal className(MyClass), 'MyClass'\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\nequal getOptions('a b c'), {'a':true, 'b':true, 'c':true}\nequal getOptions('abc'), {'abc':true}\nequal getOptions({'a':true, 'b':false, 'c':42}), {'a':true, 'b':false, 'c':42}\nequal getOptions(), {}\n\n# ---------------------------------------------------------------------------\n# --- test forEachLine\n\n(() =>\n\tlResult = []\n\tblock = \"\"\"\n\t\tabc\n\t\tdef\n\t\tghi\n\t\t\"\"\"\n\tforEachLine block, (line) =>\n\t\tlResult.push line.toUpperCase()\n\t\treturn false\n\tequal lResult, ['ABC','DEF', 'GHI']\n\t)()\n\n(() =>\n\tlResult = []\n\tblock = \"\"\"\n\t\tabc\n\t\tdef\n\t\tghi\n\t\t\"\"\"\n\tforEachLine block, (line) =>\n\t\tif (line == 'ghi')\n\t\t\treturn true\n\t\tlResult.push line.toUpperCase()\n\t\treturn false\n\n\tequal lResult, ['ABC','DEF']\n\t)()\n\n(() =>\n\tlResult = []\n\titem = ['abc','def','ghi']\n\tforEachLine item, (line) =>\n\t\tlResult.push line.toUpperCase()\n\t\treturn false\n\tequal lResult, ['ABC','DEF', 'GHI']\n\t)()\n\n(() =>\n\tlResult = []\n\titem = ['abc','def','ghi']\n\tforEachLine item, (line) =>\n\t\tif (line == 'ghi')\n\t\t\treturn true\n\t\tlResult.push line.toUpperCase()\n\t\treturn false\n\n\tequal lResult, ['ABC','DEF']\n\t)()\n\n(() =>\n\tlResult = []\n\titem = ['abc','def','ghi']\n\tforEachLine item, (line, hInfo) =>\n\t\tif (line == 'ghi')\n\t\t\treturn true\n\t\tlResult.push \"#{hInfo.lineNum} #{line.toUpperCase()} #{hInfo.nextLine}\"\n\t\treturn false\n\n\tequal lResult, ['1 ABC def','2 DEF ghi']\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test mapEachLine\n\n(() =>\n\tblock = \"\"\"\n\t\tabc\n\t\tdef\n\t\tghi\n\t\t\"\"\"\n\tnewblock = mapEachLine block, (line) =>\n\t\treturn line.toUpperCase()\n\tequal newblock, \"\"\"\n\t\tABC\n\t\tDEF\n\t\tGHI\n\t\t\"\"\"\n\t)()\n\n(() =>\n\tblock = \"\"\"\n\t\tabc\n\t\tdef\n\t\tghi\n\t\t\"\"\"\n\tnewblock = mapEachLine block, (line) =>\n\t\tif (line == 'def')\n\t\t\treturn undef\n\t\telse\n\t\t\treturn line.toUpperCase()\n\tequal newblock, \"\"\"\n\t\tABC\n\t\tGHI\n\t\t\"\"\"\n\t)()\n\n(() =>\n\titem = ['abc','def','ghi']\n\tnewblock = mapEachLine item, (line) =>\n\t\treturn line.toUpperCase()\n\tequal newblock, [\n\t\t'ABC'\n\t\t'DEF'\n\t\t'GHI'\n\t\t]\n\t)()\n\n(() =>\n\titem = ['abc','def','ghi']\n\tnewblock = mapEachLine item, (line) =>\n\t\tif (line == 'def')\n\t\t\treturn undef\n\t\telse\n\t\t\treturn line.toUpperCase()\n\tequal newblock, [\n\t\t'ABC'\n\t\t'GHI'\n\t\t]\n\t)()\n\n(() =>\n\titem = ['abc','def','ghi']\n\tnewblock = mapEachLine item, (line, hInfo) =>\n\t\tif (line == 'def')\n\t\t\treturn undef\n\t\telse if defined(hInfo.nextLine)\n\t\t\treturn \"#{hInfo.lineNum} #{line.toUpperCase()} #{hInfo.nextLine}\"\n\t\telse\n\t\t\treturn \"#{hInfo.lineNum} #{line.toUpperCase()}\"\n\tequal newblock, [\n\t\t'1 ABC def'\n\t\t'3 GHI'\n\t\t]\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test removeKeys\n\n(() =>\n\thAST = {\n\t\tbody: [\n\t\t\t{\n\t\t\t\tdeclarations: Array [{start:0}],\n\t\t\t\tend: 11,\n\t\t\t\tkind: 'let',\n\t\t\t\tstart: 0,\n\t\t\t\ttype: 'VariableDeclaration',\n\t\t\t\t},\n\t\t\t],\n\t\tend: 11,\n\t\tsourceType: 'script',\n\t\tstart: 0,\n\t\ttype: 'Program',\n\t\t}\n\n\tequal removeKeys(hAST, ['start','end']), {\n\t\tbody: [\n\t\t\t{\n\t\t\t\tdeclarations: Array [{}],\n\t\t\t\tkind: 'let',\n\t\t\t\ttype: 'VariableDeclaration',\n\t\t\t\t},\n\t\t\t],\n\t\tsourceType: 'script',\n\t\ttype: 'Program',\n\t\t}\n\n\t)()\n\n(() =>\n\thAST = {\n\t\tbody: [\n\t\t\t{\n\t\t\t\tdeclarations: Array [{start:0}],\n\t\t\t\tend: 12,\n\t\t\t\tkind: 'let',\n\t\t\t\tstart: 0,\n\t\t\t\ttype: 'VariableDeclaration',\n\t\t\t\t},\n\t\t\t],\n\t\tend: 12,\n\t\tsourceType: 'script',\n\t\tstart: 0,\n\t\ttype: 'Program',\n\t\t}\n\n\tequal removeKeys(hAST, ['start','end']), {\n\t\tbody: [\n\t\t\t{\n\t\t\t\tdeclarations: Array [{}],\n\t\t\t\tkind: 'let',\n\t\t\t\ttype: 'VariableDeclaration',\n\t\t\t\t},\n\t\t\t],\n\t\tsourceType: 'script',\n\t\ttype: 'Program',\n\t\t}\n\n\t)()\n\n# ---------------------------------------------------------------------------\n# test getProxy()\n\n(() =>\n\thToDo = {\n\t\ttask: 'go shopping'\n\t\tnotes: 'broccoli, milk'\n\t\t}\n\n\t# ..........................................................\n\n\th = getProxy hToDo, {\n\n\t\tget: (obj, prop, value) ->\n\n\t\t\treturn value.toUpperCase() # return in upper case\n\n\t\tset: (obj, prop, value) ->\n\t\t\t# --- only allow setting tasks to 'do <something>'\n\n\t\t\tif (prop == 'task') && (value.indexOf('do ') != 0)\n\t\t\t\treturn undef\n\t\t\telse\n\t\t\t\treturn value\n\t\t}\n\n\tequal hToDo.task, 'go shopping'\n\tequal h.task, 'GO SHOPPING'\n\n\th.task = 'do something'\n\tequal hToDo.task, 'do something'\n\tequal h.task, 'DO SOMETHING'\n\n\th.task = 'nothing'\n\tequal hToDo.task, 'do something'\n\tequal h.task, 'DO SOMETHING'\n\n\t)()\n\n# ---------------------------------------------------------------------------\n# test doDelayed()\n\n(() =>\n\tlLines = undef\n\tLOG = (str) =>\n\t\tlLines.push str\n\n\trun1 = () =>\n\t\tlLines = []\n\t\tschedule 1, 1, LOG, 'abc'\n\t\tschedule 2, 2, LOG, 'def'\n\t\tawait sleep 5\n\t\tschedule 3, 1, LOG, 'ghi'\n\t\tawait sleep 5\n\t\treturn lLines.join(',')\n\n\tequal await run1(), 'abc,def,ghi'\n\t)()\n\n(() =>\n\tlLines = undef\n\tLOG = (str) =>\n\t\tlLines.push str\n\n\trun2 = () =>\n\n\t\tlLines = []\n\t\tschedule 1, 1, LOG, 'abc'\n\t\tschedule 2, 2, LOG, 'def'\n\t\tschedule 3, 1, LOG, 'ghi'\n\t\tawait sleep 5\n\t\treturn lLines.join(',')\n\n\tequal await run2(), 'def,ghi'\n\t)()\n\n# ---------------------------------------------------------------------------\n# test eachCharInString()\n\ntruthy eachCharInString 'ABC', (ch) => ch == ch.toUpperCase()\nfalsy  eachCharInString 'abc', (ch) => ch == ch.toUpperCase()\nfalsy  eachCharInString 'AbC', (ch) => ch == ch.toUpperCase()\n\n# ---------------------------------------------------------------------------\n# test choose()\n\nlItems = ['apple','orange','pear']\ntruthy lItems.includes(choose(lItems))\ntruthy lItems.includes(choose(lItems))\ntruthy lItems.includes(choose(lItems))\n\n# ---------------------------------------------------------------------------\n# test shuffle()\n\nlShuffled = deepCopy(lItems)\nshuffle(lShuffled)\ntruthy lShuffled.includes('apple')\ntruthy lShuffled.includes('orange')\ntruthy lShuffled.includes('pear')\ntruthy lShuffled.length == lItems.length\n\n# ---------------------------------------------------------------------------\n# test some date functions\n\ndateStr = '2023-01-01 05:00:00'\nequal timestamp(dateStr), \"1/1/2023 5:00:00 AM\"\nequal msSinceEpoch(dateStr), 1672567200000\nequal formatDate(dateStr), \"Jan 1, 2023\"\n\n\n# ---------------------------------------------------------------------------\n# test pad()\n\nequal pad(23, 5), \"   23\"\nequal pad(23, 5, 'justify=left'), '23   '\nequal pad('abc', 6), 'abc   '\nequal pad('abc', 6, 'justify=center'), ' abc  '\nequal pad(true, 3), 'true'\nequal pad(false, 3, 'truncate'), 'fal'\n\n# ---------------------------------------------------------------------------\n# test keys(), hasKey(), hasAllKeys(), hasAnyKey(), subkeys()\n\n(() =>\n\th = {\n\t\t'2023-Nov': {\n\t\t\tDining: {\n\t\t\t\tamt: 200\n\t\t\t\t}\n\t\t\tHardware: {\n\t\t\t\tamt: 50\n\t\t\t\t}\n\t\t\t}\n\t\t'2023-Dec': {\n\t\t\tDining: {\n\t\t\t\tamt: 300\n\t\t\t\t}\n\t\t\tInsurance: {\n\t\t\t\tamt: 150\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\tequal keys(h), ['2023-Nov','2023-Dec']\n\ttruthy hasKey(h, '2023-Nov')\n\tfalsy hasKey(h, '2023-Oct')\n\tequal subkeys(h), ['Dining','Hardware','Insurance']\n\n\ttruthy hasAllKeys(h, '2023-Nov', '2023-Dec')\n\ttruthy hasAllKeys(h, '2023-Nov')\n\tfalsy hasAllKeys(h, '2023-Oct', '2023-Nov', '2023-Dec')\n\n\ttruthy hasAnyKey(h, '2023-Oct', '2023-Nov', '2023-Dec')\n\ttruthy hasAnyKey(h, '2023-Oct', '2023-Nov')\n\tfalsy hasAnyKey(h, '2023-Jan', '2023-Feb', '2023-Mar')\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test extractKey()\n\n(() =>\n\th = {\n\t\tNov: {\n\t\t\tDining: {\n\t\t\t\tamt: 200\n\t\t\t\t}\n\t\t\tHardware: {\n\t\t\t\tamt: 50\n\t\t\t\t}\n\t\t\t}\n\t\tDec: {\n\t\t\tDining: {\n\t\t\t\tamt: 300\n\t\t\t\t}\n\t\t\tInsurance: {\n\t\t\t\tamt: 150\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\tval1 = extractKey(h, 'Nov')\n\tequal val1, {\n\t\tDining: {\n\t\t\tamt: 200\n\t\t\t}\n\t\tHardware: {\n\t\t\tamt: 50\n\t\t\t}\n\t\t}\n\n\tequal h, {\n\t\tDec: {\n\t\t\tDining: {\n\t\t\t\tamt: 300\n\t\t\t\t}\n\t\t\tInsurance: {\n\t\t\t\tamt: 150\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\th2 = {\n\t\tfName: 'John'\n\t\tlName: 'Deighan'\n\t\t}\n\n\tval2 = extractKey(h2, 'fName')\n\tequal val2, 'John'\n\tequal h2, {lName: 'Deighan'}\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\nequal keys({a:1, b:2},{c:3, b:5}), ['a','b','c']\n\n(() =>\n\thJan = {\n\t\tGas: 210\n\t\tDining: 345\n\t\tInsurance: 910\n\t\t}\n\thFeb = {\n\t\tInsurance: 450\n\t\tDining: 440\n\t\t}\n\thMar = {\n\t\tDining: 550\n\t\tGas: 200\n\t\tStarbucks: 125\n\t\t}\n\tequal keys(hJan, hFeb, hMar), [\n\t\t'Gas'\n\t\t'Dining'\n\t\t'Insurance'\n\t\t'Starbucks'\n\t\t]\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test forEachItem()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tresult = forEachItem lWords, (item, h) =>\n\t\treturn item\n\tequal result, lWords\n\t)()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tresult = forEachItem lWords, (item, h) =>\n\t\tif (item == 'highway')\n\t\t\treturn undef\n\t\telse\n\t\t\treturn item\n\tequal result, ['bridge', 'garbage']\n\t)()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tresult = forEachItem lWords, (item, h) =>\n\t\treturn item.toUpperCase()\n\tequal result, ['BRIDGE', 'HIGHWAY', 'GARBAGE']\n\t)()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tresult = forEachItem lWords, (item, h) =>\n\t\tif (item == 'garbage')\n\t\t\tthrow 'stop'\n\t\treturn item\n\tequal result, ['bridge', 'highway']\n\t)()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tresult = forEachItem lWords, (item, h) =>\n\t\tif (h._index == 2)\n\t\t\tthrow 'stop'\n\t\treturn item\n\tequal result, ['bridge', 'highway']\n\t)()\n\n(() =>\n\tlWords = ['bridge', 'highway', 'garbage']\n\tfails () =>\n\t\tresult = forEachItem lWords, (item, h) =>\n\t\t\tthrow new Error(\"unknown error\")\n\t)()\n\n(() =>\n\tcountGenerator = () ->\n\t\tyield 1\n\t\tyield 2\n\t\tyield 3\n\t\tyield 4\n\t\treturn\n\n\tcallback = (item, hContext) =>\n\t\tif (item > 2)\n\t\t\treturn \"#{hContext.label} #{item}\"\n\t\telse\n\t\t\treturn undef\n\n\tresult = forEachItem countGenerator(), callback, {label: 'X'}\n\tequal result, ['X 3', 'X 4']\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tobj = addToHash {}, [2024, 'Mar', 'Eat Out', 'Starbucks'], 23\n\tequal obj, {\n\t\t'2024': { Mar: { 'Eat Out': { Starbucks: 23 } } }\n\t\t}\n\tequal obj[2024]['Mar']['Eat Out']['Starbucks'], 23\n\t)()\n\n(() =>\n\tobj = {}\n\taddToHash obj, 'Mar', 23\n\tequal obj, {Mar: 23}\n\t)()\n\n(() =>\n\tobj = {}\n\taddToHash obj, 2, 23\n\tequal obj, {'2': 23}\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test chomp()\n\nequal chomp('abc'), 'abc'\nequal chomp('abc\\n'), 'abc'\nequal chomp('abc\\r\\n'), 'abc'\n\n# ---------------------------------------------------------------------------\n# --- test flattenToHash()\n\n(() =>\n\tequal flattenToHash({a:1, b:2}), {a:1, b:2}\n\tequal flattenToHash([{a:1}, {b:2}]), {a:1,b:2}\n\tequal flattenToHash([{a:1}, [{b:2}]]), {a:1,b:2}\n\tequal flattenToHash([[{a:1}], {b:2}]), {a:1,b:2}\n\tequal flattenToHash([[{a:1,c:3}], {b:2,d:4}]), {a:1,b:2,c:3,d:4}\n\tlItems = [\n\t\t{a:1, b:2}\n\t\t[{c:3}, {d:4}, [{e:5}]]\n\t\t]\n\tequal flattenToHash(lItems), {\n\t\ta:1\n\t\tb:2\n\t\tc:3\n\t\td:4\n\t\te:5\n\t\t}\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test sortArrayOfHashes()\n\n(() =>\n\tequal sortArrayOfHashes([\n\t\t{a:1}\n\t\t{a:3}\n\t\t{a:2}\n\t\t], 'a'), [\n\t\t{a:1}\n\t\t{a:2}\n\t\t{a:3}\n\t\t]\n\n\tequal sortArrayOfHashes([\n\t\t{name: 'John', age: 71}\n\t\t{name: 'Arathi', age: 35}\n\t\t{name: 'Lewis', age: 33}\n\t\t{name: 'Ben', age: 39}\n\t\t], 'name'), [\n\t\t{name: 'Arathi', age: 35}\n\t\t{name: 'Ben', age: 39}\n\t\t{name: 'John', age: 71}\n\t\t{name: 'Lewis', age: 33}\n\t\t]\n\n\tequal sortArrayOfHashes([\n\t\t{name: 'John', age: 71}\n\t\t{name: 'Arathi', age: 35}\n\t\t{name: 'Lewis', age: 33}\n\t\t{name: 'Ben', age: 39}\n\t\t], 'age'), [\n\t\t{name: 'Lewis', age: 33}\n\t\t{name: 'Arathi', age: 35}\n\t\t{name: 'Ben', age: 39}\n\t\t{name: 'John', age: 71}\n\t\t]\n\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test buildCmdLine()\n\n(() =>\n\tequal buildCmdLine('doit'), 'doit'\n\tequal buildCmdLine('doit', {debug:true}),\n\t\t'doit -debug=true'\n\tequal buildCmdLine('doit', {glob:'*'}),\n\t\t'doit -glob=*'\n\tequal buildCmdLine('npx doit', {\n\t\tglob: '*.coffee',\n\t\td: true,\n\t\tf: true,\n\t\tg: false\n\t\t}),\n\t\t'npx doit -glob=*.coffee -g=false -df'\n\tequal buildCmdLine('npx doit', {\n\t\tglob: '*.coffee',\n\t\td: true,\n\t\tf: true,\n\t\tg: false\n\t\t}, ['willy', 'wonka', 'this is it']),\n\t\t'npx doit -glob=*.coffee -g=false -df willy wonka \"this is it\"'\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test execCmd()\n\n(() =>\n\tlike execCmd(\"echo abc\"), \"abc\"\n\tlike execCmd('echo my word'), 'my word'\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test npmLogLevel()\n\n(() =>\n\tequal npmLogLevel(), \"silent\"\n\t)()"
  ]
}