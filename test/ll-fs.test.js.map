{
  "version": 3,
  "file": "ll-fs.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\ll-fs.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# ll-fs.test.coffee\n\nimport {undef, LOG, samelist} from '@jdeighan/base-utils'\nimport {\n\tUnitTester,\n\tequal, like, notequal, succeeds, throws, truthy, falsy,\n\t} from '@jdeighan/base-utils/utest'\nimport {\n\tmyself, mydir, mkpath, mkDir, touch, isFile, isDir,\n\tpathType, rmFile, rmDir, parsePath, rename, clearDir,\n\tdirContents, parallelPath, subPath,\n\t} from '@jdeighan/base-utils/ll-fs'\n\ndir = mydir(import.meta.url)\nsubdir = mkpath(dir, 'test')\n\n# ---------------------------------------------------------------------------\n\nequal mkpath('C:\\\\test\\\\me'), 'c:/test/me'\nequal mkpath('c:/test/me', 'def'), 'c:/test/me/def'\nequal mkpath('c:\\\\Users', 'johnd'), 'c:/Users/johnd'\n\nequal mkpath('C:\\\\test\\\\me'), 'c:/test/me'\nequal mkpath('c:\\\\test\\\\me'), 'c:/test/me'\nequal mkpath('C:/test/me'), 'c:/test/me'\nequal mkpath('c:/test/me'), 'c:/test/me'\n\n# --- Test providing multiple args\nequal mkpath('c:/', 'test', 'me'), 'c:/test/me'\nequal mkpath('c:\\\\', 'test', 'me'), 'c:/test/me'\n\n# --- The following exists in the test folder:\n#        test/\n#           file1.txt\n#           file1.zh\n#           file2.txt\n#           file2.zh\n#           file3.txt\n\ntruthy isDir(mkpath(dir, 'test'))\nfalsy  isDir(mkpath(dir, 'xxxxx'))\ntruthy isFile(mkpath(dir, 'test', 'file1.txt'))\ntruthy isFile(mkpath(dir, 'test', 'file1.zh'))\nfalsy  isFile(mkpath(dir, 'test', 'file1'))\n\nthrows () -> pathType(42)\nequal pathType(':::::'), 'missing'\n\n# --- Test creating dir, then deleting dir\ndir2 = mkpath(subdir, 'test2')\nfalsy isDir(dir2)\nequal pathType(dir2), 'missing'\nmkDir dir2\ntruthy isDir(dir2)\nequal pathType(dir2), 'dir'\nif (dir == 'c:/User/johnd/base-utils/test')\n\tequal parsePath(dir2), {\n\t\troot: 'c:/'\n\t\tdir: 'c:/Users/johnd/base-utils/test/test'\n\t\t}\nrmDir dir2\nfalsy isDir(dir2)\n\n# --- Test creating file, then deleting dir\nfile2 = mkpath(subdir, 'file99.test.txt')\nfalsy isFile(file2)\nequal pathType(file2), 'missing'\ntouch file2\ntruthy isFile(file2)\nequal pathType(file2), 'file'\nif (dir == 'c:/Users/johnd/base-utils/test')\n\tlike parsePath(dir), {\n\t\tbase: 'test'\n\t\tdir: 'c:/Users/johnd/base-utils'\n\t\text: ''\n\t\tfileName: 'test'\n\t\tfilePath: 'c:/Users/johnd/base-utils/test'\n\t\tname: 'test'\n\t\tpath: 'c:/Users/johnd/base-utils/test'\n\t\tpurpose: undef\n\t\troot: 'c:/'\n\t\tstub: 'test'\n\t\ttype: 'dir'\n\t\t}\n\tlike parsePath(file2), {\n\t\tbase: 'file99.test.txt'\n\t\tdir: 'c:/Users/johnd/base-utils/test/test'\n\t\text: '.txt'\n\t\tfileName: 'file99.test.txt'\n\t\tfilePath: 'c:/Users/johnd/base-utils/test/test/file99.test.txt'\n\t\tname: 'file99.test'\n\t\tpath: 'c:/Users/johnd/base-utils/test/test/file99.test.txt'\n\t\tpurpose: 'test'\n\t\troot: 'c:/'\n\t\tstub: 'file99.test'\n\t\ttype: 'file'\n\t\t}\nrmFile file2\nfalsy isFile(file2)\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tdirPath = \"./test/tempdir\"\n\tfile1 = mkpath(dirPath, 'file1.txt')\n\tfile2 = mkpath(dirPath, 'file2.txt')\n\tfile3 = mkpath(dirPath, 'file3.txt')\n\n\tfalsy  isDir(dirPath)\n\tmkDir dirPath\n\ttruthy isDir(dirPath)\n\n\ttouch file1\n\ttouch file2\n\n\ttruthy isFile(file1)\n\ttruthy isFile(file2)\n\tfalsy  isFile(file3)\n\n\tequal pathType(dirPath), 'dir'\n\tequal pathType(file2), 'file'\n\tequal pathType(file3), 'missing'\n\n\ttruthy samelist(dirContents(dirPath), ['file1.txt','file2.txt'])\n\trename file2, file3\n\ttruthy samelist(dirContents(dirPath), ['file1.txt','file3.txt'])\n\trmFile file1\n\ttruthy samelist(dirContents(dirPath), ['file3.txt'])\n\tclearDir dirPath\n\ttruthy samelist(dirContents(dirPath), [])\n\n\ttruthy isDir(dirPath)\n\trmDir dirPath\n\tfalsy  isDir(dirPath)\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test parallelPath\n\npath    = 'c:/Users/johnd/base-utils/src/lib/indent.coffee'\nnewpath = 'c:/Users/johnd/base-utils/src/temp/indent.coffee'\nequal parallelPath(path), newpath\n\n# path   = 'c:/Users/johnd/base-utils/src/lib/indent.coffee'\nnewpath2 = 'c:/Users/johnd/base-utils/src/dummy/indent.coffee'\nequal parallelPath(path, 'dummy'), newpath2\n\n# path   = 'c:/Users/johnd/base-utils/src/lib/indent.coffee'\nnewpath3 = 'c:/Users/johnd/base-utils/src/lib/temp/indent.coffee'\nequal subPath(path), newpath3\n\n# path   = 'c:/Users/johnd/base-utils/src/lib/indent.coffee'\nnewpath4 = 'c:/Users/johnd/base-utils/src/lib/dummy/indent.coffee'\nequal subPath(path, 'dummy'), newpath4\n"
  ]
}