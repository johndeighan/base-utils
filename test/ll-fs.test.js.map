{
  "version": 3,
  "file": "ll-fs.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\ll-fs.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# ll-fs.test.coffee\n\nimport {undef, LOG, samelist} from '@jdeighan/base-utils'\nimport {utest} from '@jdeighan/base-utils/utest'\nimport {\n\tmyself, mydir, mkpath, mkDir, touch, isFile, isDir,\n\tpathType, rmFile, rmDir, parsePath, rename, clearDir, dirContents,\n\t} from '@jdeighan/base-utils/ll-fs'\n\ndir = mydir(import.meta.url)\nsubdir = mkpath(dir, 'test')\n\n# ---------------------------------------------------------------------------\n\nutest.equal 15, mkpath('C:\\\\test\\\\me'), 'c:/test/me'\nutest.equal 16, mkpath('c:/test/me', 'def'), 'c:/test/me/def'\nutest.equal 17, mkpath('c:\\\\Users', 'johnd'), 'c:/Users/johnd'\n\nutest.equal 19, mkpath('C:\\\\test\\\\me'), 'c:/test/me'\nutest.equal 20, mkpath('c:\\\\test\\\\me'), 'c:/test/me'\nutest.equal 21, mkpath('C:/test/me'), 'c:/test/me'\nutest.equal 22, mkpath('c:/test/me'), 'c:/test/me'\n\n# --- Test providing multiple args\nutest.equal 25, mkpath('c:/', 'test', 'me'), 'c:/test/me'\nutest.equal 26, mkpath('c:\\\\', 'test', 'me'), 'c:/test/me'\n\n# --- The following exists in the test folder:\n#        test/\n#           file1.txt\n#           file1.zh\n#           file2.txt\n#           file2.zh\n#           file3.txt\n\nutest.truthy 36, isDir(mkpath(dir, 'test'))\nutest.falsy  37, isDir(mkpath(dir, 'xxxxx'))\nutest.truthy 38, isFile(mkpath(dir, 'test', 'file1.txt'))\nutest.truthy 39, isFile(mkpath(dir, 'test', 'file1.zh'))\nutest.falsy  40, isFile(mkpath(dir, 'test', 'file1'))\n\nutest.throws 42, () -> pathType(42)\nutest.fails 43, () -> pathType(42)\nutest.equal 44, pathType(':::::'), 'missing'\n\n# --- Test creating dir, then deleting dir\ndir2 = mkpath(subdir, 'test2')\nutest.falsy 48, isDir(dir2)\nutest.equal 49, pathType(dir2), 'missing'\nmkDir dir2\nutest.truthy 51, isDir(dir2)\nutest.equal 52, pathType(dir2), 'dir'\nif (dir == 'c:/User/johnd/base-utils/test')\n\tutest.equal 54, parsePath(dir2), {\n\t\troot: 'c:/'\n\t\tdir: 'c:/Users/johnd/base-utils/test/test'\n\t\t}\nrmDir dir2\nutest.falsy 59, isDir(dir2)\n\n# --- Test creating file, then deleting dir\nfile2 = mkpath(subdir, 'file99.test.txt')\nutest.falsy 63, isFile(file2)\nutest.equal 64, pathType(file2), 'missing'\ntouch file2\nutest.truthy 66, isFile(file2)\nutest.equal 67, pathType(file2), 'file'\nif (dir == 'c:/Users/johnd/base-utils/test')\n\tutest.equal 69, parsePath(dir), {\n\t\troot: 'c:/'\n\t\tdir: 'c:/Users/johnd/base-utils/test'     # parent directory\n\t\tlDirs: ['c:','Users','johnd','base-utils','test']\n\t\t}\n\tutest.equal 74, parsePath(file2), {\n\t\tdir: 'c:/Users/johnd/base-utils/test/test'\n\t\text: '.txt'\n\t\tfileName: 'file99.test.txt'\n\t\tfilePath: 'c:/Users/johnd/base-utils/test/test/file99.test.txt'\n\t\tlDirs: ['c:','Users','johnd','base-utils','test','test']\n\t\tpurpose: 'test'\n\t\troot: 'c:/'\n\t\tstub: 'file99.test'\n\t\t}\nrmFile file2\nutest.falsy 85, isFile(file2)\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tdirPath = \"./test/tempdir\"\n\tfile1 = mkpath(dirPath, 'file1.txt')\n\tfile2 = mkpath(dirPath, 'file2.txt')\n\tfile3 = mkpath(dirPath, 'file3.txt')\n\n\tutest.falsy  95, isDir(dirPath)\n\tmkDir dirPath\n\tutest.truthy 97, isDir(dirPath)\n\n\ttouch file1\n\ttouch file2\n\n\tutest.truthy 102, isFile(file1)\n\tutest.truthy 103, isFile(file2)\n\tutest.falsy  104, isFile(file3)\n\n\tutest.equal 106, pathType(dirPath), 'dir'\n\tutest.equal 107, pathType(file2), 'file'\n\tutest.equal 108, pathType(file3), 'missing'\n\n\tutest.truthy 110, samelist(dirContents(dirPath), ['file1.txt','file2.txt'])\n\trename file2, file3\n\tutest.truthy 112, samelist(dirContents(dirPath), ['file1.txt','file3.txt'])\n\trmFile file1\n\tutest.truthy 114, samelist(dirContents(dirPath), ['file3.txt'])\n\tclearDir dirPath\n\tutest.truthy 116, samelist(dirContents(dirPath), [])\n\n\tutest.truthy 118, isDir(dirPath)\n\trmDir dirPath\n\tutest.falsy  120, isDir(dirPath)\n\t)()\n"
  ]
}