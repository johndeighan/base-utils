{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "<anonymous>"
  ],
  "names": [],
  "mappings": "AAAmB;AAEnB,OAAA;EAAQ,KAAR;EAAe,EAAf;CAAA,MAAA;;AACA,OAAA;EAAQ,GAAR;CAAA,MAAA;;AACA,OAAA;EACC,KADD;EACQ,MADR;EACgB,KADhB;EACuB,QADvB;EACiC,MADjC;CAAA,MAAA;;AAGA,OAAA;EACC,OADD;EACU,WADV;CAAA,MAAA;;AAGA,OAAA;EAAQ,KAAR;CAAA,MAAA,8BAVmB;;;AAcnB,MAAA,CAAO,KAAP;;AAEA,KAAA,CAAM,KAAA,CAAM,SAAN,EAAiB;EAAC,SAAA,EAAW;AAAZ,CAAjB,CAAN,EAAkD,KAAlD;;AACA,KAAA,CAAM,KAAA,CAAM,QAAN,EAAiB;EAAC,SAAA,EAAW;AAAZ,CAAjB,CAAN,EAAkD,IAAlD;;AACA,KAAA,CAAM,KAAA,CAAM,QAAN,EAAiB;EAAC,SAAA,EAAW;AAAZ,CAAjB,CAAN,EAAkD,IAAlD;;AACA,KAAA,CAAM,KAAA,CAAM,SAAN,EAAiB;EAAC,SAAA,EAAW;AAAZ,CAAjB,CAAN,EAAkD,KAAlD;;AAEA,KAAA,CAAM,KAAA,CAAM,SAAN,CAAN,EAAwB,KAAxB;;AACA,KAAA,CAAM,KAAA,CAAM,QAAN,CAAN,EAAuB,IAAvB;;AACA,KAAA,CAAM,KAAA,CAAM,QAAN,CAAN,EAAuB,IAAvB;;AACA,KAAA,CAAM,KAAA,CAAM,SAAN,CAAN,EAAwB,KAAxB;;AAEA,KAAA,CAAM,KAAA,CAAM,CAAA;cAAA,CAAN,CAAN,EAGO;EACN,KAAA,EAAO,MADD;EAEN,KAAA,EAAO;AAFD,CAHP;;AAQA,KAAA,CAAM,KAAA,CAAM,CAAA;;6BAAA,CAAN,CAAN,EAIO;EACN,YAAA,EAAc,MADR;EAEN,WAAA,EAAc,SAFR;EAGN,WAAA,EAAc;AAHR,CAJP;;AAUA,KAAA,CAAM,KAAA,CAAM,CAAA;SAAA,CAAN,CAAN,EAGO,CACN,MADM,EAEN,SAFM,CAHP;;AAQA,KAAA,CAAM,KAAA,CAAM,CAAA;;oBAAA,CAAN,CAAN,EAIO,CACN,MADM,EAEN,SAFM,EAGN,cAHM,CAJP;;AAUA,KAAA,CAAM,KAAA,CAAM,oCAAN,CAAN,EACC,kCADD",
  "sourcesContent": [
    "# peggy.test.coffee\n\nimport {undef, OL} from '@jdeighan/base-utils'\nimport {LOG} from '@jdeighan/base-utils/log'\nimport {\n\tequal, truthy, falsy, succeeds, throws,\n\t} from '@jdeighan/base-utils/utest'\nimport {\n\tpeggify, peggifyFile,\n\t} from '@jdeighan/base-utils/peggy'\nimport {parse} from '@jdeighan/base-utils/object'\n\n# ---------------------------------------------------------------------------\n\ntruthy parse\n\nequal parse(\".undef.\", {startRule: 'primitive'}), undef\nequal parse(\".null.\",  {startRule: 'primitive'}), null\nequal parse(\".true.\",  {startRule: 'primitive'}), true\nequal parse(\".false.\", {startRule: 'primitive'}), false\n\nequal parse(\".undef.\"), undef\nequal parse(\".null.\"), null\nequal parse(\".true.\"), true\nequal parse(\".false.\"), false\n\nequal parse(\"\"\"\n\tfName: John\n\tlName: Deighan\n\t\"\"\"), {\n\tfName: 'John'\n\tlName: 'Deighan'\n\t}\n\nequal parse(\"\"\"\n\tfirst name:   John\n\tlast name:    Deighan\n\tfull name  :  John    Deighan\n\t\"\"\"), {\n\t\"first name\": 'John'\n\t\"last name\":  'Deighan'\n\t\"full name\":  'John Deighan'\n\t}\n\nequal parse(\"\"\"\n\t- John\n\t- Deighan\n\t\"\"\"), [\n\t'John'\n\t'Deighan'\n\t]\n\nequal parse(\"\"\"\n\t-   John\n\t-  Deighan\n\t-    John    Deighan\n\t\"\"\"), [\n\t'John'\n\t'Deighan'\n\t'John Deighan'\n\t]\n\nequal parse(\"«\\\"Hello\\\", that's what she said.»\"),\n\t\"\\\"Hello\\\", that's what she said.\""
  ]
}