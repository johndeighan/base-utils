{
  "version": 3,
  "file": "stack.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\stack.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# stack.test.coffee\n\nimport test from 'ava'\n\nimport {\n\tassert, croak,\n\t} from '@jdeighan/base-utils/exceptions'\nimport {\n\tundef, defined, notdefined, words,\n\t} from '@jdeighan/base-utils'\nimport {\n\tclearAllLogs, echoLogsByDefault,\n\t} from '@jdeighan/base-utils/log'\nimport {CallStack, getStackLog} from '@jdeighan/base-utils/stack'\n\nechoLogsByDefault false\n\n# ---------------------------------------------------------------------------\n\nTEST = (t, stack, curFunc, strActive, strNonActive, logging, level=undef, logLevel=undef) =>\n\tif defined(curFunc)\n\t\tt.is stack.curFuncName, curFunc\n\telse\n\t\tt.is stack.curFuncName, '_MAIN_'\n\tif defined(strActive)\n\t\tfor name in words(strActive)\n\t\t\tt.truthy stack.isActive(name)\n\tif defined(strNonActive)\n\t\tfor name in words(strNonActive)\n\t\t\tt.falsy stack.isActive(name)\n\tif logging\n\t\tt.truthy stack.isLogging()\n\telse\n\t\tt.falsy stack.isLogging()\n\tif defined(level)\n\t\tt.is stack.level, level\n\tif defined(logLevel)\n\t\tt.is stack.logLevel, logLevel\n\treturn\n\n# ---------------------------------------------------------------------------\n\ntest \"line 39\", (t) =>\n\tclearAllLogs()\n\tstack = new CallStack()\n\tstack.logCalls true\n\n\tstack.enter 'func'\n\t# ---           cur    active  !active  isLogging\n\tTEST t, stack, 'func', \"func\", \"func2\", false\n\n\tstack.returnFrom 'func'\n\tt.truthy stack.isEmpty()\n\n\tt.is getStackLog(), \"\"\"\n\t\tENTER 'func'\n\t\tRETURN FROM 'func'\n\t\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\ntest \"line 58\", (t) =>\n\tt.throws () ->\n\t\tsuppressExceptionLogging true\n\t\tclearAllLogs()\n\t\tstack = new CallStack()\n\t\tstack.logCalls true\n\t\tstack.enter 'func'\n\t\tstack.returnFrom 'func2'   # should throw an error\n\n# ---------------------------------------------------------------------------\n\ntest \"line 69\", (t) =>\n\tclearAllLogs()\n\tstack = new CallStack()\n\tstack.logCalls true\n\n\tstack.enter 'func', [], true\n\t# ---           cur    active  !active  isLogging\n\tTEST t, stack, 'func', \"func\", \"func2\", true\n\n\tstack.returnFrom 'func'\n\t# ---          cur     active  !active        isLogging\n\t#              -----   ------  --------       ---------\n\tTEST t, stack, undef,  undef,  'func func2',  false\n\tt.truthy stack.isEmpty()\n\n\tt.is getStackLog(), \"\"\"\n\t\tENTER 'func'\n\t\tRETURN FROM 'func'\n\t\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\ntest \"line 91\", (t) =>\n\tclearAllLogs()\n\tstack = new CallStack()\n\tstack.logCalls true\n\n\tstack.enter 'func', [], true\n\n\t# ---          cur     active  !active    isLogging\n\t#              -----   ------  --------   ---------\n\tTEST t, stack, 'func', 'func',  'func2',  true\n\n\tstack.enter 'func2'\n\n\t# ---          cur      active        !active   isLogging\n\t#              -----    ------        --------  ---------\n\tTEST t, stack, 'func2', 'func func2', undef,    false\n\n\tstack.returnFrom 'func2'\n\n\t# ---          cur     active  !active    isLogging\n\t#              -----   ------  --------   ---------\n\tTEST t, stack, 'func', 'func',  'func2',  true\n\n\tstack.returnFrom 'func'\n\n\t# ---          cur     active  !active      isLogging\n\t#              -----   ------  --------     ---------\n\tTEST t, stack, undef, undef,  'func func2', false\n\n\tt.is getStackLog(), \"\"\"\n\t\tENTER 'func'\n\t\t\tENTER 'func2'\n\t\t\tRETURN FROM 'func2'\n\t\tRETURN FROM 'func'\n\t\t\"\"\"\n\tt.truthy stack.isEmpty()\n\n# ---------------------------------------------------------------------------\n# --- Test yield / resume\n\ntest \"line 131\", (t) =>\n\tclearAllLogs()\n\tstack = new CallStack()\n\tstack.logCalls true\n\n\t# ---          cur     active  !active       isLogging\n\t#              -----   ------  --------      ---------\n\tTEST t, stack, undef, undef,   'func gen', false, 0, 0\n\n\tstack.enter 'func', [], true\n\n\t# ---          cur     active  !active   isLogging\n\t#              -----   ------  --------  ---------\n\tTEST t, stack, 'func', 'func',  'gen', true, 1, 1\n\n\tstack.enter 'gen', [], false\n\n\t# ---          cur     active        !active   isLogging\n\t#              -----   ------        --------  ---------\n\tTEST t, stack, 'gen', 'func gen',  undef, false, 2, 1\n\n\tstack.yield 'gen', 13\n\n\t# ---          cur     active    !active   isLogging\n\t#              -----   ------    --------  ---------\n\tTEST t, stack, 'func', 'func',  'gen',   true, 1, 1\n\n\tstack.resume 'gen'\n\n\t# ---          cur     active    !active   isLogging\n\t#              -----   ------    --------  ---------\n\tTEST t, stack, 'gen', 'func gen',  undef,   false, 2, 1\n\n\tstack.returnFrom 'gen'\n\n\t# ---          cur     active    !active   isLogging\n\t#              -----   ------    --------  ---------\n\tTEST t, stack, 'func', 'func',  'gen',   true, 1, 1\n\n\tstack.returnFrom 'func'\n\n\t# ---          cur     active  !active       isLogging\n\t#              -----   ------  --------      ---------\n\tTEST t, stack, undef, undef,   'func gen', false, 0, 0\n\n\tt.truthy stack.isEmpty()\n\n# ---------------------------------------------------------------------------\n# --- Test multiple generators\n\ntest \"line 181\", (t) =>\n\tclearAllLogs()\n\tstack = new CallStack()\n\tstack.logCalls true\n\n\t# ---          cur     active  !active       isLogging\n\t#              -----   ------  --------      ---------\n\tTEST t, stack, undef, undef,   'func gen', false, 0, 0\n\n\tstack.enter 'func', [], true\n\n\t# ---          cur     active  !active   isLogging\n\t#              -----   ------  --------  ---------\n\tTEST t, stack, 'func', 'func',  'gen', true, 1, 1\n\n\tstack.enter 'gen', [], false\n\n\t# ---          cur     active        !active   isLogging\n\t#              -----   ------        --------  ---------\n\tTEST t, stack, 'gen', 'func gen',  undef, false, 2, 1\n\n\tstack.yield 'gen', 13\n\n\t# ---          cur     active    !active   isLogging\n\t#              -----   ------    --------  ---------\n\tTEST t, stack, 'func', 'func',  'gen',   true, 1, 1\n\n\tstack.resume 'gen'\n\n\t# ---          cur     active    !active   isLogging\n\t#              -----   ------    --------  ---------\n\tTEST t, stack, 'gen', 'func gen',  undef,   false, 2, 1\n\n\tstack.returnFrom 'gen'\n\n\t# ---          cur     active    !active   isLogging\n\t#              -----   ------    --------  ---------\n\tTEST t, stack, 'func', 'func',  'gen',   true, 1, 1\n\n\tstack.returnFrom 'func'\n\n\t# ---          cur     active  !active       isLogging\n\t#              -----   ------  --------      ---------\n\tTEST t, stack, undef, undef,   'func gen', false, 0, 0\n\n\tt.truthy stack.isEmpty()\n\n# ---------------------------------------------------------------------------\n# test stack log\n\ntest \"line 231\", (t) =>\n\tclearAllLogs()\n\tstack = new CallStack()\n\tstack.logCalls true\n\n\tstack.reset()\n\tstack.enter 'func1', [13]\n\tstack.enter 'func2', ['abc', {mean: 42}]\n\tstack.yield 'func2', 99\n\tstack.resume 'func2'\n\tstack.returnFrom 'func2', 'def'\n\tstack.returnFrom 'func1'\n\n\tt.is getStackLog(), \"\"\"\n\t\tRESET STACK\n\t\tENTER 'func1' 13\n\t\t\tENTER 'func2' 'abc',{\"mean\":42}\n\t\t\tYIELD FROM 'func2' 99\n\t\t\tRESUME 'func2'\n\t\t\tRETURN FROM 'func2' 'def'\n\t\tRETURN FROM 'func1'\n\t\t\"\"\"\n"
  ]
}