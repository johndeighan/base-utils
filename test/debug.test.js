// Generated by CoffeeScript 2.7.0
// debug.test.coffee
var double, quadruple;

import test from 'ava';

import {
  pass,
  toTAML,
  arrayToBlock,
  isNumber
} from '@jdeighan/exceptions/utils';

import {
  haltOnError,
  assert,
  croak
} from '@jdeighan/exceptions';

import {
  utReset,
  LOG,
  utGetLog
} from '@jdeighan/exceptions/log';

import {
  debug,
  setDebugging,
  resetDebugging
} from '@jdeighan/exceptions/debug';

// ---------------------------------------------------------------------------
double = (x) => {
  var result;
  debug("enter double()", x);
  assert(isNumber(x), "not a number");
  result = 2 * x;
  debug("return from double()", result);
  return result;
};

quadruple = (x) => {
  var result;
  debug("enter quadruple()", x);
  result = 2 * double(x);
  debug("return from quadruple()", result);
  return result;
};

// ---------------------------------------------------------------------------
test('line 33', (t) => {
  var result;
  utReset();
  result = quadruple(3);
  return t.is(result, 12);
});

test('line 39', (t) => {
  var result;
  utReset();
  setDebugging('double');
  result = quadruple(3);
  resetDebugging();
  t.is(result, 12);
  return t.is(utGetLog(), `enter˳double()
.˳˳˳arg[0]˳=˳3
└─>˳return˳from˳double()
˳˳˳˳ret[0]˳=˳6`);
});

test('line 52', (t) => {
  var result;
  utReset();
  setDebugging('double quadruple');
  result = quadruple(3);
  resetDebugging();
  t.is(result, 12);
  return t.is(utGetLog(), `enter˳quadruple()
.˳˳˳arg[0]˳=˳3
˳˳˳˳enter˳double()
│˳˳˳.˳˳˳arg[0]˳=˳3
│˳˳˳└─>˳return˳from˳double()
│˳˳˳˳˳˳˳ret[0]˳=˳6
└─>˳return˳from˳quadruple()
˳˳˳˳ret[0]˳=˳12`);
});
