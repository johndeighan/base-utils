{
  "version": 3,
  "file": "named-logs.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\named-logs.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# named-logs.test.coffee\n\nimport {\n\tundef, defined, notdefined, pass, escapeStr,\n\t} from '@jdeighan/base-utils'\nimport {NamedLogs} from '@jdeighan/base-utils/named-logs'\nimport {equal, truthy, falsy} from '@jdeighan/base-utils/utest'\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\n\tequal logs.getLogs('A'), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'B', 'second log'\n\n\tequal logs.getLogs('A'), \"\"\"\n\t\tfirst log\n\t\t\"\"\"\n\tequal logs.getLogs('B'), \"\"\"\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\tlogs.clear 'A'\n\n\tequal logs.getLogs('A'), ''\n\tequal logs.getLogs('B'), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\tlogs.clearAllLogs()\n\n\tequal logs.getLogs('A'), ''\n\tequal logs.getLogs('B'), ''\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\tlogs.setKey 'A', 'doEcho', true\n\tlogs.setKey 'B', 'doEcho', false\n\n\ttruthy logs.getKey('A', 'doEcho')\n\tfalsy logs.getKey('B', 'doEcho')\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs({doEcho: true})\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\n\ttruthy logs.getKey('A', 'doEcho')\n\ttruthy logs.getKey('B', 'doEcho')\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs({doEcho: true})\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\tlogs.setKey 'B', 'doEcho', false\n\n\ttruthy logs.getKey('A', 'doEcho')\n\tfalsy logs.getKey('B', 'doEcho')\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\n\tequal logs.getAllLogs(), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test: name can be undef\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log undef, 'first log'\n\tlogs.log undef, 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\n\tequal logs.getLogs(undef), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test: using a filter function\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log undef, 'first log'\n\tlogs.log undef, 'junk'\n\tlogs.log undef, 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'junk'\n\tlogs.log 'B', 'second log'\n\n\tfunc = (str) =>\n\t\tstr.match(/log/)\n\n\tequal logs.getLogs(undef, func), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\tequal logs.getLogs('B', func), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n"
  ]
}