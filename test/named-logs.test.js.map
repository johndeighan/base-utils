{
  "version": 3,
  "file": "named-logs.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\named-logs.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# NamedLogs.test.coffee\n\nimport {\n\tundef, defined, notdefined, pass, escapeStr,\n\t} from '@jdeighan/base-utils'\nimport {utest} from '@jdeighan/base-utils/utest'\nimport {NamedLogs} from '@jdeighan/base-utils/named-logs'\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\n\tutest.equal 17, logs.getLogs('A'), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'B', 'second log'\n\n\tutest.equal 31, logs.getLogs('A'), \"\"\"\n\t\tfirst log\n\t\t\"\"\"\n\tutest.equal 34, logs.getLogs('B'), \"\"\"\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\tlogs.clear 'A'\n\n\tutest.equal 50, logs.getLogs('A'), ''\n\tutest.equal 51, logs.getLogs('B'), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\tlogs.clearAllLogs()\n\n\tutest.equal 68, logs.getLogs('A'), ''\n\tutest.equal 69, logs.getLogs('B'), ''\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\tlogs.setKey 'A', 'doEcho', true\n\tlogs.setKey 'B', 'doEcho', false\n\n\tutest.truthy 84, logs.getKey('A', 'doEcho')\n\tutest.falsy 85, logs.getKey('B', 'doEcho')\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs({doEcho: true})\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\n\tutest.truthy 98, logs.getKey('A', 'doEcho')\n\tutest.truthy 99, logs.getKey('B', 'doEcho')\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs({doEcho: true})\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\tlogs.setKey 'B', 'doEcho', false\n\n\tutest.truthy 113, logs.getKey('A', 'doEcho')\n\tutest.falsy 114, logs.getKey('B', 'doEcho')\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log 'A', 'first log'\n\tlogs.log 'A', 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\n\tutest.equal 127, logs.getAllLogs(), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test: name can be undef\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log undef, 'first log'\n\tlogs.log undef, 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'second log'\n\n\tutest.equal 145, logs.getLogs(undef), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test: using a filter function\n(() ->\n\tlogs = new NamedLogs()\n\n\tlogs.log undef, 'first log'\n\tlogs.log undef, 'junk'\n\tlogs.log undef, 'second log'\n\tlogs.log 'B', 'first log'\n\tlogs.log 'B', 'junk'\n\tlogs.log 'B', 'second log'\n\n\tfunc = (str) =>\n\t\tstr.match(/log/)\n\n\tutest.equal 145, logs.getLogs(undef, func), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\tutest.equal 145, logs.getLogs('B', func), \"\"\"\n\t\tfirst log\n\t\tsecond log\n\t\t\"\"\"\n\t)()\n"
  ]
}