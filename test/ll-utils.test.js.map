{
  "version": 3,
  "file": "ll-utils.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\ll-utils.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# ll-utils.test.coffee\n\nimport test from 'ava'\n\nimport {\n\tundef, mydir, pass, assert, defined, notdefined, alldefined,\n\tisEmpty, nonEmpty, getFullPath, deepCopy,\n\t} from '@jdeighan/base-utils/ll-utils'\nimport {getStack, getCaller} from './templib.js'\n\ndir = mydir(import.meta.url)\nfullPath = getFullPath('.')\n\n# ---------------------------------------------------------------------------\n\ntest \"line 16\", (t) => t.is(undef, undefined)\ntest \"line 17\", (t) => t.truthy(dir.match(/\\/base\\-utils\\/test$/))\ntest \"line 18\", (t) => t.truthy(pass())\ntest \"line 19\", (t) => t.truthy(defined(1))\ntest \"line 20\", (t) => t.falsy(defined(undefined))\ntest \"line 21\", (t) => t.truthy(notdefined(undefined))\ntest \"line 22\", (t) => t.falsy(notdefined(12))\ntest \"line 23\", (t) => t.notThrows(() => pass())\ntest \"line 24\", (t) => t.notThrows(() => assert(12==12, \"BAD\"))\n\n# ---------------------------------------------------------------------------\n\ntest \"line 28\", (t) => t.truthy(isEmpty(''))\ntest \"line 29\", (t) => t.truthy(isEmpty('  \\t\\t'))\ntest \"line 30\", (t) => t.truthy(isEmpty([]))\ntest \"line 31\", (t) => t.truthy(isEmpty({}))\n\ntest \"line 33\", (t) => t.truthy(nonEmpty('a'))\ntest \"line 34\", (t) => t.truthy(nonEmpty('.'))\ntest \"line 35\", (t) => t.truthy(nonEmpty([2]))\ntest \"line 36\", (t) => t.truthy(nonEmpty({width: 2}))\n\ntest \"line 38\", (t) => t.is(fullPath, \"C:/Users/johnd/base-utils\")\n\n# ---------------------------------------------------------------------------\n\na = undef\nb = null\nc = 42\nd = 'dog'\ne = {a: 42}\n\ntest \"line 48\", (t) => t.truthy(alldefined(c,d,e))\ntest \"line 49\", (t) => t.falsy(alldefined(a,b,c,d,e))\ntest \"line 50\", (t) => t.falsy(alldefined(a,c,d,e))\ntest \"line 51\", (t) => t.falsy(alldefined(b,c,d,e))\n\ntest \"line 53\", (t) => t.deepEqual(deepCopy(e), {a: 42})\n"
  ]
}