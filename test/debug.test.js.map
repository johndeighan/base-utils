{
  "version": 3,
  "file": "debug.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\debug.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# debug.test.coffee\r\n\r\nimport test from 'ava'\r\n\r\nimport {\r\n\tassert, croak,\r\n\t} from '@jdeighan/base-utils/exceptions'\r\nimport {\r\n\tundef, defined, notdefined,\r\n\t} from '@jdeighan/base-utils'\r\nimport {\r\n\tLOG, LOGVALUE, LOGSTRING, clearAllLogs, getMyLogs, echoLogsByDefault,\r\n\t} from '@jdeighan/base-utils/log'\r\nimport {CallStack} from '@jdeighan/base-utils/stack'\r\nimport {\r\n\tcallStack, setDebugging, debugDebug,\r\n\tgetType, dumpDebugLoggers,\r\n\tdbgEnter, dbgReturn, dbgYield, dbgResume, dbg,\r\n\tclearDebugLog, getDebugLog, stdLogString,\r\n\t} from '@jdeighan/base-utils/debug'\r\n\r\nechoLogsByDefault false\r\nsetDebugging undef, 'noecho'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\ntest \"line 24\", (t) =>\r\n\tclearDebugLog()\r\n\tstdLogString 2, \"\"\"\r\n\t\t---\r\n\t\t- abc\r\n\t\t- def\r\n\t\t\"\"\"\r\n\tt.is getDebugLog(), \"\"\"\r\n\t\t│   │   ---\r\n\t\t│   │   - abc\r\n\t\t│   │   - def\r\n\t\t\"\"\"\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- Define some functions to use in testing\r\n\r\nmain = () ->\r\n\r\n\tdbgEnter 'main'\r\n\tfor i in [13, 15]\r\n\t\tfunc1 i\r\n\t\tLOG i+1\r\n\tdbgReturn 'main'\r\n\treturn\r\n\r\nfunc1 = (i) ->\r\n\tdbgEnter 'func1', i\r\n\tfunc2(i)\r\n\tdbgReturn 'func1'\r\n\treturn\r\n\r\nfunc2 = (i) ->\r\n\tdbgEnter 'func2', i\r\n\tLOG 2*i\r\n\tdbgReturn 'func2'\r\n\treturn\r\n\r\ncallGen = () ->\r\n\tdbgEnter 'callGen'\r\n\tfor i from gen()\r\n\t\tdbg \"GOT #{i}\"\r\n\t\tLOG i\r\n\tdbgReturn 'callGen'\r\n\treturn\r\n\r\ngen = () ->\r\n\tdbgEnter 'gen'\r\n\r\n\tdbgYield 'gen', 1\r\n\tyield 1\r\n\tdbgResume 'gen'\r\n\r\n\tdbgYield 'gen', 2\r\n\tyield 2\r\n\tdbgResume 'gen'\r\n\r\n\tdbgReturn 'gen'\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nhTestNumbers = {}\r\n\r\nTEST = (lineNum, debugWhat, func, expectedDbg, expectedLog) ->\r\n\r\n\t# --- Make sure test numbers are unique\r\n\twhile (hTestNumbers[lineNum])\r\n\t\tlineNum += 1000\r\n\thTestNumbers[lineNum] = true\r\n\r\n\tif defined(debugWhat)\r\n\t\tsetDebugging debugWhat, 'noecho'\r\n\telse\r\n\t\tsetDebugging false, 'noecho'\r\n\r\n\tcallStack.logCalls true\r\n\tclearAllLogs()\r\n\r\n\tfunc()\r\n\r\n\tdbgStr = getDebugLog()\r\n\tlogStr = getMyLogs()\r\n\r\n\ttest \"line #{lineNum}-DEBUG\", (t) =>\r\n\t\tt.is dbgStr, expectedDbg\r\n\tif defined(expectedLog)\r\n\t\ttest \"line #{lineNum}-LOG\", (t) =>\r\n\t\t\tt.is logStr, expectedLog\r\n\ttest \"line #{lineNum}-final\", (t) =>\r\n\t\tt.truthy callStack.isEmpty()\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\tTEST 107, undef, main, '', \"\"\"\r\n\t\t26\r\n\t\t14\r\n\t\t30\r\n\t\t16\r\n\t\t\"\"\"\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\tTEST 119, 'main', main, \"\"\"\r\n\t\tenter main\r\n\t\t└─> return from main\r\n\t\t\"\"\", \"\"\"\r\n\t\t26\r\n\t\t14\r\n\t\t30\r\n\t\t16\r\n\t\t\"\"\"\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\r\n\tTEST 134, 'main func2', main, \"\"\"\r\n\t\tenter main\r\n\t\t│   enter func2 13\r\n\t\t│   └─> return from func2\r\n\t\t│   enter func2 15\r\n\t\t│   └─> return from func2\r\n\t\t└─> return from main\r\n\t\t\"\"\", \"\"\"\r\n\t\t26\r\n\t\t14\r\n\t\t30\r\n\t\t16\r\n\t\t\"\"\"\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\r\n\tTEST 153, 'func2', main, \"\"\"\r\n\t\tenter func2 13\r\n\t\t└─> return from func2\r\n\t\tenter func2 15\r\n\t\t└─> return from func2\r\n\t\t\"\"\", \"\"\"\r\n\t\t26\r\n\t\t14\r\n\t\t30\r\n\t\t16\r\n\t\t\"\"\"\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\r\n\tTEST 170, true, callGen, \"\"\"\r\n\t\tenter callGen\r\n\t\t│   enter gen\r\n\t\t│   ├<─ yield 1\r\n\t\t│   GOT 1\r\n\t\t│   ├─> resume\r\n\t\t│   ├<─ yield 2\r\n\t\t│   GOT 2\r\n\t\t│   ├─> resume\r\n\t\t│   └─> return from gen\r\n\t\t└─> return from callGen\r\n\t\t\"\"\", \"\"\"\r\n\t\t1\r\n\t\t2\r\n\t\t\"\"\"\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\r\n\tcallGen = () ->\r\n\t\tdbgEnter 'func'\r\n\t\tdbgReturn 'func'\r\n\t\tLOG 'abc'\r\n\r\n\tTEST 193, 'func', callGen, \"\"\"\r\n\t\tenter func\r\n\t\t└─> return from func\r\n\t\t\"\"\", \"\"\"\r\n\t\tabc\r\n\t\t\"\"\"\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\r\n\tcallGen = () ->\r\n\t\tdbgEnter 'obj.func'\r\n\t\tdbgReturn 'obj.func'\r\n\t\tLOG 'abc'\r\n\r\n\tTEST 193, 'obj.func', callGen, \"\"\"\r\n\t\tenter obj.func\r\n\t\t└─> return from obj.func\r\n\t\t\"\"\", \"\"\"\r\n\t\tabc\r\n\t\t\"\"\"\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\r\n\tcallGen = () ->\r\n\t\tdbgEnter 'obj.func'\r\n\t\tdbgReturn 'obj.func'\r\n\t\tLOG 'abc'\r\n\r\n\tTEST 193, 'func', callGen, \"\"\"\r\n\t\tenter obj.func\r\n\t\t└─> return from obj.func\r\n\t\t\"\"\", \"\"\"\r\n\t\tabc\r\n\t\t\"\"\"\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\r\n\tcallGen = () ->\r\n\t\tdbgEnter 'Getter.get'\r\n\t\tdbgEnter 'Fetcher.fetch'\r\n\t\tdbgReturn 'Fetcher.fetch', {\r\n\t\t\tstr: 'abcdef abcdef abcdef abcdef abcdef'\r\n\t\t\tnode: 'abcdef abcdef abcdef abcdef abcdef'\r\n\t\t\tlineNum: 15\r\n\t\t\t}\r\n\t\tdbgReturn 'Getter.get', {\r\n\t\t\tstr: 'abcdef abcdef abcdef abcdef abcdef'\r\n\t\t\tnode: 'abcdef abcdef abcdef abcdef abcdef'\r\n\t\t\tlineNum: 15\r\n\t\t\t}\r\n\t\tLOG 'abc'\r\n\r\n\tTEST 193, 'get fetch', callGen, \"\"\"\r\n\t\tenter Getter.get\r\n\t\t│   enter Fetcher.fetch\r\n\t\t│   └─> return from Fetcher.fetch\r\n\t\t│       val =\r\n\t\t│       ---\r\n\t\t│       lineNum: 15\r\n\t\t│       node: abcdef˳abcdef˳abcdef˳abcdef˳abcdef\r\n\t\t│       str: abcdef˳abcdef˳abcdef˳abcdef˳abcdef\r\n\t\t└─> return from Getter.get\r\n\t\t    val =\r\n\t\t    ---\r\n\t\t    lineNum: 15\r\n\t\t    node: abcdef˳abcdef˳abcdef˳abcdef˳abcdef\r\n\t\t    str: abcdef˳abcdef˳abcdef˳abcdef˳abcdef\r\n\t\t\"\"\", \"\"\"\r\n\t\tabc\r\n\t\t\"\"\"\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\tMAIN = () ->\r\n\t\tdbgEnter 'MAIN'\r\n\t\tFUNC1()\r\n\t\tFUNC2()\r\n\t\tdbgReturn 'MAIN'\r\n\t\treturn\r\n\r\n\tFUNC1 = () ->\r\n\t\tdbgEnter 'FUNC1'\r\n\t\tLOG 'Hello'\r\n\t\tdbgReturn 'FUNC1'\r\n\t\treturn\r\n\r\n\tFUNC2 = () ->\r\n\t\tdbgEnter 'FUNC2'\r\n\t\tLOG 'Hi'\r\n\t\tdbgReturn 'FUNC2'\r\n\t\treturn\r\n\r\n\tTEST 297, 'MAIN+', MAIN, \"\"\"\r\n\t\tenter MAIN\r\n\t\t│   enter FUNC1\r\n\t\t│   └─> return from FUNC1\r\n\t\t│   enter FUNC2\r\n\t\t│   └─> return from FUNC2\r\n\t\t└─> return from MAIN\r\n\t\t\"\"\", \"\"\"\r\n\t\tHello\r\n\t\tHi\r\n\t\t\"\"\"\r\n\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n"
  ]
}