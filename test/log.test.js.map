{
  "version": 3,
  "file": "log.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\log.test.coffee"
  ],
  "names": [],
  "mappings": "AAAiB;AAAA,IAAA,KAAA,EAAA,KAAA,EAAA,UAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA;;AAEjB,OAAO,IAAP,MAAA;;AAEA,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,IAD7B;EACmC,MADnC;CAAA,MAAA;;AAGA,OAAA;EAAQ,SAAR;CAAA,MAAA;;AACA,OAAA;EACC,QADD;EACW,QADX;EACqB,MADrB;EAEC,WAFD;EAEc,aAFd;EAE6B,YAF7B;EAGC,cAHD;EAGiB,gBAHjB;EAIC,SAJD;EAIY,aAJZ;EAI2B,gBAJ3B;EAKC,GALD;EAKM,QALN;EAKgB,OALhB;EAKyB,OALzB;EAMC,YAND;EAMe,SANf;EAM0B,iBAN1B;CAAA,MAAA;;AASA,UAAA,GAAa;;AACb,iBAAA,CAAkB,KAAlB,EAlBiB;;;AAsBjB,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;SACf,CAAC,CAAC,SAAF,CAAY,gBAAA,CAAiB,CAAC,GAAD,EAAM,EAAN,EAAU,CAAC,CAAD,EAAG,CAAH,CAAV,CAAjB,CAAZ,EAAgD,CAAA;;;;KAAA,CAAhD;AADe,CAAhB,EAtBiB;;;AAiCjB,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;SAAO,CAAC,CAAC,EAAF,CAAK,QAAL,EAAe,EAAf;AAAP,CAAhB;;AAEA,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;EACf,WAAA,CAAY,CAAZ;EACA,CAAC,CAAC,EAAF,CAAK,QAAL,EAAe,CAAf;EACA,CAAC,CAAC,EAAF,CAAK,QAAL,EAAe,OAAf;SACA,aAAA,CAAA;AAJe,CAAhB;;AAMA,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;EACf,WAAA,CAAY,CAAZ;EACA,CAAC,CAAC,EAAF,CAAK,QAAL,EAAe,CAAf;EACA,CAAC,CAAC,EAAF,CAAK,MAAL,EAAa,OAAb;SACA,aAAA,CAAA;AAJe,CAAhB,EAzCiB;;;AAiDjB,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;SAAO,CAAC,CAAC,EAAF,CAAK,SAAA,CAAU,CAAV,CAAL,EAAmB,EAAnB;AAAP,CAAhB;;AACA,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;SAAO,CAAC,CAAC,EAAF,CAAK,SAAA,CAAU,CAAV,CAAL,EAAmB,UAAnB;AAAP,CAAhB;;AACA,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;SAAO,CAAC,CAAC,EAAF,CAAK,SAAA,CAAU,CAAV,CAAL,EAAmB,UAAA,GAAa,UAAhC;AAAP,CAAhB,EAnDiB;;;AAuDjB,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;EACf,YAAA,CAAa,QAAb;EACA,GAAA,CAAI,KAAJ;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,GAAA,CAAlB;AAHe,CAAhB;;AAOA,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;EACf,YAAA,CAAa,QAAb;EACA,GAAA,CAAI,KAAJ;EACA,GAAA,CAAI,KAAJ;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA;GAAA,CAAlB;AAJe,CAAhB;;AASA,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;EACf,YAAA,CAAa,QAAb;EACA,GAAA,CAAI,KAAJ;EACA,GAAA,CAAI,KAAJ,EAAW,SAAA,CAAU,CAAV,CAAX;EACA,GAAA,CAAI,KAAJ,EAAW,SAAA,CAAU,CAAV,CAAX;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA;;WAAA,CAAlB;AALe,CAAhB,EAvEiB;;;AAoFjB,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;EACf,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc,KAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,SAAA,CAAlB;AAHe,CAAhB;;AAOA,IAAA,CAAK,SAAL,EAAgB,CAAC,CAAD,CAAA,GAAA;EACf,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc,IAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,QAAA,CAAlB;AAHe,CAAhB;;AAOA,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc,KAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,SAAA,CAAlB;AAHgB,CAAjB;;AAOA,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc,SAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,aAAA,CAAlB;AAHgB,CAAjB;;AAOA,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc,OAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,WAAA,CAAlB;AAHgB,CAAjB;;AAOA,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc,OAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,WAAA,CAAlB;AAHgB,CAAjB;;AAOA,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc,WAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,aAAA,CAAlB;AAHgB,CAAjB,EA9HiB;;;AAuIjB,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc,GAAG,CAAC,MAAJ,CAAW,EAAX,CAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA;CAAA,CAAA,CAEd,GAAG,CAAC,MAAJ,CAAW,EAAX,CAFc,CAAA;OAAA,CAAlB;AAHgB,CAAjB,EAvIiB;;;AAkJjB,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc,UAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,aAAA,CAAlB;AAHgB,CAAjB,EAlJiB;;;AA2JjB,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,WAAA,CAAY,CAAZ;EACA,QAAA,CAAS,GAAT,EAAc;IAAC,GAAA,EAAK,EAAN;IAAU,GAAA,EAAK;EAAf,CAAd;EACA,aAAA,CAAA;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA;;;QAAA,CAAlB;AALgB,CAAjB,EA3JiB;;;AAyKjB,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc;IAAC,GAAA,EAAK,EAAN;IAAU,GAAA,EAAK;EAAf,CAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,uBAAA,CAAlB;AAHgB,CAAjB,EAzKiB;;;AAkLjB,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,WAAA,CAAY,CAAZ;EACA,QAAA,CAAS,GAAT,EAAc,CAAC,KAAD,EAAQ,EAAR,EAAY,KAAZ,EAAmB,KAAnB,CAAd;EACA,aAAA,CAAA;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA;;;;;QAAA,CAAlB;AALgB,CAAjB,EAlLiB;;;AAkMjB,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,GAAT,EAAc,CAAC,KAAD,EAAQ,EAAR,EAAY,KAAZ,EAAmB,KAAnB,CAAd;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA,yBAAA,CAAlB;AAHgB,CAAjB,EAlMiB;;;AA2MX,QAAN,MAAA,MAAA;EACC,WAAa,IAAA,OAAA,CAAA;IAAC,IAAC,CAAA;IAAK,IAAC,CAAA;IACpB,IAAC,CAAA,IAAD,GAAQ;EADI;;AADd;;AAGA,KAAA,GAAQ,IAAI,KAAJ,CAAU,KAAV,EAAiB,CAAjB;;AAER,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,OAAT,EAAkB,KAAlB;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA;;;;SAAA,CAAlB;AAHgB,CAAjB,EAhNiB;;;AA6NX,QAAN,MAAA,MAAA;EAEC,WAAa,IAAA,OAAA,CAAA;IAAC,IAAC,CAAA;IAAK,IAAC,CAAA;IACpB,IAAC,CAAA,IAAD,GAAQ;EADI;;EAGb,WAAa,CAAA,CAAA;AACZ,WAAO,CAAA;OAAA,CAAA,CAEG,IAAC,CAAA,GAFJ,CAAA;QAAA,CAAA,CAGI,IAAC,CAAA,IAHL,CAAA;SAAA,CAAA,CAIK,IAAC,CAAA,KAJN,CAAA;iBAAA;EADK;;AALd;;AAcA,KAAA,GAAQ,IAAI,KAAJ,CAAU,KAAV,EAAiB,CAAjB;;AACR,CAAC,IAAD,EAAO,OAAP,CAAA,GAAkB,MAAA,CAAO,KAAP;;AAElB,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,QAAA,CAAS,OAAT,EAAkB,KAAlB;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA;;;;;kBAAA,CAAlB;AAHgB,CAAjB;;AAYA,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;AACjB,MAAA;EAAC,YAAA,CAAa,QAAb;EAEA,KAAA,GAAQ;IACP,IAAA,EAAQ,QAAA,CAAC,KAAD,CAAA;AAAW,aAAO,CAAA,CAAA,CAAG,KAAH,EAAA;IAAlB,CADD;IAEP,IAAA,EAAQ,QAAA,CAAC,KAAD,CAAA;AAAW,aAAO,KAAK,CAAC,OAAN,CAAc,KAAd,EAAqB,MAArB,CAA4B,CAAC,OAA7B,CAAqC,MAArC,EAA6C,OAA7C;IAAlB,CAFD;IAGP,MAAA,EAAQ,QAAA,CAAC,KAAD,CAAA;AAAW,aAAO,IAAA,CAAK,QAAL,EAAe,KAAf,EAAsB,KAAtB,EAA6B,IAA7B;IAAlB;EAHD;EAMR,QAAA,CAAS,OAAT,EAAkB,KAAlB;SAEA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA;;;;yBAAA,CAAlB;AAXgB,CAAjB;;AAmBA,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,WAAA,CAAY,CAAZ;EACA,OAAA,CAAQ,QAAR,EAAkB,CAAC,KAAD,EAAQ,EAAR,EAAY,KAAZ,EAAmB,KAAnB,CAAlB;EACA,aAAA,CAAA;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA;;;;;UAAA,CAAlB;AALgB,CAAjB;;AAcA,IAAA,CAAK,UAAL,EAAiB,CAAC,CAAD,CAAA,GAAA;EAChB,YAAA,CAAa,QAAb;EACA,WAAA,CAAY,CAAZ;EACA,OAAA,CAAQ,QAAR,EAAkB,CAAC,KAAD,EAAQ,EAAR,EAAY,KAAZ,EAAmB,KAAnB,CAAlB;EACA,aAAA,CAAA;SACA,CAAC,CAAC,EAAF,CAAK,SAAA,CAAA,CAAL,EAAkB,CAAA;;;;;;CAAA,CAAlB;AALgB,CAAjB",
  "sourcesContent": [
    "# log.test.coffee\n\nimport test from 'ava'\n\nimport {\n\tundef, defined, notdefined, pass, jsType,\n\t} from '@jdeighan/base-utils'\nimport {getPrefix} from '@jdeighan/base-utils/prefix'\nimport {\n\tlogWidth, sep_dash, sep_eq,\n\tsetLogWidth, resetLogWidth, debugLogging,\n\tsetStringifier, resetStringifier,\n\tstringify, tamlStringify, orderedStringify,\n\tLOG, LOGVALUE, LOGTAML, LOGJSON,\n\tclearAllLogs, getMyLogs, echoLogsByDefault,\n\t} from '@jdeighan/base-utils/log'\n\nfourSpaces = '    '\nechoLogsByDefault false\n\n# ---------------------------------------------------------------------------\n\ntest \"line 23\", (t) =>\n\tt.deepEqual orderedStringify(['a', 42, [1,2]]), \"\"\"\n\t\t---\n\t\t- a\n\t\t- 42\n\t\t- - 1\n\t\t  - 2\n\t\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\ntest \"line 35\", (t) => t.is(logWidth, 42)\n\ntest \"line 37\", (t) =>\n\tsetLogWidth 5\n\tt.is logWidth, 5\n\tt.is sep_dash, '-----'\n\tresetLogWidth()\n\ntest \"line 43\", (t) =>\n\tsetLogWidth 5\n\tt.is logWidth, 5\n\tt.is sep_eq, '====='\n\tresetLogWidth()\n\n# ---------------------------------------------------------------------------\n\ntest \"line 51\", (t) => t.is(getPrefix(0), '')\ntest \"line 52\", (t) => t.is(getPrefix(1), fourSpaces)\ntest \"line 53\", (t) => t.is(getPrefix(2), fourSpaces + fourSpaces)\n\n# ---------------------------------------------------------------------------\n\ntest \"line 57\", (t) =>\n\tclearAllLogs('noecho')\n\tLOG \"abc\"\n\tt.is getMyLogs(), \"\"\"\n\t\tabc\n\t\t\"\"\"\n\ntest \"line 64\", (t) =>\n\tclearAllLogs('noecho')\n\tLOG \"abc\"\n\tLOG \"def\"\n\tt.is getMyLogs(), \"\"\"\n\t\tabc\n\t\tdef\n\t\t\"\"\"\n\ntest \"line 73\", (t) =>\n\tclearAllLogs('noecho')\n\tLOG \"abc\"\n\tLOG \"def\", getPrefix(1)\n\tLOG \"ghi\", getPrefix(2)\n\tt.is getMyLogs(), \"\"\"\n\t\tabc\n\t\t    def\n\t\t        ghi\n\t\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\ntest \"line 86\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'x', undef\n\tt.is getMyLogs(), \"\"\"\n\t\tx = undef\n\t\t\"\"\"\n\ntest \"line 93\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'x', null\n\tt.is getMyLogs(), \"\"\"\n\t\tx = null\n\t\t\"\"\"\n\ntest \"line 100\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'x', 'abc'\n\tt.is getMyLogs(), \"\"\"\n\t\tx = 'abc'\n\t\t\"\"\"\n\ntest \"line 107\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'x', 'abc def'\n\tt.is getMyLogs(), \"\"\"\n\t\tx = 'abcË³def'\n\t\t\"\"\"\n\ntest \"line 114\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'x', '\"abc\"'\n\tt.is getMyLogs(), \"\"\"\n\t\tx = '\"abc\"'\n\t\t\"\"\"\n\ntest \"line 121\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'x', \"'abc'\"\n\tt.is getMyLogs(), \"\"\"\n\t\tx = \"'abc'\"\n\t\t\"\"\"\n\ntest \"line 128\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'x', \"'\\\"abc\\\"'\"\n\tt.is getMyLogs(), \"\"\"\n\t\tx = <'\"abc\"'>\n\t\t\"\"\"\n\n# --- long string\n\ntest \"line 137\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'x', 'a'.repeat(80)\n\tt.is getMyLogs(), \"\"\"\n\t\tx = \\\"\\\"\\\"\n\t\t\t#{'a'.repeat(80)}\n\t\t\t\\\"\\\"\\\"\n\t\t\"\"\"\n\n# --- multi line string\n\ntest \"line 148\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'x', 'abc\\ndef'\n\tt.is getMyLogs(), \"\"\"\n\t\tx = 'abcÂ®def'\n\t\t\"\"\"\n\n# --- hash (OL doesn't fit)\n\ntest \"line 157\", (t) =>\n\tclearAllLogs('noecho')\n\tsetLogWidth 5\n\tLOGVALUE 'h', {xyz: 42, abc: 99}\n\tresetLogWidth()\n\tt.is getMyLogs(), \"\"\"\n\t\th =\n\t\t\t---\n\t\t\tabc: 99\n\t\t\txyz: 42\n\t\t\"\"\"\n\n# --- hash (OL fits)\n\ntest \"line 171\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'h', {xyz: 42, abc: 99}\n\tt.is getMyLogs(), \"\"\"\n\t\th = {\"xyz\":42,\"abc\":99}\n\t\t\"\"\"\n\n# --- array  (OL doesn't fit)\n\ntest \"line 180\", (t) =>\n\tclearAllLogs('noecho')\n\tsetLogWidth 5\n\tLOGVALUE 'l', ['xyz', 42, false, undef]\n\tresetLogWidth()\n\tt.is getMyLogs(), \"\"\"\n\t\tl =\n\t\t\t---\n\t\t\t- xyz\n\t\t\t- 42\n\t\t\t- false\n\t\t\t- undef\n\t\t\"\"\"\n\n# --- array (OL fits)\n\ntest \"line 196\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'l', ['xyz', 42, false, undef]\n\tt.is getMyLogs(), \"\"\"\n\t\tl = [\"xyz\",42,false,null]\n\t\t\"\"\"\n\n# --- object\n\nclass Node1\n\tconstructor: (@str, @level) ->\n\t\t@name = 'node1'\nnode1 = new Node1('abc', 2)\n\ntest \"line 210\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'Node1', node1\n\tt.is getMyLogs(), \"\"\"\n\t\tNode1 =\n\t\t\t---\n\t\t\tlevel: 2\n\t\t\tname: node1\n\t\t\tstr: abc\n\t\t\"\"\"\n\n# --- object with toString method\n\nclass Node2\n\n\tconstructor: (@str, @level) ->\n\t\t@name = 'node2'\n\n\ttoLogString: () ->\n\t\treturn \"\"\"\n\t\t\tHERE IT IS\n\t\t\tstr is #{@str}\n\t\t\tname is #{@name}\n\t\t\tlevel is #{@level}\n\t\t\tTHAT'S ALL FOLKS!\n\t\t\t\"\"\"\n\nnode2 = new Node2('abc', 2)\n[type, subtype] = jsType(node2)\n\ntest \"line 240\", (t) =>\n\tclearAllLogs('noecho')\n\tLOGVALUE 'Node2', node2\n\tt.is getMyLogs(), \"\"\"\n\t\tNode2 =\n\t\t\tHERE IT IS\n\t\t\tstr is abc\n\t\t\tname is node2\n\t\t\tlevel is 2\n\t\t\tTHAT'S ALL FOLKS!\n\t\t\"\"\"\n\ntest \"line 252\", (t) =>\n\tclearAllLogs('noecho')\n\n\thProc = {\n\t\tcode:   (block) -> return \"#{block};\"\n\t\thtml:   (block) -> return block.replace('<p>', '<p> ').replace('</p>', ' </p>')\n\t\tScript: (block) -> return elem('script', undef, block, \"\\t\")\n\t\t}\n\n\tLOGVALUE 'hProc', hProc\n\n\tt.is getMyLogs(), \"\"\"\n\t\thProc =\n\t\t\t---\n\t\t\tScript: \"[Function: Script]\"\n\t\t\tcode: \"[Function: code]\"\n\t\t\thtml: \"[Function: html]\"\n\t\t\"\"\"\n\ntest \"line 271\", (t) =>\n\tclearAllLogs('noecho')\n\tsetLogWidth 5\n\tLOGTAML 'lItems', ['xyz', 42, false, undef]\n\tresetLogWidth()\n\tt.is getMyLogs(), \"\"\"\n\t\tlItems = <<<\n\t\t   ---\n\t\t   - xyz\n\t\t   - 42\n\t\t   - false\n\t\t   - undef\n\t\t\"\"\"\n\ntest \"line 284\", (t) =>\n\tclearAllLogs('noecho')\n\tsetLogWidth 5\n\tLOGJSON 'lItems', ['xyz', 42, false, undef]\n\tresetLogWidth()\n\tt.is getMyLogs(), \"\"\"\n\t\tlItems =\n\t\t[\n\t\t   \"xyz\",\n\t\t   42,\n\t\t   false,\n\t\t   null\n\t\t]\n\t\t\"\"\"\n"
  ]
}