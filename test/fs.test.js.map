{
  "version": 3,
  "file": "fs.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\fs.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# fs.test.coffee\n\nimport {utest} from '@jdeighan/base-utils/utest'\nimport {undef, fromJSON, toJSON, LOG} from '@jdeighan/base-utils'\nimport {setDebugging} from '@jdeighan/base-utils/debug'\nimport {\n\tworkingDir, parentDir, myself, mydir, mkpath, isFile,\n\tgetPkgJsonDir, getPkgJsonPath,\n\tslurp, slurpJSON, slurpTAML, slurpPkgJSON,\n\tbarf, barfJSON, barfTAML, barfPkgJSON,\n\tparsePath, getTextFileContents, allFilesIn, allLinesIn,\n\tforEachFileInDir, forEachItem, forEachLineInFile,\n\tFileWriter, FileWriterSync,\n\t} from '@jdeighan/base-utils/fs'\n\n# --- should be root directory of @jdeighan/base-utils\nprojDir = workingDir()\ndir = mydir(import.meta.url)    # project test folder\nsubdir = mkpath(dir, 'test')    # subdir test inside test\nfile = myself(import.meta.url)\ntestPath = mkpath(projDir, 'test', 'readline.txt')\n\n# ---------------------------------------------------------------------------\n\nutest.like 24, parsePath(import.meta.url), {\n\ttype: 'file'\n\troot: 'c:/'\n\tbase: 'fs.test.js'\n\tfileName: 'fs.test.js'\n\tname: 'fs.test'\n\tstub: 'fs.test'\n\text: '.js'\n\tpurpose: 'test'\n\t}\n\nutest.like 36, parsePath(projDir), {\n\tpath: projDir\n\ttype: 'dir'\n\troot: 'c:/'\n\tdir: parentDir(projDir)\n\tbase: 'base-utils'\n\tfileName: 'base-utils'\n\tname: 'base-utils'\n\tstub: 'base-utils'\n\text: ''\n\tpurpose: undef\n\t}\n\nutest.like 49, parsePath(dir), {\n\tpath: dir\n\ttype: 'dir'\n\troot: 'c:/'\n\tdir: parentDir(dir)\n\tbase: 'test'\n\tfileName: 'test'\n\tname: 'test'\n\tstub: 'test'\n\text: ''\n\tpurpose: undef\n\t}\n\nutest.like 62, parsePath(subdir), {\n\tpath: subdir\n\ttype: 'dir'\n\troot: 'c:/'\n\tdir: parentDir(subdir)\n\tbase: 'test'\n\tfileName: 'test'\n\tname: 'test'\n\tstub: 'test'\n\text: ''\n\tpurpose: undef\n\t}\n\nutest.like 75, parsePath(file), {\n\tpath: file\n\ttype: 'file'\n\troot: 'c:/'\n\tdir: parentDir(file)\n\tbase: 'fs.test.js'\n\tfileName: 'fs.test.js'\n\tname: 'fs.test'\n\tstub: 'fs.test'\n\text: '.js'\n\tpurpose: 'test'\n\t}\n\nutest.like 88, parsePath(testPath), {\n\tpath: testPath\n\ttype: 'file'\n\troot: 'c:/'\n\tdir: parentDir(testPath)\n\tbase: 'readline.txt'\n\tfileName: 'readline.txt'\n\tname: 'readline'\n\tstub: 'readline'\n\text: '.txt'\n\tpurpose: undef\n\t}\n\n# ---------------------------------------------------------------------------\n\nutest.equal 43, slurp(testPath, {maxLines: 2}), \"\"\"\n\tabc\n\tdef\n\t\"\"\"\n\nutest.equal 48, slurp(testPath, {maxLines: 3}), \"\"\"\n\tabc\n\tdef\n\tghi\n\t\"\"\"\n\nutest.equal 54, slurp(testPath, {maxLines: 1000}), \"\"\"\n\tabc\n\tdef\n\tghi\n\tjkl\n\tmno\n\t\"\"\"\n\n# --- Test without building path first\n\nutest.equal 64, slurp(projDir, 'test', 'readline.txt', {maxLines: 2}), \"\"\"\n\tabc\n\tdef\n\t\"\"\"\n\nutest.equal 69, slurp(projDir, 'test', 'readline.txt', {maxLines: 3}), \"\"\"\n\tabc\n\tdef\n\tghi\n\t\"\"\"\n\nutest.equal 75, slurp(projDir, 'test', 'readline.txt', {maxLines: 1000}), \"\"\"\n\tabc\n\tdef\n\tghi\n\tjkl\n\tmno\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n# --- test getTextFileContents\n\n(() =>\n\tpath = \"./test/test/file3.txt\"\n\th = getTextFileContents(path)\n\tutest.equal 124, h, {\n\t\tmetadata: {fName: 'John', lName: 'Deighan'}\n\t\tlLines: ['', 'This is a test']\n\t\t}\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test allFilesIn\n\n(() =>\n\tlFiles = []\n\tfor hFileInfo from allFilesIn('./test/test', 'eager')\n\t\tlFiles.push hFileInfo\n\n\tutest.like 138, lFiles, [\n\t\t{fileName: 'file1.txt', metadata: undef, lLines: ['DONE']}\n\t\t{fileName: 'file1.zh',  metadata: undef, lLines: ['DONE']}\n\t\t{fileName: 'file2.txt', metadata: undef, lLines: ['DONE']}\n\t\t{fileName: 'file2.zh',  metadata: undef, lLines: ['DONE']}\n\t\t{\n\t\t\tfileName: 'file3.txt'\n\t\t\tmetadata: {\n\t\t\t\tfName: 'John'\n\t\t\t\tlName: 'Deighan'\n\t\t\t\t}\n\t\t\tlLines: ['', 'This is a test']\n\t\t\t}\n\t\t]\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tpath = './test/testfile.txt'\n\n\t# --- put garbage into the file\n\tbarf \"garbage...\", path\n\n\twriter = new FileWriterSync(path)\n\twriter.writeln \"line 1\"\n\twriter.writeln \"line 2\"\n\twriter.end()\n\n\tutest.truthy 165, isFile(path)\n\n\ttext = slurp path\n\tutest.equal 168, text, \"line 1\\nline 2\\n\"\n\t)()\n"
  ]
}