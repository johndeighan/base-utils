{
  "version": 3,
  "file": "fs.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\fs.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# fs.test.coffee\n\nimport {utest} from '@jdeighan/base-utils/utest'\nimport {undef, fromJSON, toJSON} from '@jdeighan/base-utils'\nimport {\n\tmkpath, isFile,\n\tgetPkgJsonDir, getPkgJsonPath,\n\tslurp, slurpJSON, slurpTAML, slurpPkgJSON,\n\tbarf, barfJSON, barfTAML, barfPkgJSON,\n\tparseSource, getTextFileContents, allFilesIn, allLinesIn,\n\tforEachFileInDir, forEachItem, forEachLineInFile,\n\tFileWriter, FileWriterSync,\n\t} from '@jdeighan/base-utils/fs'\n\ndir = process.cwd()     # should be root directory of @jdeighan/base-utils\ntestDir = mkpath(dir, 'test')\ntestPath = mkpath(dir, 'test', 'readline.txt')\n\n# ---------------------------------------------------------------------------\n\nutest.equal 43, slurp(testPath, {maxLines: 2}), \"\"\"\n\tabc\n\tdef\n\t\"\"\"\n\nutest.equal 48, slurp(testPath, {maxLines: 3}), \"\"\"\n\tabc\n\tdef\n\tghi\n\t\"\"\"\n\nutest.equal 54, slurp(testPath, {maxLines: 1000}), \"\"\"\n\tabc\n\tdef\n\tghi\n\tjkl\n\tmno\n\t\"\"\"\n\n# --- Test without building path first\n\nutest.equal 64, slurp(dir, 'test', 'readline.txt', {maxLines: 2}), \"\"\"\n\tabc\n\tdef\n\t\"\"\"\n\nutest.equal 69, slurp(dir, 'test', 'readline.txt', {maxLines: 3}), \"\"\"\n\tabc\n\tdef\n\tghi\n\t\"\"\"\n\nutest.equal 75, slurp(dir, 'test', 'readline.txt', {maxLines: 1000}), \"\"\"\n\tabc\n\tdef\n\tghi\n\tjkl\n\tmno\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n# --- test getTextFileContents\n\n(() =>\n\tpath = \"./test/test/file3.txt\"\n\th = getTextFileContents(path)\n\tutest.equal 124, h, {\n\t\tmetadata: {fName: 'John', lName: 'Deighan'}\n\t\tlLines: ['', 'This is a test']\n\t\t}\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test allFilesIn\n\n(() =>\n\tlFiles = []\n\tfor hFileInfo from allFilesIn('./test/test', {eager: true})\n\t\tlFiles.push hFileInfo\n\n\tutest.like 138, lFiles, [\n\t\t{fileName: 'file1.txt', metadata: undef, lLines: ['DONE']}\n\t\t{fileName: 'file1.zh',  metadata: undef, lLines: ['DONE']}\n\t\t{fileName: 'file2.txt', metadata: undef, lLines: ['DONE']}\n\t\t{fileName: 'file2.zh',  metadata: undef, lLines: ['DONE']}\n\t\t{\n\t\t\tfileName: 'file3.txt'\n\t\t\tmetadata: {fName: 'John', lName: 'Deighan'}\n\t\t\tlLines: ['','This is a test']\n\t\t\t}\n\t\t]\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tpath = './test/testfile.txt'\n\n\t# --- put garbage into the file\n\tbarf \"garbage...\", path\n\n\twriter = new FileWriterSync(path)\n\twriter.writeln \"line 1\"\n\twriter.writeln \"line 2\"\n\twriter.end()\n\n\tutest.truthy 165, isFile(path)\n\n\ttext = slurp path\n\tutest.equal 168, text, \"line 1\\nline 2\\n\"\n\t)()\n"
  ]
}