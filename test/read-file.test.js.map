{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "test/read-file.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# read-file.test.coffee\n\nimport {\n\tundef, defined, notdefined, isArray,\n\tsortArrayOfHashes, toArray, toBlock,\n\tisEmpty, nonEmpty, spaces, tabs, OL,\n\t} from '@jdeighan/base-utils'\nimport {\n\tassert, croak,\n\t} from '@jdeighan/base-utils/exceptions'\nimport {splitLine} from '@jdeighan/base-utils/indent'\n\nimport * as lib1 from '@jdeighan/base-utils/utest'\nObject.assign(global, lib1)\nimport * as lib2 from '@jdeighan/base-utils/read-file'\nObject.assign(global, lib2)\n\n# ---------------------------------------------------------------------------\n# --- test readTextFile\n\n(() =>\n\tpath = \"./test/test/file3.txt\"\n\t[hMetaData, lLines] = readTextFile(path, 'eager')\n\tassert isArray(lLines), \"Bad return from readTextFile\"\n\tequal hMetaData, {fName: 'John', lName: 'Deighan'}\n\tequal lLines, ['', 'This is a test']\n\t)()\n\n# ---------------------------------------------------------------------------\n# Contents of ./test/readline5.txt\n# abc\n# defg\n#\n# abcdefg\n# more text\n# ---------------------------------------------------------------------------\n# --- get all lines in file\n\n(() =>\n\tpath = './test/readline5.txt'\n\t[hMetaData, lLines] = readTextFile(path, 'eager')\n\tequal lLines, [\n\t\t'abc'\n\t\t'defg'\n\t\t''\n\t\t'abcdefg'\n\t\t'more text'\n\t\t]\n\t)()\n\n(() =>\n\tpath = './test/readline4.txt'\n\t[hMetaData, lLines] = readTextFile(path, 'eager')\n\tequal lLines, [\n\t\t'ghi'\n\t\t'jkl'\n\t\t''\n\t\t'mno'\n\t\t'pqr'\n\t\t]\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test allFilesMatching()\n\n(() =>\n\tlFiles = []\n\tfor hFile from allFilesMatching('./test/test/*', 'eager')\n\t\t{ext} = hFile\n\t\tif (ext != '.map') && (ext != '.js')\n\t\t\tlFiles.push hFile\n\tsortArrayOfHashes lFiles, 'fileName'\n\n\tlike lFiles, [\n\t\t{\n\t\t\tfileName: 'file1.txt',\n\t\t\thMetaData: {},\n\t\t\tlLines: ['Hello']\n\t\t\t}\n\t\t{\n\t\t\tfileName: 'file1.zh',\n\t\t\thMetaData: {},\n\t\t\tlLines: ['你好']\n\t\t\t}\n\t\t{\n\t\t\tfileName: 'file2.txt',\n\t\t\thMetaData: {},\n\t\t\tlLines: ['Goodbye']\n\t\t\t}\n\t\t{\n\t\t\tfileName: 'file2.zh',\n\t\t\thMetaData: {},\n\t\t\tlLines: ['再见']\n\t\t\t}\n\t\t{\n\t\t\tfileName: 'file3.txt'\n\t\t\thMetaData: {\n\t\t\t\tfName: 'John'\n\t\t\t\tlName: 'Deighan'\n\t\t\t\t}\n\t\t\tlLines: ['', 'This is a test']\n\t\t\t}\n\t\t{\n\t\t\tfileName: 'test.coffee',\n\t\t\thMetaData: {},\n\t\t\tlLines: [ 'console.log \"Hello\"' ]\n\t\t\t}\n\t\t]\n\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test allFilesMatching with pattern\n\n(() =>\n\tlFiles = []\n\thOptions = {\n\t\teager: true\n\t\t}\n\tfor hFile from allFilesMatching('./test/test/*.txt', hOptions)\n\t\tlFiles.push hFile\n\tsortArrayOfHashes lFiles, 'fileName'\n\n\tlike lFiles, [\n\t\t{\n\t\t\tfileName: 'file1.txt',\n\t\t\thMetaData: {},\n\t\t\tlLines: ['Hello']\n\t\t\t}\n\t\t{\n\t\t\tfileName: 'file2.txt',\n\t\t\thMetaData: {},\n\t\t\tlLines: ['Goodbye']\n\t\t\t}\n\t\t{\n\t\t\tfileName: 'file3.txt'\n\t\t\thMetaData: {\n\t\t\t\tfName: 'John'\n\t\t\t\tlName: 'Deighan'\n\t\t\t\t}\n\t\t\tlLines: ['', 'This is a test']\n\t\t\t}\n\t\t]\n\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test allFilesMatching with pattern and cwd\n\n(() =>\n\tlFiles = []\n\thOptions = {\n\t\teager: true\n\t\thGlobOptions: {\n\t\t\tcwd: './test/test'\n\t\t\t}\n\t\t}\n\tfor hFile from allFilesMatching('*.txt', hOptions)\n\t\tlFiles.push hFile\n\tsortArrayOfHashes lFiles, 'fileName'\n\n\tlike lFiles, [\n\t\t{\n\t\t\tfileName: 'file1.txt',\n\t\t\thMetaData: {},\n\t\t\tlLines: ['Hello']\n\t\t\t}\n\t\t{\n\t\t\tfileName: 'file2.txt',\n\t\t\thMetaData: {},\n\t\t\tlLines: ['Goodbye']\n\t\t\t}\n\t\t{\n\t\t\tfileName: 'file3.txt'\n\t\t\thMetaData: {\n\t\t\t\tfName: 'John'\n\t\t\t\tlName: 'Deighan'\n\t\t\t\t}\n\t\t\tlLines: ['', 'This is a test']\n\t\t\t}\n\t\t]\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tfilePath = './test/words/adjectives.zh'\n\tnumWords = undef\n\n\thandleLine = (line) ->\n\t\tif defined(numWords)\n\t\t\tnumWords += 1\n\t\telse\n\t\t\tnumWords = 1\n\t\treturn\n\n\t[hMetaData, reader] = readTextFile(filePath)\n\tfor line from reader()\n\t\thandleLine line\n\n\tequal numWords, 256\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tnumWords = undef\n\n\thandleLine = (line) ->\n\t\tif defined(numWords)\n\t\t\tnumWords += 1\n\t\telse\n\t\t\tnumWords = 1\n\t\treturn\n\n\tfor h from allFilesMatching('./test/words/*.zh')\n\t\t[hMetaData, reader] = readTextFile(h.filePath)\n\t\tfor line from reader()\n\t\t\thandleLine line\n\n\tequal numWords, 2048\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tnumWords = undef\n\n\thandleLine = (line) ->\n\t\tif nonEmpty(line)\n\t\t\tif defined(numWords)\n\t\t\t\tnumWords += 1\n\t\t\telse\n\t\t\t\tnumWords = 1\n\t\treturn\n\n\tlLines = [\n\t\t'abc'\n\t\t'   '\n\t\t'\\t\\t'\n\t\t'def'\n\t\t''\n\t\tundef\n\t\t'你好'\n\t\t]\n\t[hMetaData, reader] = readTextFile(lLines)\n\tfor line from reader()\n\t\thandleLine line\n\n\tequal numWords, 3\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tnumWords = undef\n\n\thandleLine = (line) ->\n\t\tif nonEmpty(line)\n\t\t\tif defined(numWords)\n\t\t\t\tnumWords += 1\n\t\t\telse\n\t\t\t\tnumWords = 1\n\t\treturn\n\n\ttext = \"\"\"\n\t\tabc\n\t\t#{spaces(3)}\n\t\t#{tabs(2)}\n\t\tdef\n\n\t\t你好\n\t\t\"\"\"\n\n\t[hMetaData, reader] = readTextFile(toArray(text))\n\tfor line from reader()\n\t\thandleLine line\n\n\tequal numWords, 3\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tnumWords = undef\n\n\thandleLine = (line) ->\n\t\tif nonEmpty(line)\n\t\t\tif defined(numWords)\n\t\t\t\tnumWords += 1\n\t\t\telse\n\t\t\t\tnumWords = 1\n\t\treturn\n\n\ttext = \"\"\"\n\t\tabc\n\t\tdef\n\t\t你好\n\t\tghi\n\t\t__END__\n\t\tabc\n\t\tdef\n\t\t\"\"\"\n\n\t[hMetaData, reader] = readTextFile(toArray(text))\n\tfor line from reader()\n\t\thandleLine line\n\n\tequal numWords, 4\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tnumWords = undef\n\tnumExtraWords = undef\n\n\thandleLine = (line) ->\n\t\tif nonEmpty(line)\n\t\t\tif defined(numWords)\n\t\t\t\tnumWords += 1\n\t\t\telse\n\t\t\t\tnumWords = 1\n\t\treturn\n\n\thandleExtraLine = (line) ->\n\t\tif nonEmpty(line)\n\t\t\tif defined(numExtraWords)\n\t\t\t\tnumExtraWords += 1\n\t\t\telse\n\t\t\t\tnumExtraWords = 1\n\t\treturn\n\n\ttext = \"\"\"\n\t\tabc\n\t\tdef\n\t\t你好\n\t\tghi\n\t\t__END__\n\t\tmno\n\t\tpqr\n\t\t\"\"\"\n\n\t[hMetaData, reader] = readTextFile(toArray(text))\n\tfor line from reader()\n\t\thandleLine line\n\tfor line from reader()\n\t\thandleExtraLine line\n\n\tequal numWords, 4\n\tequal numExtraWords, 2\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tlLines = []\n\tlExtraLines = []\n\n\tinput = toArray(\"\"\"\n\t\t---\n\t\tfName: John\n\t\tlName: Deighan\n\t\tgender: male\n\t\t---\n\t\tabc\n\t\tdef\n\t\t你好\n\t\tghi\n\t\t__END__\n\t\tmno\n\t\tpqr\n\t\t\"\"\")\n\n\t[hMetaData, reader, numMetaLines] = readTextFile(input)\n\n\tfor line from reader()\n\t\tlLines.push line\n\n\tfor line from reader()\n\t\tlExtraLines.push line\n\n\tequal hMetaData, {\n\t\tfName: 'John'\n\t\tlName: 'Deighan'\n\t\tgender: 'male'\n\t\t}\n\tequal numMetaLines, 5\n\tequal lLines.length, 4\n\tequal toBlock(lLines), \"\"\"\n\t\tabc\n\t\tdef\n\t\t你好\n\t\tghi\n\t\t\"\"\"\n\tequal lExtraLines.length, 2\n\tequal toBlock(lExtraLines), \"\"\"\n\t\tmno\n\t\tpqr\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test readTextFile with string pattern\n\n(() =>\n\tlLines = []\n\n\tinput = toArray(\"\"\"\n\t\tabc\n\t\tabcdef\n\t\txxxab\n\t\tdef\n\t\t你好\n\t\t\"\"\")\n\n\t[hMetaData, reader] = readTextFile(input, {pattern: 'ab'})\n\tfor line from reader()\n\t\tlLines.push line\n\n\tequal lLines, [\n\t\t'abc'\n\t\t'abcdef'\n\t\t'xxxab'\n\t\t]\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test readTextFile with regexp pattern\n\n(() =>\n\tlLines = []\n\n\tinput = toArray(\"\"\"\n\t\tabc\n\t\tabcdef\n\t\txxxab\n\t\tdef\n\t\t你好\n\t\t\"\"\")\n\n\t[hMetaData, reader] = readTextFile(input, {pattern: /^ab/})\n\tfor line from reader()\n\t\tlLines.push line\n\n\tequal lLines, [\n\t\t'abc'\n\t\t'abcdef'\n\t\t]\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test simple 'transform' option\n\n(() =>\n\tinput = toArray(\"\"\"\n\t\tabc\n\t\tdef\n\t\t你好\n\t\tghi\n\t\t\"\"\")\n\n\ttransform = (line) ->\n\t\treturn line.toUpperCase()\n\t[hMetaData, reader] = readTextFile(input, {transform})\n\n\tequal toBlock(Array.from(reader())), \"\"\"\n\t\tABC\n\t\tDEF\n\t\t你好\n\t\tGHI\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test complex 'transform' option\n\n(() =>\n\tinput = toArray(\"\"\"\n\t\tif (x == 2)\n\t\t\ty = 15\n\t\t\tlog y\n\t\tlog 'done'\n\t\t\"\"\")\n\n\ttransform = (line) ->\n\t\t[level, text] = splitLine(line)\n\t\tif lMatches = text.match(/^if\\s+(.*)$/)\n\t\t\tobj = {type: 'if', cond: lMatches[1]}\n\t\telse if lMatches = text.match(/^log\\s+(.*)$/)\n\t\t\tobj = {type: 'log', text: lMatches[1]}\n\t\telse if lMatches = text.match(/^([a-z])\\s*=\\s*(.*)$/)\n\t\t\tobj = {type: 'assign', var: lMatches[1], val: lMatches[2]}\n\t\telse\n\t\t\tcroak \"syntax error: #{OL(line)}\"\n\t\treturn [level, obj]\n\n\t[hMetaData, reader] = readTextFile(input, {transform})\n\n\tequal Array.from(reader()), [\n\t\t[0, {type: 'if', cond: \"(x == 2)\"}]\n\t\t[1, {type: 'assign', var: 'y', val: '15'}]\n\t\t[1, {type: 'log', text: 'y'}]\n\t\t[0, {type: 'log', text: \"'done'\"}]\n\t\t]\n\t)()\n"
  ]
}