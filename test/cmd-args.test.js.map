{
  "version": 3,
  "file": "cmd-args.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\cmd-args.test.coffee"
  ],
  "names": [],
  "mappings": "AAAsB;AAAA,IAAA;;AAEtB,OAAA;EAAQ,GAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,UAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,KAAR;CAAA,MAAA;;AAEA,CAAA,GAAI,IAAI,UAAJ,CAAA;;AACJ,CAAC,CAAC,cAAF,GAAmB,CAAC,GAAD,CAAA,GAAA;AAAS,SAAO,KAAA,CAAM,GAAN;AAAhB,EAPG;;;AAWtB,CAAC,CAAC,KAAF,CAAQ,IAAR,EAAc;EACb,CAAA,EAAG;AADU,CAAd;;AAGA,CAAC,CAAC,KAAF,CAAQ,IAAR,EAAc;EACb,CAAA,EAAG;AADU,CAAd;;AAGA,CAAC,CAAC,KAAF,CAAQ,MAAR,EAAgB;EACf,CAAA,EAAG;AADY,CAAhB;;AAGA,CAAC,CAAC,KAAF,CAAQ,MAAR,EAAgB;EACf,CAAA,EAAG;AADY,CAAhB;;AAGA,CAAC,CAAC,KAAF,CAAQ,WAAR,EAAqB;EACpB,EAAA,EAAI;AADgB,CAArB;;AAGA,CAAC,CAAC,KAAF,CAAQ,iBAAR,EAA2B;EAC1B,KAAA,EAAO;AADmB,CAA3B;;AAGA,CAAC,CAAC,KAAF,CAAQ,oBAAR,EAA8B;EAC7B,KAAA,EAAO;AADsB,CAA9B;;AAGA,CAAC,CAAC,KAAF,CAAQ,OAAR,EAAiB;EAChB,CAAA,EAAG,IADa;EAEhB,CAAA,EAAG;AAFa,CAAjB;;AAIA,CAAC,CAAC,KAAF,CAAQ,KAAR,EAAiB;EAChB,CAAA,EAAG,IADa;EAEhB,CAAA,EAAG;AAFa,CAAjB;;AAIA,CAAC,CAAC,KAAF,CAAQ,iBAAR,EAA2B;EAC1B,CAAA,EAAE,IADwB;EAE1B,KAAA,EAAM;AAFoB,CAA3B;;AAIA,CAAC,CAAC,KAAF,CAAQ,yBAAR,EAAmC;EAClC,CAAA,EAAE,IADgC;EAElC,CAAA,EAAE,IAFgC;EAGlC,KAAA,EAAM,OAH4B;EAIlC,CAAA,EAAE;AAJgC,CAAnC;;AAMA,CAAC,CAAC,KAAF,CAAQ,uBAAR,EAAiC;EAChC,CAAA,EAAE,IAD8B;EAEhC,CAAA,EAAE,IAF8B;EAGhC,KAAA,EAAM,OAH0B;EAIhC,CAAA,EAAE;AAJ8B,CAAjC;;AAMA,CAAC,CAAC,KAAF,CAAQ,4BAAR,EAAsC;EACrC,CAAA,EAAE,IADmC;EAErC,CAAA,EAAE,IAFmC;EAGrC,KAAA,EAAM,UAH+B;EAIrC,CAAA,EAAE;AAJmC,CAAtC;;AAMA,CAAC,CAAC,KAAF,CAAQ,iBAAR,EAA2B;EAC1B,CAAA,EAAE,IADwB;EAE1B,CAAA,EAAE,IAFwB;EAG1B,CAAA,EAAE,CAAC,OAAD,EAAU,OAAV;AAHwB,CAA3B;;AAMA,CAAC,CAAC,KAAF,CAAQ,2BAAR,EAAqC;EACpC,CAAA,EAAE,IADkC;EAEpC,CAAA,EAAE,IAFkC;EAGpC,CAAA,EAAE,CAAC,SAAD,EAAY,SAAZ;AAHkC,CAArC;;AAMA,CAAC,CAAC,MAAF,CAAS,CAAA,CAAA,GAAA;SAAM,KAAA,CAAM,IAAN;AAAN,CAAT",
  "sourcesContent": [
    "# cmd-args.test.coffee\r\n\r\nimport {LOG} from '@jdeighan/base-utils'\r\nimport {UnitTester} from '@jdeighan/base-utils/utest'\r\nimport {parse} from '@jdeighan/base-utils/cmd-args'\r\n\r\nu = new UnitTester()\r\nu.transformValue = (str) => return parse(str)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nu.equal '-a', {\r\n\ta: true\r\n\t}\r\nu.equal '-X', {\r\n\tX: true\r\n\t}\r\nu.equal '  -b', {\r\n\tb: true\r\n\t}\r\nu.equal '-c\\t', {\r\n\tc: true\r\n\t}\r\nu.equal '-ab=title', {\r\n\tab: 'title'\r\n\t}\r\nu.equal '-label=Expenses', {\r\n\tlabel: 'Expenses'\r\n\t}\r\nu.equal '-title=\"My Budget\"', {\r\n\ttitle: 'My Budget'\r\n\t}\r\nu.equal '-a -b', {\r\n\ta: true\r\n\tb: true\r\n\t}\r\nu.equal '-ab',   {\r\n\ta: true\r\n\tb: true\r\n\t}\r\nu.equal \"-a -title=works\", {\r\n\ta:true\r\n\ttitle:\"works\"\r\n\t}\r\nu.equal \"-a -m -title=works -n=5\", {\r\n\ta:true\r\n\tm:true\r\n\ttitle:\"works\"\r\n\tn:\"5\"\r\n\t}\r\nu.equal \"-am -title=works -n=5\", {\r\n\ta:true\r\n\tm:true\r\n\ttitle:\"works\"\r\n\tn:\"5\"\r\n\t}\r\nu.equal \"-am -title='it works' -n=5\", {\r\n\ta:true\r\n\tm:true\r\n\ttitle:\"it works\"\r\n\tn:\"5\"\r\n\t}\r\nu.equal \"-am Willy Wonka\", {\r\n\ta:true\r\n\tm:true\r\n\t_:['Willy', 'Wonka']\r\n\t}\r\n\r\nu.equal \"'do that' -am \\\"do this\\\"\", {\r\n\ta:true\r\n\tm:true\r\n\t_:['do that', 'do this']\r\n\t}\r\n\r\nu.throws () => parse('--')\r\n"
  ]
}