{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "src/bin/gen-bin-keys.coffee"
  ],
  "names": [],
  "mappings": "AAAqB;AAAA,IAAA,QAAA,EAAA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,EAAA;;AAErB,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,OAD7B;EACsC,QADtC;EAEC,GAFD;EAEM,EAFN;EAEU,OAFV;EAEmB,MAFnB;CAAA,MAAA;;AAIA,OAAA;EAAQ,MAAR;EAAgB,KAAhB;CAAA,MAAA;;AACA,OAAA;EACC,MADD;EACS,KADT;EACgB,MADhB;EACwB,MADxB;EACgC,OADhC;EACyC,UADzC;EAEC,KAFD;EAEQ,gBAFR;EAE0B,SAF1B;EAEqC,IAFrC;EAE2C,QAF3C;EAGC,mBAHD;CAAA,MAAA;;AAMA,OAAA,GAAU,sBAbW;;;AAiBrB,GAAA,GAAM,CAAC,IAAD,CAAA,GAAA;AAEN,MAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA;EAAC,IAAG,QAAA,GAAW,IAAI,CAAC,KAAL,CAAW,2DAAX,CAAd;IAOC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAA,GAAe;IACf,MAAA,GAAS,CAAA,GAAI,CAAJ,GAAQ;AACjB,WAAO,OATR;GAAA,MAAA;AAWC,WAAO,MAXR;;AAFK,EAjBe;;;;;;;;;;AAyCrB,MAAA,CAAO,UAAA,CAAW,QAAX,CAAP,EAA6B,yBAA7B;;AAMA;;;;AAAA,KAAA,QAAA;EACC,CAAA,CAAC,QAAD,EAAW,QAAX,CAAA,GAAuB,CAAvB;EACA,GAAA,CAAI,CAAA,MAAA,CAAA,CAAS,QAAT,CAAA,CAAJ;EACA,MAAA,GAAS,OAAA,CAAQ,QAAR,EAAkB,KAAlB;EACT,IAAG,CAAE,mBAAA,CAAoB,CAAC,CAAC,QAAtB,EAAgC,MAAhC,CAAL;IACC,GAAA,CAAI,cAAJ;IACA,OAAA,CAAQ,CAAA,4BAAA,CAAA,CAA+B,QAA/B,CAAA,CAAR,EAFD;;EAGA,MAAA,CAAO,MAAA,CAAO,MAAP,CAAP,EAAuB,CAAA,gBAAA,CAAA,CAAmB,EAAA,CAAG,MAAH,CAAnB,CAAA,CAAvB;AAPD,CA/CqB;;;;;AA4DrB,IAAA,GAAO,CAAA;;AACP;AAAA,KAAA,SAAA;EACC,CAAA,CAAC,QAAD,EAAW,QAAX,EAAqB,IAArB,CAAA,GAA6B,CAA7B;EACA,GAAA,CAAI,CAAA,MAAA,CAAA,CAAS,QAAT,CAAA,CAAJ;EACA,MAAA,GAAS,KAAA,CAAM,QAAN;EACT,IAAG,CAAE,MAAM,CAAC,UAAP,CAAkB,OAAlB,CAAL;IACC,GAAA,CAAI,uBAAJ;IACA,IAAA,CAAM,OAAA,GAAU,IAAV,GAAiB,MAAvB,EAAgC,QAAhC,EAFD;;EAIA,IAAI,CAAC,IAAD,CAAJ,GAAa,CAAA,UAAA,CAAA,CAAa,QAAb,CAAA;EACb,GAAA,CAAI,IAAA,CAAA,CAAM,IAAN,CAAA,IAAA,CAAA,CAAiB,IAAI,CAAC,IAAD,CAArB,CAAA,CAAJ;EAEA,UAAA,GAAa,GAAA,CAAI,IAAJ;EACb,IAAG,OAAA,CAAQ,UAAR,CAAH;IACC,IAAI,CAAC,UAAD,CAAJ,GAAmB,CAAA,UAAA,CAAA,CAAa,QAAb,CAAA;IACnB,GAAA,CAAI,IAAA,CAAA,CAAM,UAAN,CAAA,IAAA,CAAA,CAAuB,IAAI,CAAC,IAAD,CAA3B,CAAA,CAAJ,EAFD;;AAZD,CA7DqB;;;;AAgFrB,IAAG,OAAA,CAAQ,IAAR,CAAH;EACC,GAAA,CAAI,oBAAJ,EADD;CAAA,MAAA;EAGC,GAAA,CAAI,oCAAJ;EACA,KAAA,GAAQ,SAAA,CAAU,gBAAV;EACR,IAAG,CAAE,MAAA,CAAO,KAAP,EAAc,KAAd,CAAL;IACC,GAAA,CAAI,oBAAJ;IACA,KAAK,CAAC,GAAN,GAAY,CAAA,EAFb;;EAGA,KAAA,WAAA;;IACC,IAAG,UAAA,CAAW,KAAK,CAAC,GAAG,CAAC,GAAD,CAApB,CAAH;MACC,GAAA,CAAI,CAAA,aAAA,CAAA,CAAgB,GAAhB,CAAA,GAAA,CAAA,CAAyB,KAAzB,CAAA,CAAJ;MACA,KAAK,CAAC,GAAG,CAAC,GAAD,CAAT,GAAiB,MAFlB;;EADD;EAIA,QAAA,CAAS,KAAT,EAAgB,gBAAhB,EAZD;;;AAcA,GAAA,CAAI,MAAJ",
  "sourcesContent": [
    "# gen-bin-keys.coffee\n\nimport {\n\tundef, defined, notdefined, isEmpty, nonEmpty,\n\tLOG, OL, execCmd, hasKey,\n\t} from '@jdeighan/base-utils'\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\nimport {\n\tisFile, isDir, mkpath, rmFile, withExt, isProjRoot,\n\tslurp, allFilesMatching, slurpJSON, barf, barfJSON,\n\tnewerDestFilesExist,\n\t} from '@jdeighan/base-utils/fs'\n\nshebang = \"#!/usr/bin/env node\"\n\n# ---------------------------------------------------------------------------\n\ntla = (stub) =>\n\n\tif lMatches = stub.match(///^\n\t\t\t([a-z])(?:[a-z]*)\n\t\t\t\\-\n\t\t\t([a-z])(?:[a-z]*)\n\t\t\t\\-\n\t\t\t([a-z])(?:[a-z]*)\n\t\t\t$///)\n\t\t[_, a, b, c] = lMatches\n\t\tresult = a + b + c\n\t\treturn result\n\telse\n\t\treturn undef\n\n# ---------------------------------------------------------------------------\n# 1. makes sure current directory is project root\n# 2. compile *.coffee files in src/bin if not up to date\n# 3. Add shebang line to *.js files in src/bin if missing\n# 4. Add subkeys under 'bin' key in package.json if missing\n# ---------------------------------------------------------------------------\n\n# 1. Error if current directory is not a project root directory\n\nassert isProjRoot('strict'), \"Not in package root dir\"\n\n# 2 . For every *.coffee file in the 'src/bin' directory:\n#       - compile to JS if no corresponding JS file\n#         OR if *.coffee file is newer than the JS file\n\nfor h from allFilesMatching('./src/bin/**/*.coffee')\n\t{filePath, fileName} = h\n\tLOG \"FOUND #{fileName}\"\n\tjsPath = withExt(filePath, '.js')\n\tif ! newerDestFilesExist(h.filePath, jsPath)\n\t\tLOG \"   - compile\"\n\t\texecCmd \"npx coffee -cmb --no-header #{filePath}\"\n\tassert isFile(jsPath), \"Missing JS file #{OL(jsPath)}\"\n\n# 3 . For every *.js file in the 'src/bin' directory:\n#       - add shebang line if missing\n#       - save <stub>: <path> in hBin\n\nhBin = {}\nfor h from allFilesMatching('./src/bin/**/*.js')\n\t{filePath, fileName, stub} = h\n\tLOG \"FOUND #{fileName}\"\n\tjsCode = slurp filePath\n\tif ! jsCode.startsWith(shebang)\n\t\tLOG \"   - add shebang line\"\n\t\tbarf (shebang + \"\\n\" + jsCode), filePath\n\n\thBin[stub] = \"./src/bin/#{fileName}\"\n\tLOG \"   #{stub} => #{hBin[stub]}\"\n\n\tshort_name = tla(stub)\n\tif defined(short_name)\n\t\thBin[short_name] = \"./src/bin/#{fileName}\"\n\t\tLOG \"   #{short_name} => #{hBin[stub]}\"\n\n# 4. Add sub-keys to key 'bin' in package.json\n#    (create if not exists)\n\nif isEmpty(hBin)\n\tLOG \"No bin keys to set\"\nelse\n\tLOG \"SET 'bin' sub-keys in package.json\"\n\thJson = slurpJSON \"./package.json\"\n\tif ! hasKey(hJson, 'bin')\n\t\tLOG \"   - add key 'bin'\"\n\t\thJson.bin = {}\n\tfor key,value of hBin\n\t\tif notdefined(hJson.bin[key])\n\t\t\tLOG \"   - add bin/#{key} = #{value}\"\n\t\t\thJson.bin[key] = value\n\tbarfJSON hJson, \"./package.json\"\n\nLOG \"DONE\""
  ]
}