{
  "version": 3,
  "file": "low-level-build.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\low-level-build.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# low-level-build.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, isEmpty, nonEmpty, LOG, OL,\r\n\thasKey, execCmd, toBlock, add_s,\r\n\t} from '@jdeighan/base-utils'\r\nimport {assert} from '@jdeighan/base-utils/exceptions'\r\nimport {\r\n\twithExt, newerDestFilesExist, allFilesMatching,\r\n\tslurp, barf, isProjRoot, slurpPkgJSON, barfPkgJSON,\r\n\t} from '@jdeighan/base-utils/fs'\r\nimport {brew} from '@jdeighan/base-utils/coffee'\r\nimport {peggify} from '@jdeighan/base-utils/peggy'\r\n\r\nhFilesProcessed = {\r\n\tcoffee: 0\r\n\tpeggy: 0\r\n\tjs: 0\r\n\t}\r\n\r\nnumCoffee = process.argv[2]\r\nif (numCoffee && numCoffee.match(/^\\d+$/))\r\n\thFilesProcessed.coffee += parseInt(numCoffee)\r\n\r\nconsole.log \"-- low-level-build --\"\r\n\r\n# ---------------------------------------------------------------------------\r\n# 1. Make sure we're in a project root directory\r\n\r\nassert isProjRoot('strict'), \"Not in package root dir\"\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- A file (either *.coffee or *.peggy) is out of date unless both:\r\n#        - a *.js file exists that's newer than the original file\r\n#        - a *.js.map file exists that's newer than the original file\r\n\r\nfileFilter = ({filePath}) =>\r\n\tjsFile = withExt(filePath, '.js')\r\n\tmapFile = withExt(filePath, '.js.map')\r\n\treturn ! newerDestFilesExist(filePath, jsFile, mapFile)\r\n\r\n# ---------------------------------------------------------------------------\r\n# 2. Search project for *.coffee files and compile them\r\n#    unless newer *.js and *.js.map files exist\r\n\r\nhOptions = {\r\n\tfileFilter\r\n\teager: true\r\n\t}\r\n\r\nfor hFile from allFilesMatching('**/*.coffee', hOptions)\r\n\t{filePath, relPath, metadata, lLines} = hFile\r\n\tLOG relPath\r\n\thFilesProcessed.coffee += 1\r\n\t[jsCode, sourceMap] = brew toBlock(lLines), relPath\r\n\tbarf jsCode, withExt(filePath, '.js')\r\n\tbarf sourceMap, withExt(filePath, '.js.map')\r\n\r\n# ---------------------------------------------------------------------------\r\n# 3. Search project for *.peggy files and compile them\r\n#    unless newer *.js and *.js.map files exist\r\n\r\nfor hFile from allFilesMatching('**/*.peggy', hOptions)\r\n\t{filePath, relPath, metadata, lLines} = hFile\r\n\tLOG relPath\r\n\thFilesProcessed.peggy += 1\r\n\t[jsCode, sourceMap] = peggify toBlock(lLines), relPath\r\n\tbarf jsCode, withExt(filePath, '.js')\r\n\tbarf sourceMap, withExt(filePath, '.js.map')\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nshebang = \"#!/usr/bin/env node\"\r\nhBin = {}    # --- keys to add in package.json / bin\r\n\r\ntla = (stub) =>\r\n\r\n\tif lMatches = stub.match(///^\r\n\t\t\t([a-z])(?:[a-z]*)\r\n\t\t\t\\-\r\n\t\t\t([a-z])(?:[a-z]*)\r\n\t\t\t\\-\r\n\t\t\t([a-z])(?:[a-z]*)\r\n\t\t\t$///)\r\n\t\t[_, a, b, c] = lMatches\r\n\t\tresult = a + b + c\r\n\t\treturn result\r\n\telse\r\n\t\treturn undef\r\n\r\n# ---------------------------------------------------------------------------\r\n# 4. For every *.js file in the 'src/bin' directory:\r\n#       - add shebang line if missing\r\n#       - save <stub>: <path> in hBin\r\n\r\nhOptions = {\r\n\tfileFilter: ({metadata, lLines}) =>\r\n\t\tassert notdefined(metadata), \"metadata in bin *.js file\"\r\n\t\tif (lLines.length == 0)\r\n\t\t\treturn false\r\n\t\treturn (lLines[0] != shebang)\r\n\teager: true    # --- h will have keys metadata and lLines\r\n\t}\r\n\r\nfor h from allFilesMatching('./src/bin/**/*.js', hOptions)\r\n\t{filePath, relPath, stub, lLines} = h\r\n\tLOG \"#{relPath} -> add shebang line\"\r\n\thFilesProcessed.js += 1\r\n\tcontents = shebang + \"\\n\" + toBlock(lLines)\r\n\tbarf contents, filePath\r\n\r\n\thBin[stub] = relPath\r\n\tshort_name = tla(stub)\r\n\tif defined(short_name)\r\n\t\thBin[short_name] = relPath\r\n\r\n# ---------------------------------------------------------------------------\r\n# 5. Add sub-keys to key 'bin' in package.json\r\n#    (create if not exists)\r\n\r\nif nonEmpty(hBin)\r\n\thJson = slurpPkgJSON()\r\n\tif ! hasKey(hJson, 'bin')\r\n\t\tLOG \"   - add key 'bin'\"\r\n\t\thJson.bin = {}\r\n\tfor key,value of hBin\r\n\t\tif (hJson.bin[key] != value)\r\n\t\t\tLOG \"   - add bin/#{key} = #{value}\"\r\n\t\t\thJson.bin[key] = value\r\n\tbarfPkgJSON hJson\r\n\r\nnCoffee = hFilesProcessed.coffee\r\nif (nCoffee > 0)\r\n\tconsole.log \"(#{nCoffee} coffee file#{add_s(nCoffee)} compiled)\"\r\n\r\nnPeggy = hFilesProcessed.peggy\r\nif (nPeggy > 0)\r\n\tconsole.log \"(#{nPeggy} peggy file#{add_s(nPeggy)} compiled)\"\r\n\r\nnJS = hFilesProcessed.js\r\nif (nJS > 0)\r\n\tconsole.log \"(#{nJS} js file#{add_s(nJS)} had shebang line added)\"\r\n"
  ]
}