{
  "version": 3,
  "file": "for-each-file.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\for-each-file.coffee"
  ],
  "names": [],
  "mappings": "AAAA;;AAAA,IAAA,MAAA,EAAA,KAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,EAAA,QAAA,EAAA,KAAA,EAAA,QAAA,EAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA;;AAIA,OAAA;;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,QAD7B;EACuC,GADvC;EAC4C,OAD5C;CAAA,MAAA;;AAGA,OAAA;EAAQ,MAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,YAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,UAAR;CAAA,MAAA;;AAEA,KAAA,GAAQ;;AACR,MAAA,GAAS,MAZT;;;AAgBA,UAAA,GAAa,CAAC,QAAD,CAAA,GAAA;AAEb,MAAA;EAAC,IAAG,KAAH;IACC,IAAG,OAAA,CAAQ,MAAR,CAAH;MACC,GAAA,GAAM,MAAM,CAAC,UAAP,CAAkB,QAAlB,EAA4B,QAA5B;MACN,GAAA,CAAI,CAAA,KAAA,CAAA,CAAQ,GAAR,CAAA,CAAJ,EAFD;KAAA,MAAA;MAIC,GAAA,CAAI,CAAA,MAAA,CAAA,CAAS,QAAT,CAAA,CAAJ,EAJD;KADD;GAAA,MAAA;IAOC,GAAA,GAAM,MAAM,CAAC,UAAP,CAAkB,QAAlB,EAA4B,QAA5B;IACN,OAAA,CAAQ,GAAR,EARD;;AAFY,EAhBb;;;;;AAiCA,QAAA,GAAW,YAAA,CAAa;EACvB,OAAA,EAAS;IACR,CAAA,EAAG,CAAC,CAAD,EAAG,MAAM,CAAC,SAAV,CADK;IAER,CAAA,EAAG,SAFK;IAGR,GAAA,EAAK,QAHG;IAIR,IAAA,EAAM,QAJE;IAKR,GAAA,EAAK,QALG;EAAA;AADc,CAAb;;AAWX,CAAA,CAAA;;EAAC,CAAA,EAAE,MAAH;EAAW,CAAA,EAAE,KAAb;EAAoB,GAApB;EAAyB,IAAzB;EAA+B,GAAA,EAAI;AAAnC,CAAA,GAA6C,QAA7C;;AAEA,GAAA,CAAI,uBAAJ;;AACA,IAAG,KAAH;EACC,GAAA,CAAI,cAAJ;EACA,GAAA,CAAI,UAAJ,EAAgB,QAAhB,EAFD;;;AAIA,IAAG,UAAA,CAAW,GAAX,CAAH;EACC,GAAA,GAAM,OAAO,CAAC,GAAR,CAAA,EADP;CAnDA;;;AAwDA,KAAA,wCAAA;;EACC,UAAA,CAAW,QAAX;AADD,CAxDA;;;AA6DA,IAAG,OAAA,CAAQ,IAAR,CAAH;EACC,QAAA,GAAW;IACV,OAAA,EAAS,IADC;IAEV,KAAA,EAAO;EAFG;AAKX;EAAA,KAAA,YAAA;IACC,UAAA,CAAW,KAAK,CAAC,QAAjB;EADD,CAND",
  "sourcesContent": [
    "`#!/usr/bin/env node\r\n`\r\n# for-each-file.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, nonEmpty, LOG, execCmd,\r\n\t} from '@jdeighan/base-utils'\r\nimport {assert} from '@jdeighan/base-utils/exceptions'\r\nimport {parseCmdArgs} from '@jdeighan/base-utils/parse-cmd-args'\r\nimport {allFilesIn} from '@jdeighan/base-utils/fs'\r\n\r\ndebug = false\r\ncmdStr = undef\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nhandleFile = (filePath) =>\r\n\r\n\tif debug\r\n\t\tif defined(cmdStr)\r\n\t\t\tcmd = cmdStr.replaceAll('<file>', filePath)\r\n\t\t\tLOG \"CMD: #{cmd}\"\r\n\t\telse\r\n\t\t\tLOG \"FILE: #{filePath}\"\r\n\telse\r\n\t\tcmd = cmdStr.replaceAll('<file>', filePath)\r\n\t\texecCmd cmd\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- Usage:\r\n#    for-each-file *.coffee -cmd=\"coffee -cm <file>\"\r\n\r\nhCmdArgs = parseCmdArgs({\r\n\thExpect: {\r\n\t\t_: [0,Number.MAX_VALUE]\r\n\t\td: 'boolean'     # debug mode - don't exec, just print\r\n\t\tdir: 'string'    # dir to search in, def = current dir\r\n\t\tglob: 'string'\r\n\t\tcmd: 'string'    # command to run (replace '<file>')\r\n\t\t}\r\n\t})\r\n\r\n# --- NOTE: debug and cmdStr are global vars\r\n{_:lFiles, d:debug, dir, glob, cmd:cmdStr} = hCmdArgs\r\n\r\nLOG \"Running for-each-file\"\r\nif debug\r\n\tLOG \"DEBUGGING ON\"\r\n\tLOG 'hCmdArgs', hCmdArgs\r\n\r\nif notdefined(dir)\r\n\tdir = process.cwd()\r\n\r\n# --- First, cycle through all non-options files\r\n\r\nfor filePath in lFiles\r\n\thandleFile(filePath)\r\n\r\n# --- Next, use glob if defined\r\n\r\nif defined(glob)\r\n\thOptions = {\r\n\t\tpattern: glob\r\n\t\teager: false\r\n\t\t}\r\n\r\n\tfor hFile from allFilesIn(dir, hOptions)\r\n\t\thandleFile(hFile.filePath)\r\n"
  ]
}