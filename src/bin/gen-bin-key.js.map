{
  "version": 3,
  "file": "gen-bin-key.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\gen-bin-key.coffee"
  ],
  "names": [],
  "mappings": "AAAA;;AAAA,IAAA,GAAA,EAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,QAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,WAAA,EAAA,GAAA,EAAA,IAAA,EAAA;;AAIA,OAAA;;EAAQ,KAAR;EAAe,OAAf;EAAwB,QAAxB;CAAA,MAAA;;AACA,OAAA;EAAQ,MAAR;EAAgB,KAAhB;CAAA,MAAA;;AAEA,OAAA;;EACC,MADD;EACS,KADT;EACgB,MADhB;EACwB,MADxB;EACgC,OADhC;EAEC,KAFD;EAEQ,UAFR;EAEoB,SAFpB;EAE+B,QAF/B;CAAA,MAAA;;AAKA,GAAA,GAAM,OAAO,CAAC,GAAR,CAAA;;AACN,WAAA,GAAc,MAAA,CAAO,GAAP,EAAY,cAAZ;;AACd,MAAA,GAAS,MAAA,CAAO,GAAP,EAAY,KAAZ,EAAmB,KAAnB;;AAET,GAAA,GAAM,CAAC,GAAD,CAAA,GAAA;SAAS,OAAO,CAAC,GAAR,CAAY,GAAZ;AAAT,EAhBN;;;;;AAsBA,MAAA,CAAO,MAAA,CAAO,WAAP,CAAP,EAA4B,yBAA5B;;AACA,GAAA,CAAI,qBAAJ;;AAIA,IAAG,CAAE,KAAA,CAAM,MAAN,CAAL;EACC,OAAO,CAAC,GAAR,CAAY,CAAA,GAAA,CAAA,CAAM,MAAN,CAAA,aAAA,CAAZ;EACA,OAAO,CAAC,IAAR,CAAA,EAFD;;;AAGA,GAAA,CAAI,CAAA,IAAA,CAAA,CAAO,MAAP,CAAA,OAAA,CAAJ,EA9BA;;;;;;;AAsCA,IAAA,GAAO,CAAA;;AACP;;;AAAA,KAAA,YAAA;EACC,CAAA,CAAC,QAAD,EAAW,QAAX,EAAqB,IAArB,CAAA,GAA6B,KAA7B;EACA,UAAA,GAAa,OAAA,CAAQ,QAAR,EAAkB,KAAlB;EACb,MAAA,GAAS,OAAA,CAAQ,QAAR,EAAkB,KAAlB;EACT,MAAA,CAAO,MAAA,CAAO,MAAP,CAAP,EAAuB,CAAA,aAAA,CAAA,CAAgB,UAAhB,CAAA,CAAvB;EACA,MAAA,GAAS,KAAA,CAAM,MAAN;EACT,MAAA,CAAO,MAAM,CAAC,UAAP,CAAkB,qBAAlB,CAAP,EAAiD,iBAAjD;EAEA,GAAA,CAAI,CAAA,MAAA,CAAA,CAAS,QAAT,CAAA,CAAJ;EAEA,IAAI,CAAC,IAAD,CAAJ,GAAa,CAAA,UAAA,CAAA,CAAa,UAAb,CAAA;EACb,GAAA,CAAI,IAAA,CAAA,CAAM,IAAN,CAAA,IAAA,CAAA,CAAiB,IAAI,CAAC,IAAD,CAArB,CAAA,CAAJ;AAXD,CAvCA;;;AAqDA,IAAG,OAAA,CAAQ,IAAR,CAAH;EACC,GAAA,CAAI,oBAAJ,EADD;CAAA,MAAA;EAGC,GAAA,CAAI,+BAAJ;EACA,KAAA,GAAQ,SAAA,CAAU,WAAV;EACR,IAAG,CAAE,KAAK,CAAC,cAAN,CAAqB,KAArB,CAAL;IACC,KAAK,CAAC,GAAN,GAAY,CAAA,EADb;;EAEA,KAAA,WAAA;;IACC,KAAK,CAAC,GAAG,CAAC,GAAD,CAAT,GAAiB;EADlB;EAEA,QAAA,CAAS,KAAT,EAAgB,WAAhB,EATD;;;AAWA,GAAA,CAAI,MAAJ",
  "sourcesContent": [
    "`#!/usr/bin/env node\r\n`\r\n# gen-bin-key.coffee\r\n\r\nimport {undef, isEmpty, nonEmpty} from '@jdeighan/base-utils'\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\n# import {LOG} from '@jdeighan/base-utils/log'\r\nimport {\r\n\tisFile, isDir, mkpath, rmFile, withExt,\r\n\tslurp, allFilesIn, slurpJSON, barfJSON,\r\n\t} from '@jdeighan/base-utils/fs'\r\n\r\ndir = process.cwd()\r\npkgJsonPath = mkpath(dir, 'package.json')\r\nbinDir = mkpath(dir, 'src', 'bin')\r\n\r\nLOG = (str) => console.log str\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n# 1. Error if current directory has no `package.json` file\r\n\r\nassert isFile(pkgJsonPath), \"Not in package root dir\"\r\nLOG \"package.json exists\"\r\n\r\n# 2. If no ./src/bin dir, exit\r\n\r\nif ! isDir(binDir)\r\n\tconsole.log \"No #{binDir} dir, exiting\"\r\n\tprocess.exit()\r\nLOG \"dir #{binDir} exists\"\r\n\r\n# 3. For every *.coffee file in the 'bin' directory:\r\n#       - error if no corresponding JS file\r\n#       - save stub and filename in hBin\r\n#    For every *.js file in the 'bin' directory:\r\n#       - error if JS file doesn't start with a shebang line\r\n\r\nhBin = {}\r\nfor hFile from allFilesIn('*.coffee', {cwd: binDir})\r\n\t{fileName, filePath, stub} = hFile\r\n\tjsFileName = withExt(fileName, '.js')\r\n\tjsPath = withExt(filePath, '.js')\r\n\tassert isFile(jsPath), \"Missing file #{jsFileName}\"\r\n\tjsCode = slurp jsPath\r\n\tassert jsCode.startsWith(\"#!/usr/bin/env node\"), \"Missing shebang\"\r\n\r\n\tLOG \"FOUND #{fileName}\"\r\n\r\n\thBin[stub] = \"./src/bin/#{jsFileName}\"\r\n\tLOG \"   #{stub} => #{hBin[stub]}\"\r\n\r\n# 4. Add sub-keys to key 'bin' in package.json (create if not exists)\r\nif isEmpty(hBin)\r\n\tLOG \"No bin keys to set\"\r\nelse\r\n\tLOG \"SET 'bin' key in package.json\"\r\n\thJson = slurpJSON pkgJsonPath\r\n\tif ! hJson.hasOwnProperty('bin')\r\n\t\thJson.bin = {}\r\n\tfor key,value of hBin\r\n\t\thJson.bin[key] = value\r\n\tbarfJSON hJson, pkgJsonPath\r\n\r\nLOG \"DONE\"\r\n"
  ]
}