{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "src/bin/analyzeObj.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# analyzeObj.coffee\n\nimport {\n\tundef, defined, notdefined, pass, keys,\n\tanalyzeObj, isString, isBoolean, truncateStr,\n\t} from '@jdeighan/base-utils'\nimport {\n\tTextTable,\n\t} from '@jdeighan/base-utils/text-table'\n\n# ---------------------------------------------------------------------------\n\n# --- analyzeObj always returns an object with\n#     the same set of keys\n\nhObj = analyzeObj(undef)\nlKeys = keys(hObj)\nnumKeys = lKeys.length\nconsole.log \"numKeys = #{numKeys}\"\n\ntt = new TextTable(\"l\" + \" l\".repeat(numKeys))\ntt.fullsep '-'\ntt.labels ['value', lKeys...]\ntt.sep '-'\n\nflag = (bool) => if bool then 'YES' else 'NO'\n\n# ---------------------------------------------------------------------------\n\naddObj = (obj, label) =>\n\n\th = analyzeObj obj\n\tlValues = [ label ]\n\tfor key in lKeys\n\t\tvalue = h[key]\n\t\tif notdefined(value)\n\t\t\tlValues.push ''\n\t\telse if isString(value)\n\t\t\tlValues.push value\n\t\telse if isBoolean(value)\n\t\t\tlValues.push flag(value)\n\t\telse\n\t\t\tthrow new Error(\"Bad object\")\n\ttt.data(lValues)\n\treturn\n\n# ---------------------------------------------------------------------------\n\nclass NewClass\n\tconstructor: (@name = 'bob') ->\n\t\t@doIt = pass()\n\tmeth: (x) ->\n\t\treturn 2 * x\n\nfunc = () ->\n\treturn 42\n\narrow = () =>\n\treturn 42\n\ngen = () ->\n\tyield 1\n\tyield 2\n\tyield 3\n\treturn\n\naddObj undef, 'undef'\naddObj null, 'null'\n\naddObj true, 'true'\naddObj false, 'false'\n\naddObj 42, '42'\naddObj 3.14, '3.14'\naddObj BigInt(42), 'BigInt(42)'\n\naddObj 'abc', \"'abc'\"\n\naddObj NewClass, 'NewClass'\naddObj (() -> return 3), \"() -> return 3\"\naddObj `function func2(x) {return 42;}`, \"function func2(x) {return 42;}\"\naddObj (() => return 3), \"() => return 3\"\naddObj func, \"func\"\naddObj arrow, \"arrow\"\naddObj gen, 'gen'\n\naddObj {}, '{}'\naddObj [], '[]'\naddObj {a:1}, '{a:1}'\naddObj [1,2], '[1,2]'\naddObj new NewClass(), 'new NewClass()'\naddObj new Number(42), 'new Number(42)'\naddObj new String('abc'), \"new String('abc')\"\naddObj /^ab$/, \"/^ab$/\"\naddObj new Promise((x) => 42), \"new Promise((x) => 42)\"\n\naddObj gen(), 'gen()'\n\nconsole.log tt.asString()"
  ]
}