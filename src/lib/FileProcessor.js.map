{
  "version": 3,
  "file": "FileProcessor.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\FileProcessor.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# FileProcessor.coffee\r\n\r\nimport {globSync as glob} from 'glob'\r\n\r\nimport {\r\n\tundef, defined, notdefined, getOptions, add_s, isEmpty,\r\n\tisString, isHash, toJSON, jsType, OL,\r\n\thasKey, hasAnyKey, addNewKey, toBlock, toArray,\r\n\tsortedArrayOfHashes,\r\n\t} from '@jdeighan/base-utils'\r\nimport {toTAML} from '@jdeighan/base-utils/taml'\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\nimport {\r\n\tmkpath, mkDir, pathType, parsePath, subPath,\r\n\tallLinesIn, slurp, barf, isFile, allFilesMatching,\r\n\t} from '@jdeighan/base-utils/fs'\r\nimport {\r\n\tdbgEnter, dbgReturn, dbg,\r\n\t} from '@jdeighan/base-utils/debug'\r\nimport {indented} from '@jdeighan/base-utils/indent'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class FileProcessor\r\n\r\n\tconstructor: (@pattern=undef, hOptions={}) ->\r\n\t\t# --- pattern is a glob pattern\r\n\t\t#     if pattern is undef, use process.cwd() + \"/*\"\r\n\t\t# --- Valid options\r\n\t\t#        allowOverwrite - allow overwrite of original files\r\n\t\t#        hGlobOptions - options to pass to glob()\r\n\t\t#        eager - include content of files in hFile\r\n\t\t# --- Valid glob options:\r\n\t\t#        ignore - glob pattern for files to ignore\r\n\t\t#        dot - include dot files/directories (default: false)\r\n\t\t#        cwd - change working directory\r\n\r\n\t\tdbgEnter 'FileProcessor', @pattern, hOptions\r\n\t\t@hOptions = getOptions hOptions, {\r\n\t\t\tallowOverwrite: false\r\n\t\t\teager: false\r\n\t\t\thGlobOptions: {}\r\n\t\t\t}\r\n\r\n\t\t@lUserData = []  # --- filled in by readAll()\r\n\t\tdbgReturn 'FileProcessor'\r\n\r\n\t# ..........................................................\r\n\r\n\tgetUserData: () ->\r\n\r\n\t\treturn @lUserData\r\n\r\n\t# ..........................................................\r\n\r\n\tgetSortedUserData: () ->\r\n\r\n\t\treturn sortedArrayOfHashes(@lUserData, 'filePath')\r\n\r\n\t# ..........................................................\r\n\r\n\tdumpdata: (h) ->\r\n\r\n\t\tdbgEnter 'dumpdata', h\r\n\t\ttaml = toTAML(h, '!useTabs !useDashes indent=1')\r\n\t\tconsole.log taml\r\n\t\tdbgReturn 'dumpdata'\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tdumpUserData: (format='nice') ->\r\n\t\t# --- formats: 'nice', 'json', 'taml'\r\n\r\n\t\tdbgEnter 'dumpUserData', format\r\n\t\tswitch format.toLowerCase()\r\n\t\t\twhen 'nice'\r\n\t\t\t\tfor h in @lUserData\r\n\t\t\t\t\t{fileName} = parsePath(h.filePath)\r\n\t\t\t\t\tdbg \"dump info for file '#{fileName}'\"\r\n\t\t\t\t\tstr = '-'.repeat(10)\r\n\t\t\t\t\tconsole.log \"#{str} #{fileName} #{str}\"\r\n\t\t\t\t\t@dumpdata(h)\r\n\t\t\twhen 'json'\r\n\t\t\t\tconsole.log toJSON(@lUserData, '!useTabs')\r\n\t\t\twhen 'taml'\r\n\t\t\t\tconsole.log toTAML(@lUserData, '!useTabs')\r\n\t\t\telse\r\n\t\t\t\tcroak \"Bad format: #{format}\"\r\n\t\tdbgReturn 'dumpUserData'\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\treadAll: () ->\r\n\r\n\t\tdbgEnter 'readAll'\r\n\t\tnumFiles = 0\r\n\r\n\t\thOptions = {\r\n\t\t\thGlobOptions: @hOptions.hGlobOptions\r\n\t\t\teager: @hOptions.eager\r\n\t\t\t}\r\n\t\tfor hFile from allFilesMatching(@pattern, hOptions)\r\n\t\t\t{filePath} = hFile\r\n\t\t\tif @filterFile hFile\r\n\t\t\t\tdbg \"[#{numFiles}] #{filePath} - Handle\"\r\n\t\t\t\th = @handleFile @transformFile(hFile)\r\n\t\t\t\tif defined(h)\r\n\t\t\t\t\tassert isHash(h), \"handleFile() returned non-hash\"\r\n\t\t\t\t\taddNewKey h, 'filePath', filePath\r\n\t\t\t\t\t@lUserData.push h\r\n\t\t\t\tnumFiles += 1\r\n\t\t\telse\r\n\t\t\t\tdbg \"[#{numFiles}] #{hFile.fileName} - Skip\"\r\n\r\n\t\tdbg \"#{numFiles} file#{add_s(numFiles)} processed\"\r\n\t\tdbgReturn 'readAll', @lUserData\r\n\t\treturn @lUserData\r\n\r\n\t# ..........................................................\r\n\r\n\ttransformFile: (hFile) ->\r\n\r\n\t\treturn hFile\r\n\r\n\t# ..........................................................\r\n\r\n\tfilterFile: (hFile) ->\r\n\r\n\t\tdbgEnter 'filterFile', hFile\r\n\t\tdbgReturn 'filterFile'\r\n\t\treturn true    # by default, handle all files in dir\r\n\r\n\t# ..........................................................\r\n\r\n\thandleFile: (hFile) ->\r\n\t\t# --- does nothing, returns nothing\r\n\r\n\t\tdbgEnter 'handleFile', hFile\r\n\t\tdbgReturn 'handleFile'\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\twriteAll: () ->\r\n\r\n\t\t# --- Cycle through @lUserData, rewriting files as needed\r\n\t\t#     Items in @lUserData are hashes with key 'filePath'\r\n\t\t#        and whatever was returned from @handleFile()\r\n\r\n\t\tfor hUserData in @lUserData\r\n\t\t\tnewpath = @writeFileTo hUserData\r\n\t\t\tif defined(newpath)\r\n\t\t\t\t@writeFile newpath, hUserData\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\t# SHOULD OVERRIDE if you want to write files anywhere\r\n\t#    other than the default 'temp' subfolder\r\n\t#\r\n\t# --- return undef to not write this file\r\n\r\n\twriteFileTo: (hUserData) ->\r\n\r\n\t\t# --- by default, write to a parallel directory\r\n\t\treturn subPath hUserData.filePath, 'temp'\r\n\r\n\t# ..........................................................\r\n\t# --- SHOULD OVERRIDE if you intend to write files\r\n\r\n\twriteFile: (path, hUserData) ->\r\n\t\t# --- path may be a new path\r\n\r\n\t\treturn    # by default, does nothing\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class LineProcessor extends FileProcessor\r\n\r\n\tdumpdata: (hUserData) ->\r\n\r\n\t\t{lineNum, lRecipe} = hUserData\r\n\t\tconsole.log \"LINE #{lineNum}:\"\r\n\t\tconsole.log toTAML(lRecipe)\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\ttransformLine: (line) ->\r\n\r\n\t\treturn line\r\n\r\n\t# ..........................................................\r\n\r\n\thandleFile: (hFile) ->\r\n\r\n\t\tdbgEnter 'handleFile', hFile\r\n\t\t{filePath} = hFile\r\n\t\tassert isString(filePath), \"not a string\"\r\n\t\tlRecipe = []   # --- array of hashes\r\n\t\tlineNum = 1\r\n\t\tfileChanged = false\r\n\r\n\t\taddToRecipe = (item, orgLine) =>\r\n\t\t\tswitch jsType(item)[0]\r\n\t\t\t\twhen 'string'\r\n\t\t\t\t\tlRecipe.push item\r\n\t\t\t\t\tif (item == orgLine)\r\n\t\t\t\t\t\tdbg \"RECIPE: '#{item}'\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tfileChanged = true\r\n\t\t\t\t\t\tdbg \"RECIPE: '#{item}' - changed\"\r\n\t\t\t\twhen 'hash'\r\n\t\t\t\t\tfileChanged = true\r\n\t\t\t\t\taddNewKey item, 'lineNum', lineNum\r\n\t\t\t\t\tdbg \"RECIPE:\", item\r\n\t\t\t\t\tlRecipe.push item\r\n\t\t\t\twhen 'array'\r\n\t\t\t\t\tfileChanged = true\r\n\t\t\t\t\tfor subitem in item\r\n\t\t\t\t\t\taddToRecipe subitem, orgLine\r\n\t\t\t\telse\r\n\t\t\t\t\tassert notdefined(item), \"bad return from handleLine()\"\r\n\t\t\t\t\tfileChanged = true\r\n\t\t\t\t\tdbg \"RECIPE: line '#{line}' removed\"\r\n\r\n\r\n\t\tfor line from allLinesIn(filePath)\r\n\t\t\tdbg \"LINE: '#{line}'\"\r\n\r\n\t\t\t# --- handleLine should return:\r\n\t\t\t#     - undef to ignore line\r\n\t\t\t#     - string to write a line literally\r\n\t\t\t#     - a hash which cannot contain key 'lineNum'\r\n\r\n\t\t\titem = @handleLine @transformLine(line), lineNum, filePath\r\n\t\t\taddToRecipe item, line\r\n\t\t\tlineNum += 1\r\n\t\tif fileChanged\r\n\t\t\tresult = {lRecipe}\r\n\t\telse\r\n\t\t\tresult = {}\r\n\t\tdbg \"#{lineNum-1} lines processed\"\r\n\t\tdbgReturn 'handleFile', result\r\n\t\treturn result\r\n\r\n\t# ..........................................................\r\n\t# --- SHOULD OVERRIDE, to save data for a given line\r\n\r\n\thandleLine: (line, lineNum, filePath) ->\r\n\r\n\t\treturn   # by default, returns nothing\r\n\r\n\t# ..........................................................\r\n\r\n\twriteFile: (newPath, hUserData) ->\r\n\r\n\t\tdbgEnter 'writeFile', newPath, hUserData\r\n\t\t{lRecipe, filePath} = hUserData\r\n\r\n\t\tif ! @hOptions.allowOverwrite\r\n\t\t\tassert (newPath != filePath), \"Attempt to write org file\"\r\n\r\n\t\tif defined(lRecipe)\r\n\t\t\tlOutput = []\r\n\t\t\tfor item in lRecipe\r\n\t\t\t\tif isString(item)\r\n\t\t\t\t\tlOutput.push item\r\n\t\t\t\telse\r\n\t\t\t\t\tassert isHash(item), \"Bad item in recipe: #{OL(item)}\"\r\n\t\t\t\t\ttext = @writeLine item\r\n\t\t\t\t\tif defined(text)\r\n\t\t\t\t\t\tassert isString(text), \"text not a string\"\r\n\t\t\t\t\t\tlOutput.push text\r\n\r\n\t\t\t# --- Now write out the text in lOutput\r\n\t\t\tif (lOutput.length > 0)\r\n\t\t\t\tbarf toBlock(lOutput), newPath\r\n\t\tdbgReturn 'writeFile'\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\t# --- SHOULD OVERRIDE, to write data for a given line\r\n\r\n\twriteLine: (h) ->\r\n\r\n\t\treturn    # --- by default, returns nothing\r\n"
  ]
}