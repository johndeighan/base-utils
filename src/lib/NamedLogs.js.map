{
  "version": 3,
  "file": "NamedLogs.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\NamedLogs.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# NamedLogs.coffee\r\n\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\nimport {\r\n\tundef, defined, notdefined, OL,\r\n\tisString, isNonEmptyString, isHash, isFunction,\r\n\t} from '@jdeighan/base-utils'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class NamedLogs\r\n\r\n\tconstructor: (@hDefaultKeys={}) ->\r\n\r\n\t\t# --- <name> must be undef or a non-empty string\r\n\t\t@hLogs = {}   # --- { <name>: { lLogs: [<str>, ...], ... }}\r\n\r\n\t# ..........................................................\r\n\r\n\tdump: () ->\r\n\r\n\t\tconsole.log \"hDefaultKeys:\"\r\n\t\tconsole.log JSON.stringify(@hDefaultKeys, null, 3)\r\n\t\tconsole.log \"hLogs:\"\r\n\t\tconsole.log JSON.stringify(@hLogs, null, 3)\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tlog: (name, str) ->\r\n\r\n\t\th = @getHash(name)\r\n\t\th.lLogs.push str\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tgetLogs: (name, func=undef) ->\r\n\r\n\t\th = @getHash(name)\r\n\t\tif defined(func)\r\n\t\t\tassert isFunction(func), \"filter not a function\"\r\n\t\t\treturn h.lLogs.filter(func).join(\"\\n\")\r\n\t\telse\r\n\t\t\treturn h.lLogs.join(\"\\n\")\r\n\r\n\t# ..........................................................\r\n\r\n\tgetAllLogs: (func=undef) ->\r\n\r\n\t\tlAllLogs = []\r\n\t\tfor own name,h of @hLogs\r\n\t\t\tlAllLogs.push @getLogs(name)\r\n\t\tif defined(func)\r\n\t\t\tassert isFunction(func), \"filter not a function\"\r\n\t\t\treturn lAllLogs.filter(func).join(\"\\n\")\r\n\t\telse\r\n\t\t\treturn lAllLogs.join(\"\\n\")\r\n\r\n\t# ..........................................................\r\n\r\n\tclear: (name) ->\r\n\r\n\t\th = @getHash(name)\r\n\t\th.lLogs = []\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tclearAllLogs: () ->\r\n\r\n\t\tfor own name,h of @hLogs\r\n\t\t\th.lLogs = []\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tsetKey: (name, key, value) ->\r\n\r\n\t\th = @getHash(name)\r\n\t\th[key] = value\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tgetKey: (name, key) ->\r\n\r\n\t\th = @getHash(name)\r\n\t\tassert isHash(h), \"in getKey(), h = #{OL(h)}\"\r\n\t\tif h.hasOwnProperty(key)\r\n\t\t\tresult = h[key]\r\n\t\t\treturn result\r\n\t\telse if @hDefaultKeys.hasOwnProperty(key)\r\n\t\t\tresult = @hDefaultKeys[key]\r\n\t\t\treturn result\r\n\t\telse\r\n\t\t\treturn undef\r\n\r\n\t# ..........................................................\r\n\r\n\tgetHash: (name) ->\r\n\r\n\t\tassert (name != 'undef'), \"cannot use key 'undef'\"\r\n\t\tif notdefined(name)\r\n\t\t\tname = 'undef'\r\n\r\n\t\tassert isNonEmptyString(name), \"name = '#{OL(name)}'\"\r\n\t\tassert (name != 'lLogs'), \"cannot use key 'lLogs'\"\r\n\t\tif ! @hLogs.hasOwnProperty(name)\r\n\t\t\t@hLogs[name] = {\r\n\t\t\t\tlLogs: []\r\n\t\t\t\t}\r\n\t\treturn @hLogs[name]\r\n"
  ]
}