{
  "version": 3,
  "file": "peggy.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\peggy.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# peggy.coffee\r\n\r\nimport peggy from 'peggy'\r\n{generate} = peggy\r\n\r\nimport {\r\n\tundef, defined, notdefined, pass, OL, toBlock, getOptions,\r\n\tisString, isEmpty, isFunction,\r\n\t} from '@jdeighan/base-utils'\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\nimport {\r\n\tisFile, slurp, barf, withExt, readTextFile,\r\n\t} from '@jdeighan/base-utils/fs'\r\n\r\nhPeggyOptions = {\r\n\tallowedStartRules: ['*']\r\n\tformat: 'es'\r\n\toutput: 'source-and-map'\r\n\ttrace: true\r\n\t}\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport peggify = (peggyCode, source) =>\r\n\r\n\tassert isFile(source), \"Not a file: #{OL(source)}\"\r\n\ttry\r\n\t\thPeggyOptions.grammarSource = source\r\n\t\tsrcNode = generate(peggyCode, hPeggyOptions)\r\n\t\th = srcNode.toStringWithSourceMap()\r\n\t\treturn [h.code, h.map.toString()]\r\n\tcatch err\r\n\t\tconsole.log \"ERROR: #{err.message}\"\r\n\t\treturn [undef, undef]\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport peggifyFile = (filePath) =>\r\n\r\n\t{metadata, lLines} = readTextFile(filePath)\r\n\t[jsCode, sourceMap] = peggify toBlock(lLines), filePath\r\n\tbarf jsCode, withExt(filePath, '.js')\r\n\tbarf sourceMap, withExt(filePath, '.js.map')\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n# --- Tracer object does not log\r\n\r\nclass Tracer\r\n\r\n\ttrace: ({type, rule, location}) ->\r\n\t\tpass()\r\n\r\nclass MyTracer extends Tracer\r\n\r\n\tconstructor: () ->\r\n\t\tsuper()\r\n\t\t@level = 0\r\n\r\n\tprefix: () ->\r\n\t\treturn \"|  \".repeat(@level)\r\n\r\n\ttrace: ({type, rule, location, match}) ->\r\n\t\tswitch type\r\n\t\t\twhen 'rule.enter'\r\n\t\t\t\tconsole.log \"#{@prefix()}? #{rule}\"\r\n\t\t\t\t@level += 1\r\n\t\t\twhen 'rule.fail'\r\n\t\t\t\t@level -= 1;\r\n\t\t\t\tconsole.log \"#{@prefix()}NO\"\r\n\t\t\twhen 'rule.match'\r\n\t\t\t\t@level -= 1\r\n\t\t\t\tif defined(match)\r\n\t\t\t\t\tconsole.log \"#{@prefix()}YES - #{OL(match)}\"\r\n\t\t\t\telse\r\n\t\t\t\t\tconsole.log \"#{@prefix()}YES\"\r\n\t\t\telse\r\n\t\t\t\tconsole.log \"UNKNOWN type: #{type}\"\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport pparse = (parseFunc, inputStr, hOptions={}) =>\r\n\r\n\t{start, tracer} = getOptions hOptions, {\r\n\t\tstart: undef     #     name of start rule\r\n\t\ttracer: 'none'   # --- can be 'none'/'peggy'/'default'/a function\r\n\t\t}\r\n\r\n\thParseOptions = {}\r\n\tif defined(start)\r\n\t\thParseOptions.startRule = start\r\n\tswitch tracer\r\n\t\twhen 'none'\r\n\t\t\thParseOptions.tracer = new Tracer()\r\n\t\twhen 'peggy'\r\n\t\t\tpass()\r\n\t\twhen 'default'\r\n\t\t\thParseOptions.tracer = new MyTracer()\r\n\t\telse\r\n\t\t\tassert isFunction(tracer), \"tracer not a function\"\r\n\t\t\thParseOptions.tracer = tracer\r\n\r\n\treturn parseFunc(inputStr, hParseOptions)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n"
  ]
}