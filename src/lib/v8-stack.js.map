{
  "version": 3,
  "file": "v8-stack.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\v8-stack.coffee"
  ],
  "names": [],
  "mappings": "AAAiB;AAAA,IAAA;;AAEjB,OAAO,OAAP,MAAA;;AACA,OAAO,EAAP,MAAA;;AAEA,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,OAD7B;EACsC,QADtC;EAEC,EAFD;EAEK,YAFL;EAEmB,cAFnB;EAEmC,UAFnC;CAAA,MAAA;;AAIA,OAAA;EAAQ,KAAR;CAAA,MAAA;;AACA,OAAA;EACC,OADD;EACU,UADV;EACsB,iBADtB;EACyC,kBADzC;CAAA,MAAA;;AAIA,OAAA;EAAQ,UAAR;EAAoB,iBAApB;EAAuC,kBAAvC;;;AAEA,OAAA,IAAO,iBAAA,GAAoB;;AAC3B,GAAA,GAAM,KAAA,CAAM,MAAO,CAAA,IAAI,CAAC,GAAlB,EAjBW;;;;AAqBjB,OAAA,IAAO,YAAA,GAAe,CAAC,OAAK,IAAN,CAAA,GAAA;EAErB,iBAAA,GAAoB;AAFC,EArBL;;;AA4BjB,OAAA,IAAO,MAAA,GAAS,CAAC,QAAD,CAAA,GAAA;AAEhB,MAAA,GAAA,EAAA;AAAC;IACC,MAAA,GAAS,EAAE,CAAC,SAAH,CAAa,QAAb,CAAsB,CAAC,MAAvB,CAAA;AACT,WAAO,OAFR;GAGA,aAAA;IAAM;AACL,WAAO,MADR;;AALe,EA5BC;;;AAsCjB,OAAA,IAAO,aAAA,GAAgB,KAAA,CAAC,WAAS,CAAA,CAAV,CAAA,GAAA;AAEvB,MAAA,KAAA,EAAA,MAAA,EAAA;EAAC,MAAA,GAAS,CAAA,MAAM,UAAA,CAAW,QAAX,CAAN;EACT,MAAA;;AAAS;IAAA,KAAA,wCAAA;;mBACR,OAAA,CAAQ,KAAR;IADQ,CAAA;;;AAET,SAAO,MAAM,CAAC,IAAP,CAAY,IAAZ;AALe",
  "sourcesContent": [
    "# v8-stack.coffee\r\n\r\nimport pathLib from 'node:path'\r\nimport fs from 'fs'\r\n\r\nimport {\r\n\tundef, defined, notdefined, isEmpty, nonEmpty,\r\n\tOL, isIdentifier, isFunctionName, getOptions,\r\n\t} from '@jdeighan/base-utils'\r\nimport {mydir} from '@jdeighan/base-utils/ll-fs'\r\nimport {\r\n\tnodeStr, getV8Stack, getMyDirectCaller, getMyOutsideCaller,\r\n\t} from '@jdeighan/base-utils/ll-v8-stack'\r\n\r\nexport {getV8Stack, getMyDirectCaller, getMyOutsideCaller}\r\n\r\nexport internalDebugging = false\r\ndir = mydir(import.meta.url)    # directory this file is in\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport debugV8Stack = (flag=true) =>\r\n\r\n\tinternalDebugging = flag\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport isFile = (filePath) =>\r\n\r\n\ttry\r\n\t\tresult = fs.lstatSync(filePath).isFile()\r\n\t\treturn result\r\n\tcatch err\r\n\t\treturn false\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport getV8StackStr = (hOptions={}) =>\r\n\r\n\tlStack = await getV8Stack(hOptions)\r\n\tlParts = for hNode in lStack\r\n\t\tnodeStr(hNode)\r\n\treturn lParts.join(\"\\n\")\r\n"
  ]
}