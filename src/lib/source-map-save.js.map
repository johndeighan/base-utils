{
  "version": 3,
  "file": "source-map-save.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\source-map-save.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# source-map-save.coffee\r\n\r\nimport deasync from 'deasync'\r\nimport {readFileSync, existsSync} from 'node:fs'\r\nimport {SourceMapConsumer} from 'source-map'\r\n\r\nimport {\r\n\tundef, pass, defined, notdefined, alldefined,\r\n\tisEmpty, nonEmpty, deepCopy,\r\n\t} from '@jdeighan/base-utils/ll-utils'\r\nimport {isInteger} from '@jdeighan/base-utils'\r\nimport {mkpath} from '@jdeighan/base-utils/ll-fs'\r\n\r\n# --- cache to hold previously fetched file contents\r\nhSourceMaps = {}    # { filepath => rawMap, ... }\r\n\r\n# ---------------------------------------------------------------------------\r\n# This lib uses mozilla's source-map library\r\n# ---------------------------------------------------------------------------\r\n\r\nexport getRawMap = (mapFilePath) =>\r\n\r\n\tif hSourceMaps.hasOwnProperty(mapFilePath)\r\n\t\treturn hSourceMaps[mapFilePath]\r\n\telse\r\n\t\trawMap = readFileSync mapFilePath, 'utf8'\r\n\t\thSourceMaps[mapFilePath] = rawMap\r\n\t\treturn rawMap\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- returns {source, line, column, name}\r\n\r\nexport mapPos = (rawMap, hPos) ->\r\n\t# --- hPos should be {line, column}\r\n\r\n\thResult = undef\r\n\r\n\tpromise = SourceMapConsumer.with rawMap, null, (consumer) =>\r\n\t\thResult = consumer.originalPositionFor(hPos)\r\n\t\tconsole.log \"GOT RESULT\"\r\n\t\tconsole.log hResult\r\n\r\n\tdeasync.loopWhile () -> return notdefined(hResult)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport mapSourcePos = (hFileInfo, line, column, debug=false) =>\r\n\t# --- Currently only maps if hFileInfo.ext = '.js'\r\n\t#\r\n\t#     hFileInfo must have keys:\r\n\t#        EITHER:\r\n\t#           dir, stub, ext\r\n\t#           dir, fileName\r\n\t#           filePath\r\n\r\n\t# --- Can map only if:\r\n\t#        1. ext is .js\r\n\t#        2. <stub>.coffee and <stub>.js.map exist in dir\r\n\t#\r\n\t#     returns {source, line, column, name}\r\n\r\n\tif ! isInteger(line, {min: 0})\r\n\t\tif debug\r\n\t\t\tconsole.log \"mapSourcePos: invalid line #{line}\"\r\n\t\treturn undef\r\n\r\n\tif ! isInteger(column, {min: 0})\r\n\t\tif debug\r\n\t\t\tconsole.log \"mapSourcePos: invalid column #{column}\"\r\n\t\treturn undef\r\n\r\n\t{dir, stub, ext, fileName, filePath} = hFileInfo\r\n\r\n\t# --- Ensure that dir, stub, ext are defined\r\n\tif ! alldefined(dir, stub, ext)\r\n\t\t# --- Make sure filePath is defined\r\n\t\tif notdefined(filePath) && alldefined(dir, fileName)\r\n\t\t\tfilePath = \"#{dir}/#{fileName}\"\r\n\t\tif notdefined(filePath)\r\n\t\t\tif debug\r\n\t\t\t\tconsole.log \"CANNOT MAP: Not all needed fields defined\"\r\n\t\t\treturn\r\n\r\n\t\t{dir, stub, ext} = parseSource(filePath)\r\n\r\n\tif (ext != '.js')\r\n\t\tif debug\r\n\t\t\tconsole.log \"CANNOT MAP: ext = '#{ext}'\"\r\n\t\treturn\r\n\r\n\tmapFilePath = \"#{dir}/#{stub}.js.map\"\r\n\tif ! existsSync(mapFilePath)\r\n\t\tif debug\r\n\t\t\tconsole.log \"CANNOT MAP - MISSING MAP FILE #{mapFilePath}\"\r\n\t\treturn\r\n\r\n\tif isEmpty(dir) || isEmpty(stub)\r\n\t\tif debug\r\n\t\t\tconsole.log \"CANNOT MAP - dir='#{dir}', stub='#{stub}'\"\r\n\t\treturn\r\n\r\n\trawMap = getRawMap(mapFilePath)   # get from cache if available\r\n\tif debug\r\n\t\tconsole.log \"MAP FILE FOUND: '#{mapFilePath}'\"\r\n\r\n\t# --- hMapped is {source, line, column, name}\r\n\thMapped = mapPos rawMap, {line, column}\r\n\treturn hMapped\r\n\r\n\thMapped = undef\r\n"
  ]
}