{
  "version": 3,
  "file": "source-map.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\source-map.coffee"
  ],
  "names": [],
  "mappings": "AAAmB;AAAA,IAAA,UAAA,EAAA;;AAEnB,OAAA;EAAQ,YAAR;EAAsB,UAAtB;CAAA,MAAA;;AACA,OAAA;EAAQ,iBAAR;CAAA,MAAA;;AACA,OAAO,IAAP,MAAA;;AAEA,OAAA;EACC,KADD;EACQ,IADR;EACc,OADd;EACuB,UADvB;EACmC,UADnC;EAEC,OAFD;EAEU,QAFV;EAEoB,QAFpB;CAAA,MAAA;;AAIA,OAAA;EAAQ,SAAR;CAAA,MAAA;;AAEA,WAAA,GAAc,CAAA,EAZK;;;;AAgBnB,OAAA,IAAO,SAAA,GAAY,CAAC,OAAD,CAAA,GAAA;AAEnB,MAAA;EAAC,IAAG,WAAW,CAAC,cAAZ,CAA2B,OAA3B,CAAH;AACC,WAAO,WAAW,CAAC,OAAD,EADnB;GAAA,MAAA;IAGC,MAAA,GAAS,YAAA,CAAa,OAAb,EAAsB,MAAtB;IACT,WAAW,CAAC,OAAD,CAAX,GAAuB;AACvB,WAAO,OALR;;AAFkB,EAhBA;;;AA2BnB,UAAA,GAAa,CAAC,IAAD,EAAO,KAAG,KAAV,CAAA,GAAA;AAIZ,SAAM,CAAE,IAAA,CAAA,CAAR;IACC,IAAA,CAAA;EADD;EAGA,IAAG,CAAE,IAAA,CAAA,CAAL;;IAEC,UAAA,CAAW,UAAU,CAAC,IAAX,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,EAA5B,CAAX,EAA4C,GAA5C,EAFD;GAAA,MAAA;IAIC,EAAA,CAAA,EAJD;;AAPY,EA3BM;;;;AA4CnB,OAAA,IAAO,YAAA,GAAe,CAAC,MAAD,EAAS,QAAM,KAAf,CAAA,GAAA;AACtB,MAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,QAAA,EAAA,QAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,IAAA;;;;;;;;;;;;;EAaC,CAAA,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,QAAjB,EAA2B,QAA3B,EAAqC,IAArC,EAA2C,MAA3C,CAAA,GAAqD,MAArD;EAEA,IAAG,CAAE,SAAA,CAAU,IAAV,EAAgB;IAAC,GAAA,EAAK;EAAN,CAAhB,CAAF,IAA+B,CAAE,SAAA,CAAU,MAAV,EAAkB;IAAC,GAAA,EAAK;EAAN,CAAlB,CAApC;IACC,IAAG,KAAH;MACC,OAAO,CAAC,GAAR,CAAY,CAAA,kBAAA,CAAA,CAAqB,IAArB,CAAA,SAAA,CAAA,CAAqC,MAArC,CAAA,CAAZ,EADD;;AAEA,WAHD;;EAMA,IAAG,CAAE,UAAA,CAAW,GAAX,EAAgB,IAAhB,EAAsB,GAAtB,CAAL;;IAEC,IAAG,UAAA,CAAW,QAAX,CAAA,IAAwB,UAAA,CAAW,GAAX,EAAgB,QAAhB,CAA3B;MACC,QAAA,GAAW,CAAA,CAAA,CAAG,GAAH,CAAA,CAAA,CAAA,CAAU,QAAV,CAAA,EADZ;;IAEA,IAAG,UAAA,CAAW,QAAX,CAAH;MACC,IAAG,KAAH;QACC,OAAO,CAAC,GAAR,CAAY,2CAAZ,EADD;;AAEA,aAHD;;IAKA,CAAA,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,CAAA,GAAmB,WAAA,CAAY,QAAZ,CAAnB,EATD;;EAWA,IAAI,GAAA,KAAO,KAAX;IACC,IAAG,KAAH;MACC,OAAO,CAAC,GAAR,CAAY,CAAA,mBAAA,CAAA,CAAsB,GAAtB,CAAA,CAAA,CAAZ,EADD;;AAEA,WAHD;;EAKA,OAAA,GAAU,CAAA,CAAA,CAAG,GAAH,CAAA,CAAA,CAAA,CAAU,IAAV,CAAA,OAAA;EACV,IAAG,CAAE,UAAA,CAAW,OAAX,CAAL;IACC,IAAG,KAAH;MACC,OAAO,CAAC,GAAR,CAAY,CAAA,8BAAA,CAAA,CAAiC,OAAjC,CAAA,CAAZ,EADD;;AAEA,WAHD;;EAKA,IAAG,OAAA,CAAQ,GAAR,CAAA,IAAgB,OAAA,CAAQ,IAAR,CAAnB;IACC,IAAG,KAAH;MACC,OAAO,CAAC,GAAR,CAAY,CAAA,kBAAA,CAAA,CAAqB,GAArB,CAAA,SAAA,CAAA,CAAoC,IAApC,CAAA,CAAA,CAAZ,EADD;;AAEA,WAHD;;EAKA,MAAA,GAAS,SAAA,CAAU,OAAV,EAhDV;EAiDC,IAAG,KAAH;IACC,OAAO,CAAC,GAAR,CAAY,CAAA,iBAAA,CAAA,CAAoB,OAApB,CAAA,CAAA,CAAZ,EADD;GAjDD;;EAsDC,OAAA,GAAU,iBAAiB,CAAC,IAAlB,CAAuB,MAAvB,EAA+B,IAA/B,EAAqC,CAAC,QAAD,CAAA,GAAA;AAChD,QAAA;IAAE,OAAA,GAAU,QAAQ,CAAC,mBAAT,CAA6B,MAA7B;IAEV,IAAG,OAAA,CAAQ,OAAO,CAAC,IAAhB,CAAH;MACC,MAAM,CAAC,OAAP,GAAiB;MACjB,MAAM,CAAC,SAAP,GAAmB;MACnB,MAAM,CAAC,WAAP,GAAqB,CAAA,CAAA,CAAG,IAAH,CAAA,CAAA,CAAU,GAAV,CAAA;MACrB,MAAM,CAAC,WAAP,GAAqB,CAAA,CAAA,CAAG,GAAH,CAAA,CAAA,CAAA,CAAU,IAAV,CAAA,GAAA;MAErB,MAAM,CAAC,QAAP,GAAkB,CAAA,CAAA,CAAG,GAAH,CAAA,CAAA,CAAA,CAAU,IAAV,CAAA,OAAA;MAClB,MAAM,CAAC,IAAP,GAAc,OAAO,CAAC;aACtB,MAAM,CAAC,MAAP,GAAgB,OAAO,CAAC,OARzB;KAAA,MAAA;MAUC,OAAO,CAAC,GAAR,CAAY,aAAZ;MACA,OAAO,CAAC,GAAR,CAAY,UAAZ;MACA,OAAO,CAAC,GAAR,CAAY,MAAZ;MACA,OAAO,CAAC,GAAR,CAAY,cAAZ;MACA,OAAO,CAAC,GAAR,CAAY,MAAZ;MACA,OAAO,CAAC,GAAR,CAAY,SAAZ;aACA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAhBD;;EAH8C,CAArC;EAqBV,KAAA,GAAQ;EACR,IAAA,GAAO,CAAA,CAAA,GAAA;IACN,IAAG,OAAA,CAAQ,MAAM,CAAC,OAAf,CAAH;MACC,aAAA,CAAc,KAAd,EADD;;EADM;EAKP,KAAA,GAAQ,WAAA,CAAY,IAAZ,EAAkB,GAAlB;EAER,IAAG,KAAH;IACC,OAAO,CAAC,GAAR,CAAY,SAAZ;IACA,OAAO,CAAC,GAAR,CAAY,MAAZ,EAFD;;AAGA,SAAO,QAAA,CAAS,MAAT;AAvFc",
  "sourcesContent": [
    "# source-map.coffee\r\n\r\nimport {readFileSync, existsSync} from 'node:fs'\r\nimport {SourceMapConsumer} from 'source-map'\r\nimport Sync from 'node-sync'\r\n\r\nimport {\r\n\tundef, pass, defined, notdefined, alldefined,\r\n\tisEmpty, nonEmpty, deepCopy,\r\n\t} from '@jdeighan/base-utils/ll-utils'\r\nimport {isInteger} from '@jdeighan/base-utils'\r\n\r\nhSourceMaps = {}    # { filepath => rawMap, ... }\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport getRawMap = (mapFile) =>\r\n\r\n\tif hSourceMaps.hasOwnProperty(mapFile)\r\n\t\treturn hSourceMaps[mapFile]\r\n\telse\r\n\t\trawMap = readFileSync mapFile, 'utf8'\r\n\t\thSourceMaps[mapFile] = rawMap\r\n\t\treturn rawMap\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nblockUntil = (func, cb=undef) =>\r\n\t# --- Block until func returns a true value\r\n\t#     cb is called if defined\r\n\r\n\twhile ! func()\r\n\t\tpass()\r\n\r\n\tif ! func()\r\n\t\t# --- check condition every 100 ms.\r\n\t\tsetTimeout blockUntil.bind(null, func, cb), 100\r\n\telse\r\n\t\tcb()\r\n\treturn\r\n\r\n# Usage:   blockUntil(() => return cond, () => console.log('done'))\r\n# ---------------------------------------------------------------------------\r\n\r\nexport mapSourcePos = (hFrame, debug=false) =>\r\n\t#     hFrame must have keys:\r\n\t#        line, column - both non-negative integers\r\n\t#        EITHER:\r\n\t#           dir, stub, ext\r\n\t#           dir, fileName\r\n\t#           filePath\r\n\r\n\t# --- Can map only if:\r\n\t#        1. ext is .js\r\n\t#        2. <stub>.coffee and <stub>.js.map exist in dir\r\n\t#\r\n\t# --- Modifies hFrame if mapped\r\n\r\n\t{dir, stub, ext, fileName, filePath, line, column} = hFrame\r\n\r\n\tif ! isInteger(line, {min: 0}) || ! isInteger(column, {min: 0})\r\n\t\tif debug\r\n\t\t\tconsole.log \"CANNOT MAP - line=#{line}, column=#{column}\"\r\n\t\treturn\r\n\r\n\t# --- Ensure that dir, stub, ext are defined\r\n\tif ! alldefined(dir, stub, ext)\r\n\t\t# --- Make sure filePath is defined\r\n\t\tif notdefined(filePath) && alldefined(dir, fileName)\r\n\t\t\tfilePath = \"#{dir}/#{fileName}\"\r\n\t\tif notdefined(filePath)\r\n\t\t\tif debug\r\n\t\t\t\tconsole.log \"CANNOT MAP: Not all needed fields defined\"\r\n\t\t\treturn\r\n\r\n\t\t{dir, stub, ext} = parseSource(filePath)\r\n\r\n\tif (ext != '.js')\r\n\t\tif debug\r\n\t\t\tconsole.log \"CANNOT MAP: ext = '#{ext}'\"\r\n\t\treturn\r\n\r\n\tmapFile = \"#{dir}/#{stub}.js.map\"\r\n\tif ! existsSync(mapFile)\r\n\t\tif debug\r\n\t\t\tconsole.log \"CANNOT MAP - MISSING MAP FILE #{mapFile}\"\r\n\t\treturn\r\n\r\n\tif isEmpty(dir) || isEmpty(stub)\r\n\t\tif debug\r\n\t\t\tconsole.log \"CANNOT MAP - dir='#{dir}', stub='#{stub}'\"\r\n\t\treturn\r\n\r\n\trawMap = getRawMap(mapFile)   # get from cache if available\r\n\tif debug\r\n\t\tconsole.log \"MAP FILE FOUND: '#{mapFile}'\"\r\n\r\n\t# --- WAS await SourceMapConsumer...\r\n\r\n\tpromise = SourceMapConsumer.with rawMap, null, (consumer) =>\r\n\t\thMapped = consumer.originalPositionFor(hFrame)\r\n\r\n\t\tif defined(hMapped.line)\r\n\t\t\thFrame.js_line = line\r\n\t\t\thFrame.js_column = column\r\n\t\t\thFrame.js_fileName = \"#{stub}#{ext}\"\r\n\t\t\thFrame.js_filePath = \"#{dir}/#{stub}.js\"\r\n\r\n\t\t\thFrame.filePath = \"#{dir}/#{stub}.coffee\"\r\n\t\t\thFrame.line = hMapped.line\r\n\t\t\thFrame.column = hMapped.column\r\n\t\telse\r\n\t\t\tconsole.log \"MAP FAILED:\"\r\n\t\t\tconsole.log \"RAW MAP:\"\r\n\t\t\tconsole.log rawMap\r\n\t\t\tconsole.log \"STACK FRAME:\"\r\n\t\t\tconsole.log hFrame\r\n\t\t\tconsole.log \"MAPPED:\"\r\n\t\t\tconsole.log hMapped\r\n\r\n\tintvl = undef\r\n\tfunc = () =>\r\n\t\tif defined(hFrame.js_line)\r\n\t\t\tclearInterval(intvl)\r\n\t\t\treturn\r\n\r\n\tintvl = setInterval func, 100\r\n\r\n\tif debug\r\n\t\tconsole.log \"MAP TO:\"\r\n\t\tconsole.log hFrame\r\n\treturn deepCopy(hFrame)\r\n"
  ]
}