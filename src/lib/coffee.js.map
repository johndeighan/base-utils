{
  "version": 3,
  "file": "coffee.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\coffee.coffee"
  ],
  "names": [],
  "mappings": "AAAe;AAEf,OAAO,EAAP,MAAA;;AACA,OAAO,YAAP,MAAA;;AAEA,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,UAD7B;EACyC,OADzC;EAEC,EAFD;EAEK,KAFL;EAEY,UAFZ;CAAA,MAAA;;AAIA,OAAA;EACC,MADD;EACS,KADT;CAAA,MAAA;;AAGA,OAAA;EACC,QADD;EACW,SADX;EACsB,GADtB;CAAA,MAAA;;AAGA,OAAA;EAAQ,UAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,MAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,IAAR;EAAc,OAAd;CAAA,MAAA,0BAjBe;;;AAqBf,OAAA,IAAO,IAAA,GAAO,QAAA,CAAC,UAAD,EAAa,WAAS,KAAtB,CAAA;AAEd,MAAA,CAAA,EAAA;EAAC,UAAA,GAAa,OAAA,CAAQ,UAAR,EAAd;EACC,IAAG,OAAA,CAAQ,QAAR,CAAH;IACC,MAAA,CAAO,EAAE,CAAC,UAAH,CAAc,QAAd,CAAP,EAAgC,CAAA,YAAA,CAAA,CAAe,QAAf,CAAA,CAAhC;IACA,CAAA,GAAI,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAiC;MACpC,IAAA,EAAM,IAD8B;MAEpC,MAAA,EAAQ,KAF4B;MAGpC,QAAA,EAAU,QAH0B;MAIpC,SAAA,EAAW,IAJyB;MAKpC,QAAA,EAAU,KAL0B;IAAA,CAAjC;IAOJ,MAAA,GAAS,CAAC,CAAC;IACX,MAAA,CAAO,OAAA,CAAQ,MAAR,CAAP,EAAwB,sBAAxB;AACA,WAAO,CAAC,MAAM,CAAC,IAAP,CAAA,CAAD,EAAgB,CAAC,CAAC,WAAlB,EAXR;GAAA,MAAA;IAaC,MAAA,GAAS,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAiC;MACzC,IAAA,EAAM,IADmC;MAEzC,MAAA,EAAQ,KAFiC;MAGzC,SAAA,EAAW;IAH8B,CAAjC;IAKT,MAAA,CAAO,OAAA,CAAQ,MAAR,CAAP,EAAwB,sBAAxB;AACA,WAAO,CAAC,MAAM,CAAC,IAAP,CAAA,CAAD,EAAgB,KAAhB,EAnBR;;AAHa,EArBC;;;AA+Cf,OAAA,IAAO,QAAA,GAAW,QAAA,CAAC,QAAD,CAAA;AAElB,MAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA;EAAC,CAAA,CAAC,SAAD,EAAY,MAAZ,CAAA,GAAsB,YAAA,CAAa,QAAb,CAAtB;EACA,CAAC,MAAD,EAAS,SAAT,CAAA,GAAsB,IAAA,CAAK,MAAL,EAAa,QAAb;EACtB,IAAA,CAAK,MAAL,EAAa,OAAA,CAAQ,QAAR,EAAkB,KAAlB,CAAb;EACA,IAAA,CAAK,SAAL,EAAgB,OAAA,CAAQ,QAAR,EAAkB,SAAlB,CAAhB;AALiB,EA/CH;;;AAyDf,OAAA,IAAO,eAAA,GAAkB,CAAC,IAAD,CAAA,GAAA;EAExB,UAAA,CAAW,IAAX,EAAiB,KAAA,CAChB,2BADgB,EAEhB,4BAFgB,CAAjB;AAIA,SAAO;AANiB,EAzDV;;;AAmEf,OAAA,IAAO,SAAA,GAAY,CAAC,IAAD,EAAO,OAAK,KAAZ,CAAA,GAAA;AAEnB,MAAA;EAAC,IAAG,CAAC,IAAJ;IACC,eAAA,CAAgB,IAAhB,EADD;;EAEA,OAAA,GAAU,CACT,MADS,EAET,QAFS,EAGT,MAHS,EAIT,MAJS,EAKT,UALS,EAMT,OANS;AAQV,SAAO,MAAA,CAAO,IAAP,EAAa;IAAC,QAAA,EAAU;EAAX,CAAb;AAZW,EAnEJ;;;;;;AAsFf,OAAA,IAAO,KAAA,GAAQ,QAAA,CAAC,UAAD,EAAa,WAAS,CAAA,CAAtB,CAAA;AAEf,MAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,EAAA;EAAC,QAAA,CAAS,OAAT,EAAkB,UAAlB;EACA,MAAA,CAAO,UAAA,CAAW,UAAX,CAAP,EAA+B,sBAA/B;EACA,CAAA,CAAC,IAAD,EAAO,MAAP,CAAA,GAAiB,UAAA,CAAW,QAAX,EAAqB;IACrC,IAAA,EAAM,KAD+B;IAErC,MAAA,EAAQ;EAF6B,CAArB,CAAjB;AAIA;IACC,IAAA,GAAO,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAiC;MAAC,GAAA,EAAK;IAAN,CAAjC;IACP,MAAA,CAAO,OAAA,CAAQ,IAAR,CAAP,EAAsB,eAAtB,EAFD;GAGA,aAAA;IAAM;IACL,GAAA,CAAI,CAAA,uBAAA,CAAA,CAA0B,GAAG,CAAC,OAA9B,CAAA,CAAJ;IACA,GAAA,CAAI,GAAG,CAAC,MAAJ,CAAW,EAAX,CAAJ;IACA,GAAA,CAAI,CAAA,CAAA,CAAG,EAAA,CAAG,UAAH,CAAH,CAAA,CAAJ;IACA,GAAA,CAAI,GAAG,CAAC,MAAJ,CAAW,EAAX,CAAJ;IACA,KAAA,CAAM,CAAA,uBAAA,CAAA,CAA0B,GAAG,CAAC,OAA9B,CAAA,CAAN,EALD;;AAQA,UAAO,MAAP;AAAA,SACM,KADN;MAEE,IAAG,CAAC,IAAJ;QACC,eAAA,CAAgB,IAAhB,EADD;;MAEA,GAAA,GAAM;AAHF;AADN,SAKM,MALN;MAME,GAAA,GAAM,SAAA,CAAU,IAAV,EAAgB,IAAhB;AADF;AALN;MAQE,KAAA,CAAM,gBAAN;AARF;EASA,SAAA,CAAU,OAAV,EAAmB,GAAnB;AACA,SAAO;AA7BO,EAtFA;;;AAuHf,OAAA,IAAO,SAAA,GAAY,QAAA,CAAC,UAAD,EAAa,QAAb,EAAuB,WAAS,CAAA,CAAhC,CAAA;AAEnB,MAAA;EAAC,IAAA,GAAO,KAAA,CAAM,UAAN,EAAkB,QAAlB;EACP,OAAA,CAAQ,IAAR,EAAc,QAAd;AAHkB",
  "sourcesContent": [
    "# coffee.coffee\r\n\r\nimport fs from 'fs'\r\nimport CoffeeScript from 'coffeescript'\r\n\r\nimport {\r\n\tundef, defined, notdefined, getOptions, toBlock,\r\n\tOL, words, removeKeys,\r\n\t} from '@jdeighan/base-utils'\r\nimport {\r\n\tassert, croak,\r\n\t} from '@jdeighan/base-utils/exceptions'\r\nimport {\r\n\tdbgEnter, dbgReturn, dbg,\r\n\t} from '@jdeighan/base-utils/debug'\r\nimport {isUndented} from '@jdeighan/base-utils/indent'\r\nimport {toTAML} from '@jdeighan/base-utils/taml'\r\nimport {barf, barfAST} from '@jdeighan/base-utils/fs'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brew = (coffeeCode, filePath=undef) ->\r\n\r\n\tcoffeeCode = toBlock(coffeeCode)  # allow passing array\r\n\tif defined(filePath)\r\n\t\tassert fs.existsSync(filePath), \"Not a file: #{filePath}\"\r\n\t\th = CoffeeScript.compile(coffeeCode, {\r\n\t\t\tbare: true\r\n\t\t\theader: false\r\n\t\t\tfilename: filePath\r\n\t\t\tsourceMap: true\r\n\t\t\tfilename: undef     # must be filled in\r\n\t\t\t})\r\n\t\tjsCode = h.js\r\n\t\tassert defined(jsCode), \"No JS code generated\"\r\n\t\treturn [jsCode.trim(), h.v3SourceMap]\r\n\telse\r\n\t\tjsCode = CoffeeScript.compile(coffeeCode, {\r\n\t\t\tbare: true\r\n\t\t\theader: false\r\n\t\t\tsourceMap: false\r\n\t\t\t})\r\n\t\tassert defined(jsCode), \"No JS code generated\"\r\n\t\treturn [jsCode.trim(), undef]\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brewFile = (filePath) ->\r\n\r\n\t{hMetaData, lLines} = readTextFile(filePath)\r\n\t[jsCode, sourceMap] = brew lLines, filePath\r\n\tbarf jsCode, withExt(filePath, '.js')\r\n\tbarf sourceMap, withExt(filePath, '.js.map')\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport removeExtraKeys = (hAST) =>\r\n\r\n\tremoveKeys hAST, words(\r\n\t\t'loc range extra start end',\r\n\t\t'directives comments tokens',\r\n\t\t)\r\n\treturn hAST\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport astToTAML = (hAST, full=false) =>\r\n\r\n\tif !full\r\n\t\tremoveExtraKeys hAST\r\n\tlSortBy = [\r\n\t\t'type'\r\n\t\t'params'\r\n\t\t'body'\r\n\t\t'left'\r\n\t\t'operator'\r\n\t\t'right'\r\n\t\t]\r\n\treturn toTAML(hAST, {sortKeys: lSortBy})\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- Valid options:\r\n#        full - retain all keys\r\n#        format - undef=JS value, else 'taml'\r\n\r\nexport toAST = (coffeeCode, hOptions={}) ->\r\n\r\n\tdbgEnter \"toAST\", coffeeCode\r\n\tassert isUndented(coffeeCode), \"code has indentation\"\r\n\t{full, format} = getOptions hOptions, {\r\n\t\tfull: false\r\n\t\tformat: undef\r\n\t\t}\r\n\ttry\r\n\t\thAST = CoffeeScript.compile(coffeeCode, {ast: true})\r\n\t\tassert defined(hAST), \"hAST is empty\"\r\n\tcatch err\r\n\t\tLOG \"ERROR in CoffeeScript: #{err.message}\"\r\n\t\tLOG '-'.repeat(78)\r\n\t\tLOG \"#{OL(coffeeCode)}\"\r\n\t\tLOG '-'.repeat(78)\r\n\t\tcroak \"ERROR in CoffeeScript: #{err.message}\"\r\n\r\n\r\n\tswitch format\r\n\t\twhen undef\r\n\t\t\tif !full\r\n\t\t\t\tremoveExtraKeys hAST\r\n\t\t\tast = hAST\r\n\t\twhen 'taml'\r\n\t\t\tast = astToTAML hAST, full\r\n\t\telse\r\n\t\t\tcroak \"Invalid format\"\r\n\tdbgReturn \"toAST\", ast\r\n\treturn ast\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport toASTFile = (coffeeCode, filePath, hOptions={}) ->\r\n\r\n\thAST = toAST(coffeeCode, hOptions)\r\n\tbarfAST hAST, filePath\r\n\treturn\r\n"
  ]
}