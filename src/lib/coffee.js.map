{
  "version": 3,
  "file": "coffee.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\coffee.coffee"
  ],
  "names": [],
  "mappings": "AAAe;AAEf,OAAO,MAAP,MAAA;;AACA,OAAO,EAAP,MAAA;;AACA,OAAO,YAAP,MAAA;;AAEA,OAAA;EAAQ,KAAR;EAAe,OAAf;EAAwB,UAAxB;EAAoC,OAApC;CAAA,MAAA;;AACA,OAAA;EAAQ,IAAR;CAAA,MAAA,0BAPe;;;AAWf,OAAA,IAAO,IAAA,GAAO,QAAA,CAAC,UAAD,EAAa,WAAS,KAAtB,CAAA;AAEd,MAAA,CAAA,EAAA;EAAC,UAAA,GAAa,OAAA,CAAQ,UAAR,EAAd;EACC,IAAG,OAAA,CAAQ,QAAR,CAAH;IACC,MAAA,CAAO,EAAE,CAAC,UAAH,CAAc,QAAd,CAAP,EAAgC,CAAA,YAAA,CAAA,CAAe,QAAf,CAAA,CAAhC;IACA,CAAA,GAAI,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAiC;MACpC,IAAA,EAAM,IAD8B;MAEpC,MAAA,EAAQ,KAF4B;MAGpC,QAAA,EAAU,QAH0B;MAIpC,SAAA,EAAW,IAJyB;MAKpC,QAAA,EAAU,KAL0B;IAAA,CAAjC;IAOJ,MAAA,GAAS,CAAC,CAAC;IACX,MAAA,CAAO,OAAA,CAAQ,MAAR,CAAP,EAAwB,sBAAxB;AACA,WAAO,CAAC,MAAM,CAAC,IAAP,CAAA,CAAD,EAAgB,CAAC,CAAC,WAAlB,EAXR;GAAA,MAAA;IAaC,MAAA,GAAS,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAiC;MACzC,IAAA,EAAM,IADmC;MAEzC,MAAA,EAAQ,KAFiC;MAGzC,SAAA,EAAW;IAH8B,CAAjC;IAKT,MAAA,CAAO,OAAA,CAAQ,MAAR,CAAP,EAAwB,sBAAxB;AACA,WAAO,CAAC,MAAM,CAAC,IAAP,CAAA,CAAD,EAAgB,KAAhB,EAnBR;;AAHa,EAXC;;;AAqCf,OAAA,IAAO,QAAA,GAAW,QAAA,CAAC,QAAD,CAAA;AAElB,MAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA;EAAC,CAAA,CAAC,SAAD,EAAY,MAAZ,CAAA,GAAsB,YAAA,CAAa,QAAb,CAAtB;EACA,CAAC,MAAD,EAAS,SAAT,CAAA,GAAsB,IAAA,CAAK,MAAL,EAAa,QAAb;EACtB,IAAA,CAAK,MAAL,EAAa,OAAA,CAAQ,QAAR,EAAkB,KAAlB,CAAb;EACA,IAAA,CAAK,SAAL,EAAgB,OAAA,CAAQ,QAAR,EAAkB,SAAlB,CAAhB;AALiB",
  "sourcesContent": [
    "# coffee.coffee\r\n\r\nimport assert from 'node:assert'\r\nimport fs from 'fs'\r\nimport CoffeeScript from 'coffeescript'\r\n\r\nimport {undef, defined, getOptions, toBlock} from '@jdeighan/base-utils'\r\nimport {barf} from '@jdeighan/base-utils/fs'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brew = (coffeeCode, filePath=undef) ->\r\n\r\n\tcoffeeCode = toBlock(coffeeCode)  # allow passing array\r\n\tif defined(filePath)\r\n\t\tassert fs.existsSync(filePath), \"Not a file: #{filePath}\"\r\n\t\th = CoffeeScript.compile(coffeeCode, {\r\n\t\t\tbare: true\r\n\t\t\theader: false\r\n\t\t\tfilename: filePath\r\n\t\t\tsourceMap: true\r\n\t\t\tfilename: undef     # must be filled in\r\n\t\t\t})\r\n\t\tjsCode = h.js\r\n\t\tassert defined(jsCode), \"No JS code generated\"\r\n\t\treturn [jsCode.trim(), h.v3SourceMap]\r\n\telse\r\n\t\tjsCode = CoffeeScript.compile(coffeeCode, {\r\n\t\t\tbare: true\r\n\t\t\theader: false\r\n\t\t\tsourceMap: false\r\n\t\t\t})\r\n\t\tassert defined(jsCode), \"No JS code generated\"\r\n\t\treturn [jsCode.trim(), undef]\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brewFile = (filePath) ->\r\n\r\n\t{hMetaData, lLines} = readTextFile(filePath)\r\n\t[jsCode, sourceMap] = brew lLines, filePath\r\n\tbarf jsCode, withExt(filePath, '.js')\r\n\tbarf sourceMap, withExt(filePath, '.js.map')\r\n\treturn\r\n"
  ]
}